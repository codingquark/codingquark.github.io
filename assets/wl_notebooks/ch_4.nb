(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2299741,      44567]
NotebookOptionsPosition[   2272602,      44131]
NotebookOutlinePosition[   2273072,      44149]
CellTagsIndexPosition[   2273029,      44146]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Initial Exploration", "Title",
 CellChangeTimes->{{3.882420410330676*^9, 
  3.882420414261879*^9}},ExpressionUUID->"17803023-511f-4f14-85c5-\
853293f617ff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomInteger", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", " ", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.881975306839876*^9, 3.881975326008924*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"2deaf6b5-79f4-48bb-b864-cd2515fb51e6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", 
   ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", 
   "0", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.8819753149365664`*^9, 3.88197532678483*^9}},
 CellLabel->"Out[5]=",ExpressionUUID->"ca262a28-8db6-486c-b55a-e2d270004bc7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomVariate", "[", 
  RowBox[{"UniformDistribution", "[", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.88197544227627*^9, 3.881975443431538*^9}, {
  3.881975639764489*^9, 3.881975660858801*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"f469d9e6-1fc3-415b-b48b-eb825d67935b"],

Cell[BoxData["0.6531459162175581`"], "Output",
 CellChangeTimes->{{3.881975652934228*^9, 3.8819756611906233`*^9}},
 CellLabel->"Out[7]=",ExpressionUUID->"25a08af8-80e5-425c-9052-5bdd9ec19389"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Count", "[", 
  RowBox[{
   RowBox[{"RandomInteger", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", " ", "20"}], "]"}], ",", " ", 
   "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.88197638210249*^9, 3.8819764096963377`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"8946f746-32c5-4c45-af91-1be6973a6935"],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{{3.8819764057952833`*^9, 3.881976409999563*^9}},
 CellLabel->"Out[25]=",ExpressionUUID->"4073468f-6d93-4991-a7e4-377133713209"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Accumulate", "[", 
      RowBox[{"RandomReal", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "250"}], "]"}], "]"}], 
     ",", 
     RowBox[{"{", "3", "}"}]}], "]"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<one\>\"", ",", "\"\<two\>\"", ",", "\"\<three\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[26]:=",ExpressionUUID->"11172112-ac22-43bc-8828-88062bd73927"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1:eJztm2lcjV30909potBkSpqkkiQ0iNSKkKR5Hk/TaTqnzEIUorhJFJpUyNBE
kSSpY6pEpLtIpmZFksQtJf/9f1o7r57P53nxvDy98fnZ177W3muvva7re62z
Fb1Dbfz4GQzGiCCD8b//jv71GeUXvNcsjaktx/8A5iSfh/IjvahFYLptiqlF
STdqcWCEzEtsaPuBWhp6doVPHFDrQj0dqtLjXxVnNqGWhb7J4pEGZ58YjWoF
uFjG/qyo9w21EqxOSev6afsfamUo/pRruSblD2oViLprOmHHZHq9GvSkS763
vUq1OlSxr34bn/0GtQaw1PWzTd72o9YEBT7Tw1kLn6LWAvbJpoH43hYc30KI
Yayrnr3yK+pFUOWsdrd54DPqxaB29Zkwc/gFam0oNfsk0pVDr9cBbk0p8+bH
VtS6cPHsZt9MiQHUetBzp804LOsP6iXAKRv/VfwQP3dU60PmgpUhDtZD2L4U
rhU6zb/p8x/qZRCdcvRC2zl6vQHMSYvafbBAGPVyuC5z/pDSCNWGkPsxfpGs
wATURnCHK1lZqSmAGmCDr3NzujNjVEcCJLgvXbz3JW03hsOtgXJRheOw3Rhe
8117kmgliO0rwOTWFetXEaLYvgLeSjloX0yZiO0rgT9eaXK+mTi2rwTH+6pD
V2oksN0Erqzxqr8bI4btJqByy36RqgTej7EKbv/3y5gvH8cTuQrkZsWGTQik
9ldDk9uLC4HJOL/I1WDksWyD4wM6/zUw62a2/3kfOr81wD2j2XtI6jv60xQc
in8l7nb7NaojTaHV/sD+JX/o/NdCljk0sSNp/7WgaHr+4W5F9AfDDPZNs0k7
v/In9jcDhz+rvV/m9+H91wFcHRoXdHME29dB1qFGhtVGOn5z2B0V+GfpQjp/
c9hWHh2U9Iq2r4fXYlLzLupT/66HTTJZFVZA2y3gWH6XotYZuj4WcK4mZxNn
Bh2/JSTe+DR8o5z6xxKezdwZ1iA9HtutwGhmADP8jsioBisY7xsxd6IKtWcF
nEGtndzLOD6uFcxNy2kt0qbrZw3vnTKZU36hBmuIrfEUdThL19saVOTrOr1N
8H5ca6hXGQq0+yiE/W0gV/BqZxUbxw82EN7Q7vCt9Tf6ywa+55VebebD67k2
8KBUR/zQafQnwxZORdw3nvYI8w/YQtr9uawFP+h62ILIk8rT72Q6RjXXFkD1
5HJx93bsbwe/vu2JKf+O+wvswC7D4JXxcdSRdhBTpm8seAbzH9cOzKe5+ctl
f8P+9lCULcD5xh3G/vZwXSzojFEiH87fHlzVb6dsvonxyLWHjc11HdP20v3h
AIIf+BLys9G/4AACM7bzZdZS/zlAkcS462Y5eD3XAQ7rXbNSvzYJ+zvC4l39
u73bqf8dIY/1+/7711LY3xHC3/ZF5HNRcx3BUFFV2easJPZ3ggCPGZHjXqA9
cAIDs5S2J+F0/Z1Ai5m72kge27lOsMbg8125mThehjPstZAMTN1J+zuD2Q+D
lSVOGF+RzlDiqhyV0IPxx3UG7z+z4/qy6Phd4Mmc0po5dng9uMCBr66/BxbQ
/eACU47f+b1TF+fHdYHLCrYvZV7gfBiukC9YmHw6YRr2d4V2Mf0bTUWoI11B
894u/UlGU7G/K9RWR5ywdqPzd4P+zKGKVjFp7O8GywNFnebao71INyhbEx/i
to36zw2mypQb96tQ++6Q2BI1RzKVzt8dsrwEX4dVTsb+7nAqdcWladFoj+sO
UV8P7r3UR+17wLZL54rW9lD7HnA6XWTKyMfp2N8DvPceNCj4DzXXA3rCFb/2
XJqC/T3hePFG+ckOqMET7ErC2qMtUUd6AnfA5oe2LWquJzyBHaZm2+n4mSCb
+znd8jW2KzCBr9b6vMVN6k8mdIU23j3ajONjMmGwIMw4IRp1JBPm8fVICFnj
9RlM8gC5k+xeRcfLhBiNIs+yemxvZsKq7b3+z4+jZniBn+71nzY/8H4KXlC0
pE6leD217wU9FV0VPh14P6YXpGZu/bwlSwbte0Hi59ll9+Zhe4YXlJgV/nqw
ga63F/xzdB3ryNsZaJ/0l1oWPeck9md4A/+hsqnXheTQvjcs+jzs+lx7Jtr3
Bhk+K4ELhdif6Q31ElJpMXepf0n/lFdZ5Yk4/gxvSGi4LuFuiZrrDdmO9Smc
YNTN3uAmvjpN0oD63wfgxtKc7eUYbwo+8KC7+fnqEGwHHzDszq3uZlP/+8CH
bOuhrc9pfPuAb9UcYSFXHF+GDzxqVPKZ14Sa6wM2xj8Lb9bifJt9YLivz7lr
JfqL4QsG4++mpxXg9Qq+UDvT4Gf8D7wefGF+uW2wZzH6h+kLQtUK7KQuebTv
C+I3J1x7oiaL9n3hy1OX0KAa9B/XFxq2e9/zEqb2fWGV9NTB+XJ0/f2gt3r2
eGYpzlfBD0SFUjXuDOD6gR9cuHJ6jl849b8fKDzmX7rnHfW/HzjsnaecH0fj
zw+eLBBtzn+HmusHsQtnXel9RePPD+ye1YH+Rrr+LDh1tVdZxwG1Agu0vxQp
pAvS9WeBg7tFwe54bGeygL1pQcHBtdgeyQLzj1J6NzZS/7Mgc9t1rRrzWWif
BU93bNS6Ok8B7bOgolXV7dkh1Ax/UIs90yXHRn8q+EOuxJQH7Ab0J/gDV1Lk
5a5GvB/THxJkdygz5Wj8+0OR25YWFVM6f9K+b+GhzcF0/f2h4N0a1/w/dP7+
YC4we8VPfvQvIwAkO36+3zeJ+j8AXkppytik0PgLgBO/bB9enY/5jRkAjW/W
JvJJ0/wYAMo9Uv+6C2I+zwgAS+8QqbIAIbQfADNHuHf+iOP7SHMAtErLT1hp
TN/PAoHFZ/hD7h98/1AIBNnqsm/p0fR5EAgDeypHWkup/UAQsIuOCc2n+ScQ
1BRH5M2D6fwD4V1VtYDXH/QPNxAg98oBx0H0Z3MgmPskuiotpesfBAGZMi+j
f9H4D4JzDwL7ObHobwiCA+6Q7LYY14cZBFoOT+vCn+N+iAyCw/dEP+65g+uZ
EQQ7nn0u09VAzQ2C2oeT48/uwf7NQfDL9v3c5y44HkYwpLgVR3+2xHhSCIa1
j2a4PLLH/QnB4PPtAJ99ALYzg8HjzIReaVfsHxkM1xsc20MHcT4ZweA8gT82
0oPuv2CYNOHU0OBbuv+CYV9P24N90XT/s2FPnJF63iq8nwIbjhVaTdHvp/HP
huwbu1xyvtD4Z4P0x3EmIdPp84kNfl+F1OLLafyzQSPmkPAxIbr/2NBZcCH6
7EVqnw3V37ZONpxB588Bl2zNco2H6G8FDojsExdZVEDjnwPvj/v6rPtF8w8H
NlhqzbP1VUT7HChdMO2akiv1Pwf6HDiJgzZ4PZcDxUsbkzlb6P7jwKxqrylV
r7CdEQLDQmvdRB/R/RcCT97Jz9geSe2HQEL4NNbuOdT/IVDcfPh56jyaf0Ng
0cRZWxeGU/+HQOu6FEPxEhp/IRCu8G6VchjdfyGgvHNg2msB9BcjFP6JToyr
P4btCqGgtfBDoL8oXf9QKDFwm1r7H8Y74fP2u9G/U9UpjzKg0UVBx+QX5XER
kFxYuinFkfKiOAQ18M2+M8Y70lB/a+lnq3eUP6dD3pFLSfMNkG8In19mRp04
qkR5VQEgaZK0iga9XgkuG5/Rurqbfg9QhjBXY2PL1VSrgEGTdqijCuVhNYgZ
lH7NedKAWh0iNUN1sg1PoNaADM0LD1/0lI3xedzb6oYqXcrjWqBdfpe7dh8d
/0Ko396fLWE6OMbn1W9E8n6tpfNdDIZyWc/b59HvEdpw5eJuY3kn+r6uA3GS
QtPW9nWO8Xl4blmvo8qnMT6Pi9jVFHqB8v0S+CgotGiZOJ2PPoh1DHlmDfWP
8Xlc2z92RY74vk/4vJPZrGQWR/nLAPY9avtyohDzG+Hz0x0SM5Vs6fuvIcTa
uFvuOES1EaTWpk3+0SuEGiDo4tf5rFjkfcLntQbLki+UUnvGwP3UI39oE/Ig
4fPC/8yEOyLoeq2A/KdF2YW6lKdWgFXchVcRfZRPVwL3vdI157pn2L4SmKra
25at78F2ExA/7Cp15msFtptAJwu2lfRRf6wCLdszSUej72H7KjDTKOzf8ou2
r4bhodcFZV+o/dWgNd1QJUuX8usa6HxaHr77JPIT4fP87sXKx4Po+plCoe5O
z3+Hesf4XCtvg2G6ZzW2rwWLKwd3cERxPQifP0mb+zJiKl1fM2B0usgulL02
xucKUqkFtYFFY3zOlZHcfkm8eDT+CJ9rK97OqLzbifFoDm8k7/MpPezAdnOA
bqc3PZ73sf96gIVSG54LP8b7r4fIR/dd0x+2YH8LaA5xmV0XQe1bwGWnRYWp
46h/LCHy7R2TGQcwngmfK7y515/+CP1F+Hyr3qR/nNtx/QmfK/Xq2t5roP60
gqUjU/7dMoL7lfD5Il0nryQr2t8aFj/xK47XpHxtDad05Q/ozKB8ag373b7N
uLSf8qk1nK/xtNQZpvnABpj1Uz+umoTjI3zupG2XsXTT5zE+Pyz7ws/IHr+f
ED63+vrF654izUe20AxLVofYPhzj89x9ZyWr5naM8XluaRWnxufTGJ/HuATZ
nv/1l89jT/4zsUf0L58zN4tbL+8eGuNzbbEyv4vJfWN8fvBH/8EVP4fH+Fz7
x2XnVU44H8LnswLkRL5Ppt9z7EF65strXYV0/PZw+ZyKXkU79Z8DwKQFynkb
MX8QPvft+mRysg/3B+FzgW6zA5wM/N5J+Fxux8qX1fo0XzmS/HAEYpLx+yfh
c98JYfHdTTSeHeFE18yUxcN4PeHzzNpOzy6FZuzvBMW6DktfqGL+JHxe+6Fp
i5j3vxiPTlBXXR8tsB2/bxI+z7VYsDe1vBXjzxkYXk8TU5IxvgmfN4p/mBef
/g77O4OVTMJ0/v+4aN8Zpi/P+Dj1TR3adwGZG+xdDfdxfxE+D49a/LbPi37P
coEHCs7jnHzxe8v/8vnc8Kbba2h+cYWAw3P6PC69xv6ucMS9JvzjU9yfhM+Z
O7qTtGfexfG7gvgNSxHRyIc4fjewuly4urWfi+N3gyXLH4Y9V8Tvu4TPxURr
lqlF9WF/N3jAfZfz5NMv7O8OGUd23Cyeywej/d3h9a1igbvmgqOa8LmjXej9
l+dERzXh86P6A3/+2Sw2qgmfV001WWXuMwH7e4DS8mDryTW0vwf8eJv7ZFkP
3p/wuf7SI0JnX6EmfN7E9Fa0rRnB8XtCWsqm8Z4JqAmfV2bM8OjfMA77e4Ja
a2uMxgranwlh0bN0Jn3F+RA+b6oW8bQ2wfkSPmfYut5+cLNxVBM+TxxaIjPT
E78/Ez6PLH9xLfBD3mg74fNSiV7B+/wYH4TP32wa0Tie0TyqCZ+HNUfHnvZt
QP95QWbFDVXB/V/QvhdopCnpnDPoRfteAP4VpwYWYn4kfF77KE1YSq8e7XtB
zCa/z48sXqN9cv3emdvdAorQvhcUbytNHJeF4yV8nih4cvmk3o8YP96QIcjc
8Tb3Ntr3htpN2+4tT6D7wRtM/FS05Y99GdWEzzMdGjqEcnE/ET5nPP73iPVp
jD/C5z9b5E4md7/BePUG5eubzE68wOcN4XNdw5jyu4L0+7oPfNW7tvnEEdSE
zz83iCX5nqf5xAe0dkaJiv2L+ZPw+ZvKuP5iNs0vPuDSXZRz6gU+7wifJ80b
5IvYSr+H+UD/s/GbY2/g/Qmfs0xmvdHi0vcZX2C/mhr59hjmG8LnmqtfJW2f
i/mP8PmvVLUDSzIxPxE+19rQEx6ph/mG8Ln5wFrXCFHM14TPJ33Z9mPKSty/
hM/r3kekHZfG/Ef4fMubgCKxaPr+4gcfNjtz3zfQ+fuR/v7Z+5fS751+cNkv
umSWBK4X4fPLQgJ/eiro+vuR9VbcY+Bbi+vvB2KPlBYsU8L4IXwuO2+f06P+
zxh/fhA599GCyP8GMP5YcFku7KRXDsY34fN8+VcqGV1YPyJ8DoMeCZqqPRh/
LBBvqEoN66vB/cWCsK2VQY4bMd4Jn8fKHgp9e/AH2mdB3IXm1rPJ3WifBVph
u8fffvkA/e8Pkf/Zdil8L0X/+wPzms/v9+fbcP7+0NwVqR8xrwDt+4PWd59Q
q9n4/kD4/F2QprNhN+5Xwuf9Oxa1pb37jvb9wWxnRnmNLI6H8Hml7HUj61B+
GLUfAMWBCeW/DYRGNeHzTT5F596txvxD+Hz2gQi1fcsxXxE+r4ht0v5yT3hU
Ez739K/0U3OfOKoJn0eFrg8rUJcc1YTPQ54fku27je2Ez5+tvFh65R7en/C5
UtUh6ek5Q+j/QBDbP172hgyOl/D51D4lTf0IfP4QPudeWfKAuYM+n4gGL/md
/NhO+HxgytxXerEfcf6BUP16wR1PIaz3ET43fO2gxpTA+xM+ryvXs4Au9Afh
83U2wr8e6tF8HATRnU+tG8PEcf5BsM/kitL3txI4/yBoNRFI3ukphfMnPK/a
+mnFaWwnfK6nO3Lq+FZpnH8QNA+kX/LKxPsRPmcvURHlNxuP9oNBzUs5KLoX
/UX4PC5vzuRbBtR+MJQMGA4ajdkPBtHGxYdsOqj/g6FqQtkdfQ3q/2D4ZmZv
WNg5Be0Hw0Kv9ZNdYnE8hM/XX7xjxHcZ70/4/MfQBGaKF50/G4afOx/7wjcZ
7bMhblDX1OHqJLTPhoBWs2qRKRgfhM+3vHSeerRXAO2zoezl1Q97PmN9lfB5
bNPutGFVjDfC5z/71uWNcOn8OXB6eXDz6d8iaJ8D5s4WjVH6GC+Ez/tKWqWS
ShhonwNKwg7D/J64voTP6ydO44h20Oc1B7YYHBza/Bg14fP8G4asPwfrcf1D
IFO244KwXxvGXwiYtt26asjG5xXh8yi1xFNdwri/CZ//HGyrOZD8L+afEIiU
+13+dPkptB8CYcl5925F0HpOCJwoG+efl43vN4TPpTX6FG7xU/4NBS+X5HuQ
hO/LhM/fVzIrTlvT9/FQiFf60O3ZRetpfUa1V4XiXs1CXiJXXL5lnilfS+vp
IpDZMWJrPAnzB+Fzbq2clPeaStTSEKZ+M+50Ca0fT4cEpwd6a87S56EsyXdP
97ftzkStAIwlld/7HM+iv5Sg3irxGnfvJ9TKoNwkIXeP045aBbgmIRk9yhmo
1aDZ7W1n/wF8Pv8vn0s1HDi0i9bLNWA6mI5f4kF5RhNMmz2Z63dhPiZ8LpL3
6NyB3fR9cSGYbjw3Yb4qff9cBOH5zllSDMzvhM+HU21aG/1x/xM+51o/vfBa
8CdqHTDcn5H7LJ7W/3Xhx4ZvvvNvYb4kfN7Z8Zq50RjfnwifK63XuC3vSn8f
oA/1hdqdlfR9i/C5hshRnT26NJ6XQYvo9KgVP/lRG4D5bp0ukfUYz4TPGyO+
JfRY4/4ifK71uzdNJhzfzwif63tGL9nzCvMr4XO9sPXGg2y63wA68t+FVcfh
/iZ83rm15eS1R7TdGF7JJCsw2un9VwCn16IiaTPuR8LnNca7/zE2oONZCcE/
rT8smoX5g/D5SFp5dM4qfF8lfO5Z2TfXUhjvR/j8w7mn9i1atH0VpE506j4l
jvMnfP5W0eKEfyN9v10NV+zTd9WpYn4hfJ7/++H+Z1NxvITPt2/R6jLLpONf
A4OlooX7mzAfED53kV0F057heAmfD35YMTvzBm1fC/o9TzuP7qLjXwvvbeKN
jCtpuxnMkZGRmhlJ7ZvBibe5hcNh1D/rYK3TjJkz5Kh/1sGsEYEyiSf82G4O
A7WyU84X0Pmbw/LhTyu0a+j418PP7xsWTubD/E/4PCqgN50zDzXhc3aUIEQL
0HxtAcplNRXceXT9LCHr1IvsbTsxvxI+DzFJWf/oEu1vBe1ZfUXHaP4nfO6Q
ym10/0T9YQWVrO7P2ysxPxI+H6hSyrom9xvj0xrS3rrc1ZJFTfi8fa16/7YJ
GP+Ez+P+5CZdW4e8Q/i8L2GbddAzun9soOpF2Pc/mrjfCZ+/CdJLvvgD2wmf
5zvOF1lR0oT9beCni1v0n553uF9todCQr6WxCPMh4fPIwKVOB6OyMH/aArf6
XszcUrye8HmAuKRafDLtbwcKaz5ajFfF7yGEz5VL2hqak+j3ATto8pe70++A
3w8In9sWHz31cTn9/YQ9CPzTb56iiPxI+Nx8tljDcscP2N8etKLHDY4bX4X9
7eGI84hm8Tn6fcoBLIYMBZsZ9H3UAfZNPuUp/4P+XsQBigueHGXR72+Ez/dd
zokPyKH52hGeKn4Ktmmhv39wBM1bPsaTZ9LvbY5Q+OjOapYvfV92hPTHSbO6
sun7sRM8XFVuJHwd3+cJn0/ccF9UCujvMZzgQmWRYoYhPj8In2vdW/Nw30z6
fc4ZAp0S/7vNoDzhDLs2GLRxFiFPED6XODDpcPpT/D5I+FxeKGpeVx/9/YUL
9Ljdfr4tgtafXSBO4FdnjTLWlwmft0wYuPlVl9afXWCAs8zxEq2fED4v1n+f
vc+N1o9d4dwO/hUe87E+RPjc+4umx2UpWs91hQoNcVYb/f5N+Jy16NTwqu+0
XucGHwONsppT6e8P3GB+qrWkKf2+Tfh808TXO+ap0Pq1OyjdEJSUVKH93aF1
nXC7x13a3x3KJZXnKHf8rZ9/rHhhts2d1k89YOfNgoLgaXT+HpAqVGzVfp/O
3wNEjcc1vT1G68Ee8CT14Cz+SXT8nmA1TXR7yU1a7/SEPT0WA+/K6Pw9YYKg
glWqLv2e7wlx8mp+Sm60fsaECRt60yZXoH8Inyfv/Wanc4nWT5hg976+h+8s
1hMIn/+YvqyVW0Xrh0z4dbEsaUIpasLnTeqqSSd8Z6A9JiwrmXV4/whqwuex
k4zG5VfT+pUXrO5xSDebTus3hLddUq+kCFP7XpA83CBgMUzrJ15g3L9ziFVH
61dehAfWiIATasLnxVc9jz9YRusnXpCuEf5sP63PED4X/1whe0UUNeFzZmrW
p2XeWF8hfL56SqGbqKwS2veG3ldXLHVnYzvh8672Sbl+LagJnwvlhE9NTcP6
C+HzwiXZS6syaf2K8L/tLbWQQ7R+5w3ZC5flRD+m9n0gpu7LAbcwWr/3gW3n
5gucvkDX0wdMr6c/T5xD61c+oOgzd+PWK9if8PnveHu7+FV0/j5QP71N93sC
rd/5wPMXwqcWJNH5+0AOJC1UCsTxEj4P6rwtoc1H7ftCfJCrah4/9id8brR4
tWfvJzp/X2DI3F83tZ3Wr3xhg/69/tPV6C/C5xMjbn1rVsd2wueLo4+PtD1C
Tfh8aNrxXrYNrR/7wdXtxX4l66n//eCF2/ekhca0fukHFj1Kl3z2U/t+oKNV
bHZ+L9ojfC7c+uLyJTNq3w/O/L53IMmHzt8P1hQ7Sxy5hPMjfH5Bu/VjuDyt
37Fguoo1q32sfsqCigYVgxc5tH7GgpGXhstMk2n9mgWGUwJU9XJo/ZoFc/4N
2B8jQ+u3LFDeUCC1jkHjnwXalXO+HKe/9yB8Lj1D+YyGAcYH4XOW8wRHJoPW
T/1h48Hf7g136fr7g67o+TU7XfH+hM/bny5dNH4K3p/wudN3p5FGGVq/84fw
x+/G1/XSfOcPCnm2C37exPsTPu+1UX/GyaPxFwClJYvPHn9O5x8ATbAg71gd
3X8BYHfrMdulgc4/APSSXdsnHqfzDwCX4fD6uacwnxA+z/XqcWLR/EP4vD/m
SA3jLWrC571VTPOHqjT/BMIuY23+z1Po7xcIb7/4+dxsA51/IHy6/MxpBv09
AeHza7diLwUK0/gn/O0bUNb3h8Z/IJQ2L9a8bEXXPxDWv7mQVVRL69eBcOZh
hG60Ip1/EDit71JcNJ3Wb4OgyahK+8ZDOv8gEJtT4iQ8B/1D+HyPVXHA8lRa
vw4Ct59Ppt2xxv6Ez/s2S11bvoT+fiIIus+vdD3i/Ld+Pn5izWaxuXT/BUNd
Yd7uinXUfjAMds8fqXXBdsLnPRsECheJ4v4hfA5iKr5lnjT/BIPK3h4+1fvU
fjAYj+TpujrRfB8M10Y2+z4yousfDHIJGzvHGdD5s8EEYpb3WtL9zwZGtbbl
4x66/9ngMe72RK1Omn/Z8LQu4ZXERzp/0t+KIT47l8YfG+KlWX6+9dQ+G0rm
cV2Dz2I8Ej73sGRfefae1u85kLC1qsIql9aPOTBra/GhqffQ34TPdU4KDsVk
0/jjwMngogMrbtL8z4EB+YGLvZZ/6+fbz9ioX/Si+YcDnhsPH7jfQf3PgT0a
LSkWK6j/Q6BMT3DpyyM0/4RAp/bdNp3H1P8hcFXizVM1D+r/EGAFLrqkFkT9
HwLOFxc4JR7FdsLnxZf/1enoxv6Ez9NaTN1MpGn+D4FzE3U81Fvo/g+FKpfX
a9i0/k74PDF5RlT9LJr/QqFCSkG0mSPDtWhRdktWlwMG/g2uO25eMHvBmHb6
FLrS20FrTF8RC9+Rc8ZmTI/+4XcK+kfuP9ZSe3zBM2P1MX04ttup3V1jTK+d
3H/31h2zMZ38RhIKA8zHdFtJgP7K2evHdFXd9hUrv/7VbHVhHZai05iuaZGb
I7fJeUzrLZAT7djqOqbVVWcmvjNnjmn+dbNiRXf/1a0C5XXZ9l5j+vbpmKup
nL963A29ufMz/2rnxMHNrsN/dblvZcsDYe8xXeY0bNq20W9M56h33D3VxBrT
gy0RQ40G/mO692ujyG27kDG9xebV8Zbdf7XU+U3RRZF/9ejf/93/EebPm2WT
Zca0/K3pl/JOa/4/96ftvPMPvPMPvPMPvPMPo9fzzj/wzj/wzj/wzj/wzj+M
2uedf+Cdf+Cdf+Cdf+Cdfxi1zzv/wDv/wDv/wDv/wDv/MNrOO//AO//AO//A
O//AO/8wap93/oF3/oF3/oF3/oF3/mHUPu/8A+/8A+/8A+/8A+/8w2g77/wD
7/wD7/wD7/wD7/zD/9G88w+88w+88w+88w+88w9on3f+gXf+4f/P+Yf/AQ3I
PSw=
      "], {{{
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{781, 783, 1, 2, 3, 4, 5, 6}}], 
           PolygonBox[CompressedData["
1:eJwl01OTkAEAQNGvem82G5tt2+Zm12btZttttm3btm3bNp46Mz2cmfsHbmh4
ZFhE9CAIovGBv4TECIKYhOhYxCYOcYlHfBKQkEQkJglJSUZyUpCSUFKRmjSk
JR3pyUBGMpGZLGQlG9nJQU5ykZs85CUf+SlAQQpRmCIUpRjFKUFJSlGaMpSl
HOWpQEUqUZkqVKUa1alBTcKoRW3qUJd61KcBDWlEY5rQlGY0pwXhtKQVrWlD
W9rRng50pBOdiSCSLnSlG93pQU960Zs+9KUf/RnAQAYxmCEMZRjDGcFIRjGa
MYwlinGMZwITmcRkpjCVaUxnBjOZxWzmMJd5zGcBC1nEYpawlGUsZwUrWcVq
1rCWdaxnAxvZxGa2sJVtbGcHO9nFbvawl33s5wAHOcRhjnCUYxznBCc5xWnO
cJZznOcCF7nEZa5wlWtc5wY3ucVt7nCXe9znAQ95xGOe8JRnPOcFL3nFa97w
lne8D/4/+JFPfOYLX/nGd37wk1/85g//ADy8fN4=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{781, 782, 15, 14, 13, 12, 11, 10, 9, 8, 7}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{769, 768, 389}, {777, 776, 493}, {767, 766, 381}}], 
           PolygonBox[{{771, 770, 392, 393}, {761, 760, 307, 308}}], 
           PolygonBox[{{775, 774, 433, 434, 435}}], 
           PolygonBox[{{500, 780, 778, 495, 496, 497, 498, 499}}], 
           PolygonBox[{{765, 764, 352, 353, 354, 355, 356, 357, 358, 359}}], 
           
           PolygonBox[{{757, 779, 251, 252, 253, 254, 255, 256, 257, 258, 259,
             260, 261, 262, 263}}], 
           
           PolygonBox[{{773, 772, 395, 396, 397, 398, 399, 400, 401, 402, 403,
             404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 
            417, 418, 419, 420, 421}}], 
           
           PolygonBox[{{763, 762, 310, 311, 312, 313, 314, 315, 316, 317, 318,
             319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 
            332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 
            345, 346}}], 
           
           PolygonBox[{{759, 758, 265, 266, 267, 268, 269, 270, 271, 272, 273,
             274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 
            287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 
            300, 301, 302, 303}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{757, 758, 264}, {761, 762, 309}, {777, 778, 494}, {
            771, 772, 394}}], 
           PolygonBox[{{769, 770, 391, 390}}], 
           PolygonBox[{{759, 760, 306, 305, 304}}], 
           PolygonBox[{{763, 764, 351, 350, 349, 348, 347}}], 
           PolygonBox[{{767, 768, 388, 387, 386, 385, 384, 383, 382}}], 
           
           PolygonBox[{{773, 774, 432, 431, 430, 429, 428, 427, 426, 425, 424,
             423, 422}}], 
           
           PolygonBox[{{765, 766, 380, 379, 378, 377, 376, 375, 374, 373, 372,
             371, 370, 369, 368, 367, 366, 365, 364, 363, 362, 361, 360}}], 
           
           PolygonBox[{{775, 776, 492, 491, 490, 489, 488, 487, 486, 485, 484,
             483, 482, 481, 480, 479, 478, 477, 476, 475, 474, 473, 472, 471, 
            470, 469, 468, 467, 466, 465, 464, 463, 462, 461, 460, 459, 458, 
            457, 456, 455, 454, 453, 452, 451, 450, 449, 448, 447, 446, 445, 
            444, 443, 442, 441, 440, 439, 438, 437, 436}}]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{753, 752, 516}}], 
           PolygonBox[{{751, 755, 501, 502, 503, 504, 505, 506, 507}}], 
           PolygonBox[CompressedData["
1:eJwVz9daDgAAgOFfd+JKzGSFfjMjygolI6OUmZVVtKxK0VCRSLaGKKMUkZKy
Qxx4uoDeDt6D7/AbG5MQ3BgSCATGUMM/Mcx/xjGeCUxkEpMJZQphTGUa05nB
TMKZxWzmEEGQucxjPgtYyCIiWcwSlrKMKJazgmhiWMkqVrOGtcSyjvVsII54
RqcS2MRmtrCVRLaxnR3sJIlkdpFCKrvZw172sZ8DpHGQQxzmCEdJ5xjHOcFJ
TpFBJqc5QxbZ5JBLHmc5x3kucJF8CijkEkUUc5krlFBKGeVcpYJKqrjGdaq5
QQ03uUUtt6njDne5x30e8JBHPKaeBhpp4gnNPOUZLbTynBe85BVttPOaDjp5
w1u6eMd7uvlAD718pI9P9DPAZ77wlW985wc/GeQXv/nDEH8ZAVMPbSo=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[{{751, 752, 515, 514, 513, 512, 511, 510, 509, 508}}], 
           PolygonBox[{{753, 754, 574, 573, 572, 571, 570, 569, 568, 567, 566,
             565, 564, 563, 562, 561, 560, 559, 558, 557, 556, 555, 554, 553, 
            552, 551, 550, 549, 548, 547, 546, 545, 544, 543, 542, 541, 540, 
            539, 538, 537, 536, 535, 534, 533, 532, 531, 530, 529, 528, 527, 
            526, 525, 524, 523, 522, 521, 520, 519, 518, 
            517}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, \
{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVykOMIAAQRcFZ27Zt27Zt27Zt27Zt27ZtI3vYmkPlJf07SdNOVTsGCQgI
+EdggxKM4IQgJBEcQmlowhCWcIQP3IhIpMD6i6xRiEo0ohODmMQiNnGISzzi
k4CEJCIxSUhKMpKTgpSkIjVpSEs60pOBjGQiM1nISjayk4Oc5CI3echLPvJT
gIIUojBFKEoxilOCkpSiNGUoSznKU4GKVKIyVahKNapTg5rUojZ1qEs96tOA
hjSiMU1oSjOa04KWtKI1bWhLO9rTgY50ojNd6Eo3utODnvSiN33oSz/6M4CB
DGIwQxjKMIYzgpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZzGI2c5jLPOazgIUs
YjFLWMoylrOClaxiNWtYyzrWs4GNbGIzW9jKNrazg53sYjd72Ms+9nOAgxzi
MEc4yjGOc4KTnOI0ZzjLOc5zgYtc4jJXuMo1rnODm9ziNne4yz3u84CHPOIx
T3jKM57zgpe84jVveMs73vOBj3ziM1/4yje+84Of/OI3f/jLfw9DfWA=
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl0XWUEEUAwOG9O+oApZFQ4Oju7u486e6UFlBA6Q6lu1O6u5QQJQ1KukFa
BAEJP55/fPubmbdvdvZNRMuukV1CgiCI6/GvvuYNb3lHYD2EUMKIQlSiEZ1n
oUEQQ59ruMYkFrH5gA+JE/L//vGITwISkojEfEQSkpKM5HzMJ6QgJamIIDVp
SEs60pOBjGQiM1nISjayk4N/nC+n5iI3L8zzaF5eGufTV5pfC1CQQhSmCEUp
RnFKUJJSlKYMZSlHeSpQkUpUpgpVqUZ1alCTWkTyKbWpQ13qUZ8GNHx/L87V
SBvThKY047X15tqClrSiNW1oSzveeKe9dqAjnfiMzry/+K50ozs96Mnn9KI3
ffiCL+lLP/rz1r5f6Tv9WgcwkEEMZghDCcKCYJiG6HAdQajxSB1FmPFojaJj
dCzjGM83fMsEJjKJyUxhKtOYzgxmMovZzGEu85jPAhayiMUsIarvLdVlLOc7
VrCSVaxmDWtZRzTvr9cNbCS6+SbdzBa2so3t7GAnu9jNHvayj+/5gf0c4CCH
+JHD/MTPHOEoxzjOCU7yC7/yG79zitOc4Szn+IPzXOAil7jMFa5yjevc4Ca3
uM0d7vIn97hPDP/5QMP1ocbUR/qYJ/zFU/7mP77Xh5k=
          "]]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVy3O0FwYABeDfq2XbeFlbNpbNl2utelkvW8u23ZbttrZq1ZZt28Y5mV9/
fOfec8+5waEdQ8KCAoHAF14rb3jLO97zgY88DxcIfJKf+cLX7ydbEOEIzwt+
4CURiEgkIhOFqEQjOjGISSxiE4e4xCM+CUhIIhKThKQkIzkpSEkqUhNMGtKS
jvRkICOZyEwWspKNH/mJ7OQgJ7nITR7yko/8FKAghShMEYpSjFf8THFKUJJS
lKYMZSlHeSpQkUpUpgpVqUZ1ahBCTWpRmzrUpR71aUBDfqERv9KYJjQllGY0
pwUtaUVr2tCWdrSnA2F0pBOd6UJXutGdHvSkF73pQ1/60Z8BDOQ3BjGYIQxl
GMMZwUhGMZoxjGUc45nARCYxmSlMZRrTmcFMZjGbOcxlHvNZwEJ+5w8WsZgl
LGUZy1nBSlaxmjWsZR3r2cBGNrGZLWzlT/5iG3/zD9vZwU7+ZRe72cN//M9e
9rGfAxzkEIc5wlGOcZwTnOQUpznDWc5xngtc5BKXucJVrnGdG9zkFre5w13u
cZ8HPOQRj3nCU57xDYCsgjw=
          "]]}}}], {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 250.}, {-9.395690523346929, 5.475296949344499}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"one\"", "\"two\"", "\"three\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.881976505315835*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"488a8376-e7c7-426d-9865-ea0426b48204"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Accumulate", "[", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], ",", " ", "10"}], "]"}], "]"}]], "Input",\

 CellChangeTimes->{{3.881976509960465*^9, 3.8819765347833557`*^9}, {
  3.8819765732854147`*^9, 3.881976801711936*^9}, {3.881976930908001*^9, 
  3.881977000674342*^9}, {3.8819770492827587`*^9, 3.88197705009746*^9}, {
  3.8819772066033792`*^9, 3.88197722042695*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"69121bf1-49ba-4d67-89fd-d6e0930823cd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "2", ",", "2", ",", "3", ",", "4", ",", "5", ",", "5", 
   ",", "6", ",", "7"}], "}"}]], "Output",
 CellChangeTimes->{
  3.881976557612509*^9, {3.881976600512002*^9, 3.8819766066270523`*^9}, {
   3.8819766367746563`*^9, 3.881976708514064*^9}, {3.881976750831197*^9, 
   3.88197675605807*^9}, {3.8819767900491457`*^9, 3.8819768053978167`*^9}, {
   3.8819769321258793`*^9, 3.8819770012292852`*^9}, 3.8819770508447523`*^9, {
   3.881977207593048*^9, 3.881977220745356*^9}},
 CellLabel->"Out[57]=",ExpressionUUID->"107f20be-45ad-4c0a-8cda-a5e649fab417"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.881977053901689*^9, 3.8819770570670013`*^9}, {
  3.881977090667482*^9, 3.881977100407948*^9}, {3.881977199673452*^9, 
  3.881977200215105*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"2519e18a-b867-4c6f-8256-ed4cace82ebe"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[{{1., 1.}, {2., 1.}, {3., 2.}, {4., 2.}, {5., 3.}, {6., 4.}, {7.,
       5.}, {8., 5.}, {9., 6.}, {10., 7.}}]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 10.}, {0, 7.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.881977057337345*^9, {3.8819770920054493`*^9, 3.881977101120981*^9}, {
   3.88197720282899*^9, 3.8819772252777863`*^9}},
 CellLabel->"Out[58]=",ExpressionUUID->"8e020557-4c48-4f10-ba20-26f75a1d37b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"RandomInteger", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", "1"}], "]"}], ",", "10"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.881977464206235*^9, 3.881977531898267*^9}, {
  3.881977582203086*^9, 3.881977582387003*^9}, {3.881977640696623*^9, 
  3.881977644132461*^9}, {3.8819777331535873`*^9, 
  3.881977829893783*^9}},ExpressionUUID->"391af643-ca79-45ea-b87d-\
2f002d0894c8"],

Cell[BoxData[
 TemplateBox[{
  "MovingAverage", "argr", 
   "\"\\!\\(\\*RowBox[{\\\"MovingAverage\\\"}]\\) called with 1 argument; \\!\
\\(\\*RowBox[{\\\"2\\\"}]\\) arguments are expected.\"", 2, 76, 31, 
   26219587055283287510, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.881977820506119*^9},
 CellLabel->
  "During evaluation of \
In[76]:=",ExpressionUUID->"d442df1d-09e2-4a80-9394-a87cc1f5b6bd"],

Cell[BoxData[
 RowBox[{"MovingAverage", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "0", "}"}], ",", 
    RowBox[{"{", "1", "}"}], ",", 
    RowBox[{"{", "1", "}"}], ",", 
    RowBox[{"{", "1", "}"}], ",", 
    RowBox[{"{", "0", "}"}], ",", 
    RowBox[{"{", "1", "}"}], ",", 
    RowBox[{"{", "0", "}"}], ",", 
    RowBox[{"{", "1", "}"}], ",", 
    RowBox[{"{", "0", "}"}], ",", 
    RowBox[{"{", "1", "}"}]}], "}"}], "]"}]], "Output",
 CellChangeTimes->{{3.881977791883898*^9, 3.88197782051746*^9}},
 CellLabel->"Out[76]=",ExpressionUUID->"24574b26-48f6-4f89-b657-7d86d2b4312f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Accumulate", "[", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{
      RowBox[{"BernoulliDistribution", "[", "0.5", "]"}], ",", "1000"}], 
     "]"}], "]"}], "/", 
   RowBox[{"Range", "[", "1000", "]"}]}], " ", "//", " ", 
  "ListPlot"}]], "Input",
 CellChangeTimes->{{3.881977993712946*^9, 3.8819780385700493`*^9}, {
  3.8819780749108067`*^9, 3.881978088771476*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"e013e3d1-ce6e-4b4e-8953-a5358a4f0a78"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
qzZxkUj3fbfOVoowRKTwzfKiHiIEvX8ysCfxDBGEyo7TRxPPFOF0jaovPHR2
lpafcEjNZ3Oplwg1bYXiOsRztet7dIe4nyv1E6HDFaNle2bo7LMirI6MkdnQ
v1CE9/nlE2cSLxLhyL/Jruc8qa8IVd+m9PDT2aUi+P7z6PpC4uUizErsXHlh
vs7+IsLg9RZ2HZh/DMSYX92ovxjNai55tseD+ouRXnO+tlN/MWxumYW6EbcW
42ZJC+Em5i8bMf5dZr72OfeDnRgRomATG+4XezEWTHXKFBOHGCZPb4sPMn84
ilFRnLz3Bc+/sxg/olRnxxJ308YzGZ8STlwgxq5il1v3mT98xdh5cHU/I+JC
sf75jhQjsUv3A+k8/yIxBmZJBmTxfCvF+vkhXYyFb9N2r2b+yBCj5GrTjjtj
qL8YVdX7QZ7fLDEe7jExH0I8R4yfDYMO/hdC/cU4XbNJs5ncTxrt+PXaTfcg
flaMe3vvr/y2gPqLYWfitv9rMPXX8q1/RvWO579YDHlM4wuLiZeKUbvF9mUy
4uVidCpbsLIr8S9iBBxYLbAibpCI6teH3A+mifjutOJlNvODWSI69Bkx2ZO4
ZSKc8xbatuB+s07Ek/omg34wf9gkotG2eduPc7/YJcKurWO0gvvRPhFF19dd
8CSORBib1GtuT3/HRP395pyINzdOjr/D/eaWCEu3R2P3T6f+Wrvq6yPivono
eaTO14ncj8JEfLNe/tGc+y0yEf5HNq76yPwmSsTLmpOf7Amg/okI8ZbNWPj7
eZSIyrk7Il2JZ2j5m4RpO/VPxCXfzzkfmV+yEuH4ce+7DdwvOYnofscgzon7
ITcRPsLu014xX2sSdb/3of5aPcr629/lfihMRDNBl9b3uF+KElHv4rNvj5m/
ihNxKubh0XLmz1KtfjErPI3cqH8ivkbYKjKJf0nE2AZJ7Q9Oo/4S1C3ps/Sm
M/WXILRu8fnvY6i/BPPfD8lvP5z6S3C+t0XUlEHUX4KM18O0nfpL8EUS2kdE
fzsJLl39dHYfcXsJxtgtNR5OHBJ0cWh96dxE6i/Bj0HeXcf/zv8SbFr8freS
uJsEgXfFV/5zpP4SVJ1uM47vK8GFpjMK1MSFEqzrb3GqBv0jJejUrsjWhbhI
gqrbTx6fL0oJbjeL9eg5hfpL8KTHnaWrmH8zJIiLvquq5H7LlMCk6/OSicSz
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
Bzu565Q=
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.48801874288147284`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 1000.}, {0.48801874288147284`, 0.6257572653574879}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8819779883152514`*^9, 3.8819780392336884`*^9}, 
   3.881978089156188*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"a36ed319-e447-4bdd-9425-8f415ec13981"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Accumulate", "[", 
    RowBox[{"RandomVariate", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", "]"}], ",", "5000"}], "]"}], "]"}], 
   "/", 
   RowBox[{"Range", "[", "5000", "]"}]}], " ", "//", " ", 
  "ListPlot"}]], "Input",
 CellChangeTimes->{{3.88197810583563*^9, 3.8819781077986593`*^9}, {
  3.8819781449996433`*^9, 3.881978147817482*^9}, {3.881978271498148*^9, 
  3.8819782718339653`*^9}, {3.881978309195024*^9, 3.881978312846238*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"ba84b9a4-a6f9-42ad-9ba9-cf674d3bbdb6"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
sOHc18f/9H3K9xZsnPju/yXmCOVnWzYOzxna99MdNumXjRiTKdc+PaT93dmo
+3183il7yq8sNjIPK+hkpVP+DWbjKFf8Z44d6YfNhted+kUTGigeOGzsv5b4
YJQ66ZPLRnKI/YBRv2m+lA2DjtvXDZcQPYuN53tCLXe2ED2Pjazhd740TOSQ
vdgoyRxZNuseyV/Gxl6vVVrGTXReVLGhtebD4vtzdvXgWjZaW8wk5s0kbwMb
Fne1D227R+Mb2VD3qO0v4AWRfdk4uR4ddbaBPbiNjXd1w6tjvtP52M7Gz+NP
ncWz/Xtwlxz/UB+zhNlfIRrK7w0elQYRf8rRiOvt4lF6lc4/lWg8Pj1ghsyZ
/EE1GmzpzfnLvMh/1KPRyH4x4nENYc1oTKh0O23kSP6mHY2/vcIdt3Uw9o/G
29n5zkPOEkY05u+9mRoVSv5gEo2gpwdtxwbRehbRyH7e/mLeD8b+0di77s+U
/atovEM0kpofBrRKvcj+0Tha8iBryB3SBysa1w7oDu71kM7rYDlWD7Vu/uNO
9o/Ggx31WUunkX440ZDeeZY9NsqE7B+NVcf7SKffdanssX80Fk/rXW3aa1YP
zpLLp8F2U3KeSPaPxiFdNcusDUvJ/tHQnvLAeCPXl+wfjeTD7hhSR/VEVTT6
JEWG+K4ie9ZG46pJP9WIBeT/DdH4en1Oq/gzzW+MhsBbe/hiLtm3ORo3l37r
8txO9myLxqmxo983X6L6pj0a3nqNK5Yq0viuaOgZK/ouzKZ4U4jBw7j4vwcu
BpP9Y/Am7JV4XzxhlRg8rxvw79oW4lc1Bhlyn/gZQf6gHgO1eZ79XKcw9o+B
n6S07Mkwso92DBASNMZ2CWG9GFgcXCxaY0fzEYPe1VK12w8Z+8cg7trzgOAI
8j+LGNzpGOrKVyF92MagS/XB6qn+3mT/GHSPFiz+LiDsHoOJL7P+RbSTfKwY
fDn98t2KlYz9Y2C1ud33tiLtx45B3aC7B/vNIn/kxKBXpFg95GoS2T8Gd/fP
KIkZTflFGgP/OT87PdNpflYMzr4Y4R+6huTPi8GhKI7mLB6NL4zBlWvLLn+J
IlwWg/MJPrmbpyeQ/WNgvlJpdcYw2r82Bj+Xdky7+pryW0MMNP/bFWygQ/po
jEH9sKX73Npo/+YYGKiUdmyPJ/9pi0FDvzOPLWppfnsMXItLEvecINwVg5Nj
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
Hz1QN53oDhx8LYj96e3F3P/l8oQcma9lSvuzODjK2+B5rpnOv2AO1h92bZpk
z9T/HBQlDB3x31yaz+HAdeT15Y/bCHM5qH8x7NxDK6b+52Bl5Jkbc9fQ+lkc
8PtrZSzeRedRHgdbH62dmtiL7F3IQeKcXa8mhZN+y+Tyd052MObQ+CoOPqYe
nSqbQfqs5cDx6A1BJZf2a+Bgll+DwQ1dxv4c3BQcDXj9gs7rZg4i96aeP5FK
9UObXL4d8zxuPqD6vJ2DTrOMkE5fuj92cTDg2LTkdqaeUUhCkPoF/sU9dF9S
ToKJ8BZ/4XKmH56EwR+eZt0ZRvdB1STUXJoXpc5j6v8kCE8uVCyNo/maSUhT
jLnTy4Ho2klYneHp+VaBsF4S6qpHhNcOpPs2kvBY25cTqMr0f5JQVJD36MhS
uj9YJEHzHv/T3nLi3zYJXmuVTw+IdCb7J4E7KEi09ApT/yXh7U7NTumMhZU9
9k/CoUOpQbKfTmT/JIw77sB5cpjqO3YSEq9e/dcwgupBjnx8hZfaEFc3sn8S
Zt4KXD6vhfiRJqH47Z3dp48Sv1lJiOqubnvRh+TJS4K2d/6QKbNpfGESVrTm
9o44SrgsCX4bTSdHTGL6P0kwq4q4k+pG9/PaJBwU7og18iF9NyTBRr2g92E7
pv+TBMeTx9/8MCB/bk7CdN3irK8SJv6TcKbpezZLj+KtPQlfsts8548i3JWE
k/8+NZnGElZIxklh+V4TffJH5WSUnhBGzuoiukoycj/YTFx6jPxXNRnqa+L+
NF+h/KCeDFk/99sSPcoPmskoC4hv+adE87WTwd7q9d6+me7Hesn4ENuam6xO
+Q3JWH5Gv/WrMWGTZCift/T7NJ6p/5IxXOVpqjnTX7RNRknJq8+3mP6jg3x8
3zWHKysoPtyTwU+XJJUsovVYyVjt3h7yPYz2D07GwqsHb0zfRJidjDyZpzRV
k/IBJxmHvvxr7buWMDcZNQu/Tev6QliajE82vOU1DXTfzUpGjl78rXd7yR/y
kjGt1X6StYsn2T8ZsVclUzXekT3LkrFCZpc3bQDd16uScdMj8maVKtP/SQb3
3dyIGFfiryEZzaYteqWnKd4bk7G9acA8G3fG/sn4L6TySaYt8deWjBs/ho2c
mMTk/2S0pwzt+/E2Y/9k9LnGNVlqRPlGIQVKM20ed9tQvlJOgbNq7yi9/8gf
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
9wW4Eubw4DikafQ1FsVLKg/iDfvbykoJc3mY3u3g2cG8pxDyMLD+VOEKJ4o/
KQ8zAtdOMBxC8bSXBzW/palJzPuGLB74xlcbbN1ofg4PD3yOuB5SIJzHQ1Nc
13aLILpfFvBwWO343/7adP8s5OFOc5509k26PxfL9bny9EH978x7Cx6sItoG
zl1P9PM87OK/3pgxg9ar4mGs48bjKsz73Ss87FnUzNaYR/LX8vB6t+KRS8Vk
73oeDLoWWytmkL4beHiU0lrXOI3qqXs8vDskuBn3lc7fRh6ePc7Lsben+qiJ
B+nYiGnDfxO9mYda3vJVt2rJ/i08zD1/vlZXnYl/Hn4PbOuj5UXx8IGHql96
sxZrUby1y+Nh1tPu3/uoXuvk4W6C0g3jxVSfdfFwKrWhq28V0bt5yNK94lTS
xNz/+Lhj2DJu4ETipzcfGxz27Hl8i+JdmY9v9z53lutuovjnY0avxPscUzof
VPhQ+7TdZ36/tRT/fHh/OVO9fRble1U+8h61fqvKofNCjY/A3MvPh4YTVudD
9jnbPMOQxmvwcej8Kkf3DsKafESEzN6hm01Yi4/WHaMt15sx9ws+ROpenl5b
6fzT4UPZ4c3ijnt0vunxUWjA0TjkTPWiIR9DqjuzLxgx9ScfNqmWO1Uekf6N
+NCK/9qwV4XOIxP5+MkTftxoJboZH7sC42PCThL/FnwUlRXk2/IoP1vz8WnU
lK412bSfLR+z929ZuW21Tk8+3cbHYvYo9a0fRlH886EZVLeg4zvV+y589O+/
5eT7COLPnY8VQ9ufnZlL63vyYVk64cX8hZR/WXwY+fOuny6j+f58XP566Evq
f1R/BPMx+Hrzc+Vsqk/C+cheeVdp6CzSH1u+37KrrG2LqL6L4+NWTqf97IVU
L3D4WPB8yYd1STQ+lQ+xc6Tf3xNE5/JhsH++vpsl6UPIh/7KJZ/V46j+k/IR
X3CkpPLq/B7598rnL6nM2TCd7jNZfHyJKUiKyVtF8c+HxkWFqukXtSj++TDt
P8t2Uyz1Vwrk+jtncqZf0oue+rGQjw85XUp94gZS/POxbqZa4jITOr/K+ODp
NRolsix78Hk+RrYuHLYvcWUPrpL7//hTNYM/6fXgK3yYVNfPX72F7ge1cv9Y
I9VDLNWP9fJ4GO4UKPpF718a+Ch4tjFMIKH3Jvf4YHW5v+8wIv03yv2j9uW+
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
5PY6tGdNXxpvIsUyafTHZQdIPjMp7q47nObXwPy9FyneKMyxX1ZD2FqKhuEq
Zy36Mr9XkMK9ZFy1tj7hbVIEadk5OKgyf79AimrLvcvHNlE/xkUKnyUm3BuX
6fx0l+LbGLP3T6fT+e0pRY3sqbGolsazpBidlNnXoYvG+0uhsCNL09aH7BMs
xewhFyY9uED8hUtxev8OVqkrnb9sKUxrQw5nvqf14uT+kP3ugu5J6k9xpOiI
XqjSV5fWS5WilPctdMRR5n2sFJbxA468ANGFUhw7mmo1QJ3mS6V4Yd/4Y+Q/
qif2SjFm+7p7C/NpvywpFq2xaKmrpvohR24/0biPH3+SvHlSDNhrsMc8ivn+
L4XaxI/7msYwfw9Iil8+CedMD1L9UyzFjz9vxj57ReuXSXFp00cjvzim/yf3
1z3BekvySf9VUhQLlzWcXk74ihQfFedEDJ9GuFaKEz/9/l19Rv5RL8UFnaXv
fIaSPRukSOTGv+qoo/H35PIWGFk+cGHea0tRcGHQmic6pP8muf+M3rYn4SHp
q1mK1aVLSy+dYPp/Ush0677uKmb6f1J4dUu9sx+R/B+k+H5szoPRH0mf7VL0
3e+dMPwEyd8pxdWCaa9CR9P4LinKSzQz8w0Jd0uxLWNbM6+U6f/JELj2i/uR
mYR7y9BfeNHak/l7G8oyWHVv8BqnRfsNkmFQP6c+S7Yxvw+XockxRDehnerH
kTLkaM5qTRVRPasqQ3b0nfwRtlTvqsmw6Uyd9N016p+oy7BNZ4uz2T+qnzVk
sDANULU1pvuypgxO6kqzDjHfw7VkODxe57rjROoHaMvgEsFO+ruauf/LcHDK
jkfrX9N4PRnuJT54vYLp3xjKMKym/u54LdofMqh5euyac4Cp/2X4GBon+fWc
7g8mMoxPvV5dlkH3ATMZ3M6+P/h0NPULLGQQ2u//k8Ci9a1lqHbedkyhkun/
yRBy/rtRL32m/pdBMmVqS9gi5vcrMnAafxVZnyO6iwymg1/2HnqasLsMO5fZ
zeE8Jf48ZXgyMivmpzvT/5Ph6bzre/t0UL/LX4bprNDRNmMIB8twt3aR49j+
9P0yXIa6oe1PXU1pf7YMo4VD8iXT6X4TJ0Nyo6Rj3Gbm99Ay/Fj0NzDmLY1P
lUFvRO3rqyy6/3FlWHVv1aqAJLovCmU4lTli2fud1K+Tytd7dF11f1+i75VB
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
iGUjafzPwXDXNZkS31G+ggNJzaG/mvqRHTjQGpeffNYOeSXR/6rEacE0XnLk
oE7cEzB/AfIqDqasva79yBPZiYMDAv+kwhQa/3OQNqrTz5Pup5yJffTrmvmP
+pc1HBT86ZTcPpPG/8T+XX53ttYD5es4OHXYX3fVZuT1RB/3r/k3nT5f2kD0
6TrjYiFD438OTuqFvDoggbyRA6cHY9Li6fM0Vw7eWl2udndH3sRB1qvOTnUa
z7pxYJ3znNslRHbnQM2sK3U/PQ/w4CDv2aK5W+j+0pODUbL1xfKqNP7nIDVs
8Qc+Tb+Zg86agJDcETT+5+ABe8UxiT6/8SHrOaq46tYPTO/LQdANv9+T6fM2
Pw4+h1+NTx+Pcn8ONIvkg5V+oXwLsX+5i6t01bC8AKKPYSuVxnth+q0cOHbL
JQ+3Rg7k4MQQ68Fr+5CDOBh7Ik4UTZ9HBRN7ebYg/SV9vhdC5AHfElM/0vif
A/fdyqsV6P4vlOj74ICy5PHIYcR+F5wdUlRI43+iH2PtVULkafxP7OG6396J
1B7v4GCZcZv1a2ofd5L+8TW3mc1GjiD51zdYJQI9/+dA3Xxdazb1b7s5kH/4
fG9aOz3/5yDYZsyUqFLkvcS/jlc+4ELLi+RggdZBh2K6vvdxcCfxUJI6tf/7
OTgjZbDt0Wsa/3OgEyI2lx2G7Y8m/lRp9vrZDsgxHKy1d5uwfBuN/zlw1pUX
SNDzqoMcFOfpTT/fRuN/st57vTQXhuF4xRF792apf0socjwHJTs2LpLYg5xA
9CmiKNWGxgOHOEiZaCnxfhKN/znoCxnXL0nHN4ms54i/rd60/clE3yQvjRxN
92spHIyLG9B+R+Ohwxw8rMhxz5+NfISD/jFlm9dEIadyEBd8Z36/O/JRDja9
vna/juY/xsFoyx4zJ0PkNA6Mx2k4LmCQj3OwJXX03MgI5BMcVDgfl1h5mZ7/
E3v+esLeLtr/dA4cZI9nHKfP1zI4UGkx8Yzoouf/HISUiedEBdPzf7I+vBVi
JKqRMzmoVDE9yV1EziLljdYykKD6mc3B0UL+7nX0/DGH7Mca3h27eJPG/xwY
OS50Pk33w2fIer/ZJ29rg+nzOLj6fryfzzPkfA7Wy/7LSqPPM89yoJR3uTqB
2utzHOxsP9OeT9d/AQf8W+/nbaHx3nniv5ubNNup/bpA7NumMIcvhcgXOTCL
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
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 5000.}, {-0.027705004495831364`, 0.036229892227784104`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.88197810895518*^9, 3.881978148231595*^9, 
  3.881978272291314*^9, 3.8819783132865953`*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"4f5e8aa4-4e14-40f8-8412-73ec4e7ba309"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", "]"}], ",", "1000"}], "]"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.881978449174501*^9, 3.881978469142436*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"a7d07d90-93e7-4319-b9d3-9d77d0713b90"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1: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
5QilPwfN389antb5IZX/HOTZDl4xri6NX5iDfn1DUtbVeE7pz8H5hPg9kban
Kf05eFDl4dgDi6l/6eegT07VoIsbnlP5z8GCGde+br3/lvI/B2EeLyWdV4n5
nwunik6T3nf5SenPhcsYxxQrl32U/lz49h0+dM0zim+Uc6H7Vu+nfa9cSn8u
EobX3rv4LY2f+rm4HijLnnCFysM4F7f8FeUGDKD6MM+FbdN/fzzZQO1DMg9e
fZxqPnx8gcp/HpyNjTR9y9P4gnlwy983snJNmj+V81AxUmu/ShDjmXmYdHrk
hkWnaT7Rz8MGnXbZ9nanqPyLPF0dIatH84t5Hh79dcSong8ofVcIhd1bbh1z
nfLvisNbP/j89BLnM1fEtFz+6X4zSk/piu2prlXbVMqi9F1hqHdh/qbtNP/o
XTH9P/cy7saTlH9X7PhlM/VPjyzKvytuPSt7bEH8GUrfDWX0TzIr1JGgOH03
vJwxU7JuE8WbcMPS8eUb9B+USum7oX5a/vfV+ihK3w1xgUEe5exovtC74bPH
vN/dcm9S+m7o8LWj+52pVJ5mNzz9PWnYnWXi/OmOOmWfJ4ft+kv5d8ePvYW6
scto/IY7lp24+7HmAGpvSnf0mndzaVQfGn8Fd9yTN9ozto2R0neH29HUfXYn
qfyM7qg+Jf9w/63UXszuOHBgp0vWK7H9eeB2zOOfD1pQf5Z5YMS0B5LlFcR4
wANxObYbrH9Sf1R6YHyLCktmJNN4I3ggdfO1CS8tNN7pPRBV4Nyvu4rqy+gB
D5uhNZuPo3jR7IEqpiNbh9cU5x9P3OnXcvPtulQeMk9MbFH/T7+q4nzkiSPt
o/btGyym74mBtTYcfmai9it4wvFp0o5avjRe6T2hKzyQmjiI+oPREw4B0udD
e9B8bPbEA2Plro6bqT1LvOBf7mSe45pIyr8XulituLBnKfVfeMF4pueE9nsf
U/peWN90+fHDC19T+kUOu2l+H0fPp/dCkovdjU1vaHw1emFF9TNeH1fQ+srs
hYpfZv1X3XKS0vfG10pxVusTqDxl3lB5Dq305y3Fu/DG/AF/D876SfOT0hut
mvWu6vT5AqXvjbDB52XLok9Q+/fGPM/KY86/pN8zekNvSfKbcJPKw+yNckdO
qF+voPlEMh8NHuJzH29aD8jm42pKlkx+7wjlfz5ckiqab0l/Uv7no+ej0/f/
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
emYDs5HZxGxmtjBL1CUtZZYxy5nBrGBWMquYBWYds57ZwGxkNjGbmS3MkkUl
LWWWMcuZwaxgVjKrmAVmHbOe2cBsZDYxm5ktzJKgkpYyy5jlzGBWMCuZVcwC
s45Zz2xgNjKbmM3MFmZJcElLmWXMcmYwK5iVzCpmgVnHrGc2MBuZTcxmZguz
JKSkpcwyZjkzmBXMSmYVs8CsY9YzG5iNzCZmM7OFWRJa0lJmGbOcGcwKZiWz
illg1jHrmQ3MRmYTs5nZwiwJK2kps4xZzgxmBbOSWcUsMOuY9cwGZiOzidnM
bGGWhJe0lFnGLGcGs4JZyaxiFph1zHpmA7OR2cRsZrYwS4SStmaWMtswy5ht
meXMdsxgdmRWMDszK5ndmFXMamaBWcOsY05n1jNnMBuYM5mNzNnMJuZcZjNz
PrOFuYBZElHS1sxSZhtmGbMts5zZjhnMjswKZmdmJbMbs4pZzSwwa5h1zOnM
euYMZgNzJrOROZvZxJzLbGbOZ7YwFzBLIkvamlnKbMMsY7ZlljPbMYPZkVnB
7MysZHZjVjGrmQVmDbOOOZ1Zz5zBbGDOZDYyZzObmHOZzcz5zBbmAmZJVElb
M0uZbZhlzLbMcmY7ZjA7MiuYnZmVzG7MKmY1s8CsYdYxpzPrmTOYDcyZzEbm
bGYTcy6zmTmf2cJcwCyJLmlrZimzDbOM2ZZZzmzHDGZHZgWzM7OS2Y1Zxaxm
Fpg1zDrmdGY9cwazgTmT2ciczWxizmU2M+czW5gLmCUxJW3NLGW2YZYx2zLL
me2YwezIrGB2ZlYyuzGrmNXMArOGWceczqxnzmA2MGcyG5mzmU3Mucxm5nxm
C3MBsyS2pK2Zpcw2zDJmW2Y5sx0zmB2ZFczOzEpmN2YVs5pZYNYw65jTmfXM
GcwG5kxmI3M2s4k5l9nMnM9sYS5glsSVtDWzlNmGWcZsyyxntmMGsyOzgtmZ
WcnsxqxiVjMLzBpmHXM6s545g9nAnMlsZM5mNjHnMpuZ85ktzAXMEk1JWzNL
mW2YZcy2zHJmO2YwOzIrmJ2ZlcxuzCpmNbPArGHWMacz65kzmA3MmcxG5mxm
E3Mus5k5n9nCXMAsiS9pa2Ypsw2zjNmWWc5sxwxmR2YFszOzktmNWcWsZhaY
Ncw65nRmPXMGs4E5k9nInM1sYs5lNjPnM1uYC5glCSVtzSxltmGWMdsyy5nt
mMHsyKxgdmZWMrsxq5jVzAKzhlnHnM6sZ85gNjBnMhuZs5lNzLnMZuZ8Zgtz
AbMksaStmaXMNswyZltmObMdM5gdmRXMzsxKZjdmFbOaWWDWMOuY05n1zBnM
BuZMZiNzNrOJOZfZzJzPbGEuYJZoS9qaWcpswyxjtmWWM9sxg9mRWcHszKxk
dmNWMauZBWYNs445nVnPnMFsYM5kNjJnM5uYc5nNzPnMFuYCZklSSVszS5lt
mGXMtsxyZjtmMDsyK5idmZXMbswqZjWzwKxh1jGnM+uZM5gNzJnMRuZsZhNz
LrOZOZ/ZwlzALEkuaWtmKbMNs4zZllnObMcMZkdmBbMzs5LZjVnFrGYWmDXM
OuZ0Zj1zBrOBOZPZyJzNbGLOZTYz5zNbmAuYJSklbc0sZbZhljHbMsuZ7ZjB
XHr+een556Xnn5eef156/jmlX3r+een556Xnn5eef156/nlx+qXnn5eef156
/nnp+eel558Xp196/nnp+eel55+Xnn9eev55cf5Lzz8vPf+89Pzz0vPPS88/
L85/6fnnpeefl55/Xnr+een558X5Lz3/vPT889Lzz0vPPy89/7y4/kvPPy89
/7z0/PPS889Lzz8vrv/S889Lzz8vPf+89Pzz0vPPi+u/9Pzz0vPPS88/Lz3/
vPT88+L6Lz3/vPT889Lzz0vPPy89/7y4/kvPPy89/7z0/PPS889Lzz8vrv/S
88//r55//j91/CUq
    "], {{{}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{1001, 1}], LineBox[{1003, 3}], LineBox[{1004, 4}], 
       LineBox[{1005, 5}], LineBox[{1007, 7}], LineBox[{1012, 12}], 
       LineBox[{1013, 13}], LineBox[{1015, 15}], LineBox[{1018, 18}], 
       LineBox[{1019, 19}], LineBox[{1020, 20}], LineBox[{1021, 21}], 
       LineBox[{1022, 22}], LineBox[{1024, 24}], LineBox[{1025, 25}], 
       LineBox[{1027, 27}], LineBox[{1028, 28}], LineBox[{1030, 30}], 
       LineBox[{1031, 31}], LineBox[{1032, 32}], LineBox[{1033, 33}], 
       LineBox[{1035, 35}], LineBox[{1037, 37}], LineBox[{1040, 40}], 
       LineBox[{1041, 41}], LineBox[{1042, 42}], LineBox[{1043, 43}], 
       LineBox[{1044, 44}], LineBox[{1047, 47}], LineBox[{1049, 49}], 
       LineBox[{1050, 50}], LineBox[{1051, 51}], LineBox[{1053, 53}], 
       LineBox[{1054, 54}], LineBox[{1055, 55}], LineBox[{1056, 56}], 
       LineBox[{1058, 58}], LineBox[{1060, 60}], LineBox[{1061, 61}], 
       LineBox[{1062, 62}], LineBox[{1064, 64}], LineBox[{1065, 65}], 
       LineBox[{1066, 66}], LineBox[{1067, 67}], LineBox[{1071, 71}], 
       LineBox[{1072, 72}], LineBox[{1074, 74}], LineBox[{1075, 75}], 
       LineBox[{1076, 76}], LineBox[{1077, 77}], LineBox[{1078, 78}], 
       LineBox[{1083, 83}], LineBox[{1085, 85}], LineBox[{1087, 87}], 
       LineBox[{1088, 88}], LineBox[{1091, 91}], LineBox[{1097, 97}], 
       LineBox[{1099, 99}], LineBox[{1100, 100}], LineBox[{1102, 102}], 
       LineBox[{1104, 104}], LineBox[{1105, 105}], LineBox[{1106, 106}], 
       LineBox[{1108, 108}], LineBox[{1112, 112}], LineBox[{1114, 114}], 
       LineBox[{1117, 117}], LineBox[{1118, 118}], LineBox[{1121, 121}], 
       LineBox[{1123, 123}], LineBox[{1125, 125}], LineBox[{1126, 126}], 
       LineBox[{1129, 129}], LineBox[{1132, 132}], LineBox[{1133, 133}], 
       LineBox[{1138, 138}], LineBox[{1140, 140}], LineBox[{1143, 143}], 
       LineBox[{1144, 144}], LineBox[{1145, 145}], LineBox[{1146, 146}], 
       LineBox[{1149, 149}], LineBox[{1151, 151}], LineBox[{1152, 152}], 
       LineBox[{1153, 153}], LineBox[{1154, 154}], LineBox[{1157, 157}], 
       LineBox[{1158, 158}], LineBox[{1159, 159}], LineBox[{1161, 161}], 
       LineBox[{1162, 162}], LineBox[{1167, 167}], LineBox[{1169, 169}], 
       LineBox[{1170, 170}], LineBox[{1172, 172}], LineBox[{1174, 174}], 
       LineBox[{1176, 176}], LineBox[{1178, 178}], LineBox[{1181, 181}], 
       LineBox[{1185, 185}], LineBox[{1190, 190}], LineBox[{1196, 196}], 
       LineBox[{1199, 199}], LineBox[{1204, 204}], LineBox[{1205, 205}], 
       LineBox[{1207, 207}], LineBox[{1210, 210}], LineBox[{1211, 211}], 
       LineBox[{1212, 212}], LineBox[{1214, 214}], LineBox[{1216, 216}], 
       LineBox[{1217, 217}], LineBox[{1218, 218}], LineBox[{1220, 220}], 
       LineBox[{1221, 221}], LineBox[{1223, 223}], LineBox[{1226, 226}], 
       LineBox[{1228, 228}], LineBox[{1229, 229}], LineBox[{1231, 231}], 
       LineBox[{1232, 232}], LineBox[{1233, 233}], LineBox[{1237, 237}], 
       LineBox[{1238, 238}], LineBox[{1239, 239}], LineBox[{1240, 240}], 
       LineBox[{1242, 242}], LineBox[{1245, 245}], LineBox[{1251, 251}], 
       LineBox[{1252, 252}], LineBox[{1254, 254}], LineBox[{1255, 255}], 
       LineBox[{1260, 260}], LineBox[{1261, 261}], LineBox[{1263, 263}], 
       LineBox[{1265, 265}], LineBox[{1267, 267}], LineBox[{1268, 268}], 
       LineBox[{1272, 272}], LineBox[{1274, 274}], LineBox[{1277, 277}], 
       LineBox[{1278, 278}], LineBox[{1279, 279}], LineBox[{1281, 281}], 
       LineBox[{1283, 283}], LineBox[{1286, 286}], LineBox[{1287, 287}], 
       LineBox[{1288, 288}], LineBox[{1289, 289}], LineBox[{1291, 291}], 
       LineBox[{1292, 292}], LineBox[{1293, 293}], LineBox[{1294, 294}], 
       LineBox[{1295, 295}], LineBox[{1296, 296}], LineBox[{1297, 297}], 
       LineBox[{1298, 298}], LineBox[{1299, 299}], LineBox[{1301, 301}], 
       LineBox[{1302, 302}], LineBox[{1305, 305}], LineBox[{1307, 307}], 
       LineBox[{1309, 309}], LineBox[{1311, 311}], LineBox[{1312, 312}], 
       LineBox[{1313, 313}], LineBox[{1315, 315}], LineBox[{1317, 317}], 
       LineBox[{1318, 318}], LineBox[{1320, 320}], LineBox[{1323, 323}], 
       LineBox[{1324, 324}], LineBox[{1327, 327}], LineBox[{1328, 328}], 
       LineBox[{1330, 330}], LineBox[{1331, 331}], LineBox[{1332, 332}], 
       LineBox[{1333, 333}], LineBox[{1339, 339}], LineBox[{1341, 341}], 
       LineBox[{1342, 342}], LineBox[{1346, 346}], LineBox[{1351, 351}], 
       LineBox[{1352, 352}], LineBox[{1355, 355}], LineBox[{1356, 356}], 
       LineBox[{1358, 358}], LineBox[{1359, 359}], LineBox[{1360, 360}], 
       LineBox[{1361, 361}], LineBox[{1362, 362}], LineBox[{1363, 363}], 
       LineBox[{1365, 365}], LineBox[{1370, 370}], LineBox[{1373, 373}], 
       LineBox[{1378, 378}], LineBox[{1380, 380}], LineBox[{1382, 382}], 
       LineBox[{1384, 384}], LineBox[{1385, 385}], LineBox[{1386, 386}], 
       LineBox[{1389, 389}], LineBox[{1390, 390}], LineBox[{1393, 393}], 
       LineBox[{1395, 395}], LineBox[{1396, 396}], LineBox[{1398, 398}], 
       LineBox[{1399, 399}], LineBox[{1401, 401}], LineBox[{1402, 402}], 
       LineBox[{1404, 404}], LineBox[{1408, 408}], LineBox[{1409, 409}], 
       LineBox[{1410, 410}], LineBox[{1413, 413}], LineBox[{1414, 414}], 
       LineBox[{1416, 416}], LineBox[{1417, 417}], LineBox[{1418, 418}], 
       LineBox[{1419, 419}], LineBox[{1422, 422}], LineBox[{1424, 424}], 
       LineBox[{1425, 425}], LineBox[{1426, 426}], LineBox[{1428, 428}], 
       LineBox[{1429, 429}], LineBox[{1432, 432}], LineBox[{1433, 433}], 
       LineBox[{1434, 434}], LineBox[{1436, 436}], LineBox[{1440, 440}], 
       LineBox[{1442, 442}], LineBox[{1443, 443}], LineBox[{1444, 444}], 
       LineBox[{1446, 446}], LineBox[{1452, 452}], LineBox[{1456, 456}], 
       LineBox[{1458, 458}], LineBox[{1459, 459}], LineBox[{1461, 461}], 
       LineBox[{1462, 462}], LineBox[{1467, 467}], LineBox[{1468, 468}], 
       LineBox[{1469, 469}], LineBox[{1470, 470}], LineBox[{1476, 476}], 
       LineBox[{1477, 477}], LineBox[{1478, 478}], LineBox[{1482, 482}], 
       LineBox[{1483, 483}], LineBox[{1484, 484}], LineBox[{1485, 485}], 
       LineBox[{1487, 487}], LineBox[{1491, 491}], LineBox[{1492, 492}], 
       LineBox[{1494, 494}], LineBox[{1495, 495}], LineBox[{1496, 496}], 
       LineBox[{1498, 498}], LineBox[{1499, 499}], LineBox[{1507, 507}], 
       LineBox[{1508, 508}], LineBox[{1510, 510}], LineBox[{1511, 511}], 
       LineBox[{1512, 512}], LineBox[{1513, 513}], LineBox[{1516, 516}], 
       LineBox[{1517, 517}], LineBox[{1519, 519}], LineBox[{1522, 522}], 
       LineBox[{1524, 524}], LineBox[{1525, 525}], LineBox[{1527, 527}], 
       LineBox[{1528, 528}], LineBox[{1532, 532}], LineBox[{1533, 533}], 
       LineBox[{1534, 534}], LineBox[{1535, 535}], LineBox[{1537, 537}], 
       LineBox[{1540, 540}], LineBox[{1543, 543}], LineBox[{1544, 544}], 
       LineBox[{1547, 547}], LineBox[{1549, 549}], LineBox[{1551, 551}], 
       LineBox[{1557, 557}], LineBox[{1559, 559}], LineBox[{1567, 567}], 
       LineBox[{1569, 569}], LineBox[{1571, 571}], LineBox[{1572, 572}], 
       LineBox[{1573, 573}], LineBox[{1576, 576}], LineBox[{1578, 578}], 
       LineBox[{1581, 581}], LineBox[{1584, 584}], LineBox[{1587, 587}], 
       LineBox[{1590, 590}], LineBox[{1592, 592}], LineBox[{1594, 594}], 
       LineBox[{1599, 599}], LineBox[{1601, 601}], LineBox[{1602, 602}], 
       LineBox[{1605, 605}], LineBox[{1606, 606}], LineBox[{1609, 609}], 
       LineBox[{1610, 610}], LineBox[{1612, 612}], LineBox[{1613, 613}], 
       LineBox[{1616, 616}], LineBox[{1617, 617}], LineBox[{1618, 618}], 
       LineBox[{1619, 619}], LineBox[{1620, 620}], LineBox[{1621, 621}], 
       LineBox[{1622, 622}], LineBox[{1624, 624}], LineBox[{1625, 625}], 
       LineBox[{1627, 627}], LineBox[{1628, 628}], LineBox[{1629, 629}], 
       LineBox[{1630, 630}], LineBox[{1635, 635}], LineBox[{1636, 636}], 
       LineBox[{1638, 638}], LineBox[{1642, 642}], LineBox[{1644, 644}], 
       LineBox[{1646, 646}], LineBox[{1648, 648}], LineBox[{1653, 653}], 
       LineBox[{1654, 654}], LineBox[{1661, 661}], LineBox[{1662, 662}], 
       LineBox[{1664, 664}], LineBox[{1665, 665}], LineBox[{1667, 667}], 
       LineBox[{1668, 668}], LineBox[{1669, 669}], LineBox[{1675, 675}], 
       LineBox[{1676, 676}], LineBox[{1678, 678}], LineBox[{1680, 680}], 
       LineBox[{1682, 682}], LineBox[{1683, 683}], LineBox[{1684, 684}], 
       LineBox[{1685, 685}], LineBox[{1686, 686}], LineBox[{1690, 690}], 
       LineBox[{1693, 693}], LineBox[{1694, 694}], LineBox[{1695, 695}], 
       LineBox[{1696, 696}], LineBox[{1698, 698}], LineBox[{1699, 699}], 
       LineBox[{1700, 700}], LineBox[{1702, 702}], LineBox[{1703, 703}], 
       LineBox[{1707, 707}], LineBox[{1709, 709}], LineBox[{1710, 710}], 
       LineBox[{1712, 712}], LineBox[{1713, 713}], LineBox[{1715, 715}], 
       LineBox[{1716, 716}], LineBox[{1717, 717}], LineBox[{1719, 719}], 
       LineBox[{1720, 720}], LineBox[{1723, 723}], LineBox[{1724, 724}], 
       LineBox[{1726, 726}], LineBox[{1729, 729}], LineBox[{1731, 731}], 
       LineBox[{1733, 733}], LineBox[{1735, 735}], LineBox[{1736, 736}], 
       LineBox[{1737, 737}], LineBox[{1738, 738}], LineBox[{1740, 740}], 
       LineBox[{1742, 742}], LineBox[{1747, 747}], LineBox[{1748, 748}], 
       LineBox[{1749, 749}], LineBox[{1750, 750}], LineBox[{1756, 756}], 
       LineBox[{1757, 757}], LineBox[{1762, 762}], LineBox[{1763, 763}], 
       LineBox[{1768, 768}], LineBox[{1773, 773}], LineBox[{1776, 776}], 
       LineBox[{1777, 777}], LineBox[{1782, 782}], LineBox[{1784, 784}], 
       LineBox[{1786, 786}], LineBox[{1789, 789}], LineBox[{1790, 790}], 
       LineBox[{1791, 791}], LineBox[{1793, 793}], LineBox[{1797, 797}], 
       LineBox[{1798, 798}], LineBox[{1800, 800}], LineBox[{1802, 802}], 
       LineBox[{1803, 803}], LineBox[{1804, 804}], LineBox[{1806, 806}], 
       LineBox[{1810, 810}], LineBox[{1812, 812}], LineBox[{1813, 813}], 
       LineBox[{1814, 814}], LineBox[{1818, 818}], LineBox[{1819, 819}], 
       LineBox[{1820, 820}], LineBox[{1821, 821}], LineBox[{1822, 822}], 
       LineBox[{1823, 823}], LineBox[{1826, 826}], LineBox[{1828, 828}], 
       LineBox[{1834, 834}], LineBox[{1836, 836}], LineBox[{1837, 837}], 
       LineBox[{1838, 838}], LineBox[{1839, 839}], LineBox[{1840, 840}], 
       LineBox[{1844, 844}], LineBox[{1852, 852}], LineBox[{1853, 853}], 
       LineBox[{1856, 856}], LineBox[{1859, 859}], LineBox[{1861, 861}], 
       LineBox[{1862, 862}], LineBox[{1868, 868}], LineBox[{1870, 870}], 
       LineBox[{1871, 871}], LineBox[{1872, 872}], LineBox[{1874, 874}], 
       LineBox[{1876, 876}], LineBox[{1877, 877}], LineBox[{1878, 878}], 
       LineBox[{1880, 880}], LineBox[{1881, 881}], LineBox[{1882, 882}], 
       LineBox[{1884, 884}], LineBox[{1885, 885}], LineBox[{1886, 886}], 
       LineBox[{1887, 887}], LineBox[{1890, 890}], LineBox[{1894, 894}], 
       LineBox[{1895, 895}], LineBox[{1896, 896}], LineBox[{1898, 898}], 
       LineBox[{1899, 899}], LineBox[{1900, 900}], LineBox[{1902, 902}], 
       LineBox[{1903, 903}], LineBox[{1905, 905}], LineBox[{1906, 906}], 
       LineBox[{1909, 909}], LineBox[{1913, 913}], LineBox[{1917, 917}], 
       LineBox[{1918, 918}], LineBox[{1919, 919}], LineBox[{1920, 920}], 
       LineBox[{1921, 921}], LineBox[{1922, 922}], LineBox[{1923, 923}], 
       LineBox[{1924, 924}], LineBox[{1927, 927}], LineBox[{1928, 928}], 
       LineBox[{1932, 932}], LineBox[{1935, 935}], LineBox[{1936, 936}], 
       LineBox[{1937, 937}], LineBox[{1939, 939}], LineBox[{1940, 940}], 
       LineBox[{1945, 945}], LineBox[{1946, 946}], LineBox[{1947, 947}], 
       LineBox[{1952, 952}], LineBox[{1959, 959}], LineBox[{1963, 963}], 
       LineBox[{1965, 965}], LineBox[{1966, 966}], LineBox[{1969, 969}], 
       LineBox[{1970, 970}], LineBox[{1972, 972}], LineBox[{1973, 973}], 
       LineBox[{1975, 975}], LineBox[{1977, 977}], LineBox[{1978, 978}], 
       LineBox[{1980, 980}], LineBox[{1981, 981}], LineBox[{1985, 985}], 
       LineBox[{1989, 989}], LineBox[{1990, 990}], LineBox[{1992, 992}], 
       LineBox[{1993, 993}], LineBox[{1995, 995}], LineBox[{1997, 997}], 
       LineBox[{1999, 999}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{1002, 2}], LineBox[{1006, 6}], LineBox[{1008, 8}], 
       LineBox[{1009, 9}], LineBox[{1010, 10}], LineBox[{1011, 11}], 
       LineBox[{1014, 14}], LineBox[{1016, 16}], LineBox[{1017, 17}], 
       LineBox[{1023, 23}], LineBox[{1026, 26}], LineBox[{1029, 29}], 
       LineBox[{1034, 34}], LineBox[{1036, 36}], LineBox[{1038, 38}], 
       LineBox[{1039, 39}], LineBox[{1045, 45}], LineBox[{1046, 46}], 
       LineBox[{1048, 48}], LineBox[{1052, 52}], LineBox[{1057, 57}], 
       LineBox[{1059, 59}], LineBox[{1063, 63}], LineBox[{1068, 68}], 
       LineBox[{1069, 69}], LineBox[{1070, 70}], LineBox[{1073, 73}], 
       LineBox[{1079, 79}], LineBox[{1080, 80}], LineBox[{1081, 81}], 
       LineBox[{1082, 82}], LineBox[{1084, 84}], LineBox[{1086, 86}], 
       LineBox[{1089, 89}], LineBox[{1090, 90}], LineBox[{1092, 92}], 
       LineBox[{1093, 93}], LineBox[{1094, 94}], LineBox[{1095, 95}], 
       LineBox[{1096, 96}], LineBox[{1098, 98}], LineBox[{1101, 101}], 
       LineBox[{1103, 103}], LineBox[{1107, 107}], LineBox[{1109, 109}], 
       LineBox[{1110, 110}], LineBox[{1111, 111}], LineBox[{1113, 113}], 
       LineBox[{1115, 115}], LineBox[{1116, 116}], LineBox[{1119, 119}], 
       LineBox[{1120, 120}], LineBox[{1122, 122}], LineBox[{1124, 124}], 
       LineBox[{1127, 127}], LineBox[{1128, 128}], LineBox[{1130, 130}], 
       LineBox[{1131, 131}], LineBox[{1134, 134}], LineBox[{1135, 135}], 
       LineBox[{1136, 136}], LineBox[{1137, 137}], LineBox[{1139, 139}], 
       LineBox[{1141, 141}], LineBox[{1142, 142}], LineBox[{1147, 147}], 
       LineBox[{1148, 148}], LineBox[{1150, 150}], LineBox[{1155, 155}], 
       LineBox[{1156, 156}], LineBox[{1160, 160}], LineBox[{1163, 163}], 
       LineBox[{1164, 164}], LineBox[{1165, 165}], LineBox[{1166, 166}], 
       LineBox[{1168, 168}], LineBox[{1171, 171}], LineBox[{1173, 173}], 
       LineBox[{1175, 175}], LineBox[{1177, 177}], LineBox[{1179, 179}], 
       LineBox[{1180, 180}], LineBox[{1182, 182}], LineBox[{1183, 183}], 
       LineBox[{1184, 184}], LineBox[{1186, 186}], LineBox[{1187, 187}], 
       LineBox[{1188, 188}], LineBox[{1189, 189}], LineBox[{1191, 191}], 
       LineBox[{1192, 192}], LineBox[{1193, 193}], LineBox[{1194, 194}], 
       LineBox[{1195, 195}], LineBox[{1197, 197}], LineBox[{1198, 198}], 
       LineBox[{1200, 200}], LineBox[{1201, 201}], LineBox[{1202, 202}], 
       LineBox[{1203, 203}], LineBox[{1206, 206}], LineBox[{1208, 208}], 
       LineBox[{1209, 209}], LineBox[{1213, 213}], LineBox[{1215, 215}], 
       LineBox[{1219, 219}], LineBox[{1222, 222}], LineBox[{1224, 224}], 
       LineBox[{1225, 225}], LineBox[{1227, 227}], LineBox[{1230, 230}], 
       LineBox[{1234, 234}], LineBox[{1235, 235}], LineBox[{1236, 236}], 
       LineBox[{1241, 241}], LineBox[{1243, 243}], LineBox[{1244, 244}], 
       LineBox[{1246, 246}], LineBox[{1247, 247}], LineBox[{1248, 248}], 
       LineBox[{1249, 249}], LineBox[{1250, 250}], LineBox[{1253, 253}], 
       LineBox[{1256, 256}], LineBox[{1257, 257}], LineBox[{1258, 258}], 
       LineBox[{1259, 259}], LineBox[{1262, 262}], LineBox[{1264, 264}], 
       LineBox[{1266, 266}], LineBox[{1269, 269}], LineBox[{1270, 270}], 
       LineBox[{1271, 271}], LineBox[{1273, 273}], LineBox[{1275, 275}], 
       LineBox[{1276, 276}], LineBox[{1280, 280}], LineBox[{1282, 282}], 
       LineBox[{1284, 284}], LineBox[{1285, 285}], LineBox[{1290, 290}], 
       LineBox[{1300, 300}], LineBox[{1303, 303}], LineBox[{1304, 304}], 
       LineBox[{1306, 306}], LineBox[{1308, 308}], LineBox[{1310, 310}], 
       LineBox[{1314, 314}], LineBox[{1316, 316}], LineBox[{1319, 319}], 
       LineBox[{1321, 321}], LineBox[{1322, 322}], LineBox[{1325, 325}], 
       LineBox[{1326, 326}], LineBox[{1329, 329}], LineBox[{1334, 334}], 
       LineBox[{1335, 335}], LineBox[{1336, 336}], LineBox[{1337, 337}], 
       LineBox[{1338, 338}], LineBox[{1340, 340}], LineBox[{1343, 343}], 
       LineBox[{1344, 344}], LineBox[{1345, 345}], LineBox[{1347, 347}], 
       LineBox[{1348, 348}], LineBox[{1349, 349}], LineBox[{1350, 350}], 
       LineBox[{1353, 353}], LineBox[{1354, 354}], LineBox[{1357, 357}], 
       LineBox[{1364, 364}], LineBox[{1366, 366}], LineBox[{1367, 367}], 
       LineBox[{1368, 368}], LineBox[{1369, 369}], LineBox[{1371, 371}], 
       LineBox[{1372, 372}], LineBox[{1374, 374}], LineBox[{1375, 375}], 
       LineBox[{1376, 376}], LineBox[{1377, 377}], LineBox[{1379, 379}], 
       LineBox[{1381, 381}], LineBox[{1383, 383}], LineBox[{1387, 387}], 
       LineBox[{1388, 388}], LineBox[{1391, 391}], LineBox[{1392, 392}], 
       LineBox[{1394, 394}], LineBox[{1397, 397}], LineBox[{1400, 400}], 
       LineBox[{1403, 403}], LineBox[{1405, 405}], LineBox[{1406, 406}], 
       LineBox[{1407, 407}], LineBox[{1411, 411}], LineBox[{1412, 412}], 
       LineBox[{1415, 415}], LineBox[{1420, 420}], LineBox[{1421, 421}], 
       LineBox[{1423, 423}], LineBox[{1427, 427}], LineBox[{1430, 430}], 
       LineBox[{1431, 431}], LineBox[{1435, 435}], LineBox[{1437, 437}], 
       LineBox[{1438, 438}], LineBox[{1439, 439}], LineBox[{1441, 441}], 
       LineBox[{1445, 445}], LineBox[{1447, 447}], LineBox[{1448, 448}], 
       LineBox[{1449, 449}], LineBox[{1450, 450}], LineBox[{1451, 451}], 
       LineBox[{1453, 453}], LineBox[{1454, 454}], LineBox[{1455, 455}], 
       LineBox[{1457, 457}], LineBox[{1460, 460}], LineBox[{1463, 463}], 
       LineBox[{1464, 464}], LineBox[{1465, 465}], LineBox[{1466, 466}], 
       LineBox[{1471, 471}], LineBox[{1472, 472}], LineBox[{1473, 473}], 
       LineBox[{1474, 474}], LineBox[{1475, 475}], LineBox[{1479, 479}], 
       LineBox[{1480, 480}], LineBox[{1481, 481}], LineBox[{1486, 486}], 
       LineBox[{1488, 488}], LineBox[{1489, 489}], LineBox[{1490, 490}], 
       LineBox[{1493, 493}], LineBox[{1497, 497}], LineBox[{1500, 500}], 
       LineBox[{1501, 501}], LineBox[{1502, 502}], LineBox[{1503, 503}], 
       LineBox[{1504, 504}], LineBox[{1505, 505}], LineBox[{1506, 506}], 
       LineBox[{1509, 509}], LineBox[{1514, 514}], LineBox[{1515, 515}], 
       LineBox[{1518, 518}], LineBox[{1520, 520}], LineBox[{1521, 521}], 
       LineBox[{1523, 523}], LineBox[{1526, 526}], LineBox[{1529, 529}], 
       LineBox[{1530, 530}], LineBox[{1531, 531}], LineBox[{1536, 536}], 
       LineBox[{1538, 538}], LineBox[{1539, 539}], LineBox[{1541, 541}], 
       LineBox[{1542, 542}], LineBox[{1545, 545}], LineBox[{1546, 546}], 
       LineBox[{1548, 548}], LineBox[{1550, 550}], LineBox[{1552, 552}], 
       LineBox[{1553, 553}], LineBox[{1554, 554}], LineBox[{1555, 555}], 
       LineBox[{1556, 556}], LineBox[{1558, 558}], LineBox[{1560, 560}], 
       LineBox[{1561, 561}], LineBox[{1562, 562}], LineBox[{1563, 563}], 
       LineBox[{1564, 564}], LineBox[{1565, 565}], LineBox[{1566, 566}], 
       LineBox[{1568, 568}], LineBox[{1570, 570}], LineBox[{1574, 574}], 
       LineBox[{1575, 575}], LineBox[{1577, 577}], LineBox[{1579, 579}], 
       LineBox[{1580, 580}], LineBox[{1582, 582}], LineBox[{1583, 583}], 
       LineBox[{1585, 585}], LineBox[{1586, 586}], LineBox[{1588, 588}], 
       LineBox[{1589, 589}], LineBox[{1591, 591}], LineBox[{1593, 593}], 
       LineBox[{1595, 595}], LineBox[{1596, 596}], LineBox[{1597, 597}], 
       LineBox[{1598, 598}], LineBox[{1600, 600}], LineBox[{1603, 603}], 
       LineBox[{1604, 604}], LineBox[{1607, 607}], LineBox[{1608, 608}], 
       LineBox[{1611, 611}], LineBox[{1614, 614}], LineBox[{1615, 615}], 
       LineBox[{1623, 623}], LineBox[{1626, 626}], LineBox[{1631, 631}], 
       LineBox[{1632, 632}], LineBox[{1633, 633}], LineBox[{1634, 634}], 
       LineBox[{1637, 637}], LineBox[{1639, 639}], LineBox[{1640, 640}], 
       LineBox[{1641, 641}], LineBox[{1643, 643}], LineBox[{1645, 645}], 
       LineBox[{1647, 647}], LineBox[{1649, 649}], LineBox[{1650, 650}], 
       LineBox[{1651, 651}], LineBox[{1652, 652}], LineBox[{1655, 655}], 
       LineBox[{1656, 656}], LineBox[{1657, 657}], LineBox[{1658, 658}], 
       LineBox[{1659, 659}], LineBox[{1660, 660}], LineBox[{1663, 663}], 
       LineBox[{1666, 666}], LineBox[{1670, 670}], LineBox[{1671, 671}], 
       LineBox[{1672, 672}], LineBox[{1673, 673}], LineBox[{1674, 674}], 
       LineBox[{1677, 677}], LineBox[{1679, 679}], LineBox[{1681, 681}], 
       LineBox[{1687, 687}], LineBox[{1688, 688}], LineBox[{1689, 689}], 
       LineBox[{1691, 691}], LineBox[{1692, 692}], LineBox[{1697, 697}], 
       LineBox[{1701, 701}], LineBox[{1704, 704}], LineBox[{1705, 705}], 
       LineBox[{1706, 706}], LineBox[{1708, 708}], LineBox[{1711, 711}], 
       LineBox[{1714, 714}], LineBox[{1718, 718}], LineBox[{1721, 721}], 
       LineBox[{1722, 722}], LineBox[{1725, 725}], LineBox[{1727, 727}], 
       LineBox[{1728, 728}], LineBox[{1730, 730}], LineBox[{1732, 732}], 
       LineBox[{1734, 734}], LineBox[{1739, 739}], LineBox[{1741, 741}], 
       LineBox[{1743, 743}], LineBox[{1744, 744}], LineBox[{1745, 745}], 
       LineBox[{1746, 746}], LineBox[{1751, 751}], LineBox[{1752, 752}], 
       LineBox[{1753, 753}], LineBox[{1754, 754}], LineBox[{1755, 755}], 
       LineBox[{1758, 758}], LineBox[{1759, 759}], LineBox[{1760, 760}], 
       LineBox[{1761, 761}], LineBox[{1764, 764}], LineBox[{1765, 765}], 
       LineBox[{1766, 766}], LineBox[{1767, 767}], LineBox[{1769, 769}], 
       LineBox[{1770, 770}], LineBox[{1771, 771}], LineBox[{1772, 772}], 
       LineBox[{1774, 774}], LineBox[{1775, 775}], LineBox[{1778, 778}], 
       LineBox[{1779, 779}], LineBox[{1780, 780}], LineBox[{1781, 781}], 
       LineBox[{1783, 783}], LineBox[{1785, 785}], LineBox[{1787, 787}], 
       LineBox[{1788, 788}], LineBox[{1792, 792}], LineBox[{1794, 794}], 
       LineBox[{1795, 795}], LineBox[{1796, 796}], LineBox[{1799, 799}], 
       LineBox[{1801, 801}], LineBox[{1805, 805}], LineBox[{1807, 807}], 
       LineBox[{1808, 808}], LineBox[{1809, 809}], LineBox[{1811, 811}], 
       LineBox[{1815, 815}], LineBox[{1816, 816}], LineBox[{1817, 817}], 
       LineBox[{1824, 824}], LineBox[{1825, 825}], LineBox[{1827, 827}], 
       LineBox[{1829, 829}], LineBox[{1830, 830}], LineBox[{1831, 831}], 
       LineBox[{1832, 832}], LineBox[{1833, 833}], LineBox[{1835, 835}], 
       LineBox[{1841, 841}], LineBox[{1842, 842}], LineBox[{1843, 843}], 
       LineBox[{1845, 845}], LineBox[{1846, 846}], LineBox[{1847, 847}], 
       LineBox[{1848, 848}], LineBox[{1849, 849}], LineBox[{1850, 850}], 
       LineBox[{1851, 851}], LineBox[{1854, 854}], LineBox[{1855, 855}], 
       LineBox[{1857, 857}], LineBox[{1858, 858}], LineBox[{1860, 860}], 
       LineBox[{1863, 863}], LineBox[{1864, 864}], LineBox[{1865, 865}], 
       LineBox[{1866, 866}], LineBox[{1867, 867}], LineBox[{1869, 869}], 
       LineBox[{1873, 873}], LineBox[{1875, 875}], LineBox[{1879, 879}], 
       LineBox[{1883, 883}], LineBox[{1888, 888}], LineBox[{1889, 889}], 
       LineBox[{1891, 891}], LineBox[{1892, 892}], LineBox[{1893, 893}], 
       LineBox[{1897, 897}], LineBox[{1901, 901}], LineBox[{1904, 904}], 
       LineBox[{1907, 907}], LineBox[{1908, 908}], LineBox[{1910, 910}], 
       LineBox[{1911, 911}], LineBox[{1912, 912}], LineBox[{1914, 914}], 
       LineBox[{1915, 915}], LineBox[{1916, 916}], LineBox[{1925, 925}], 
       LineBox[{1926, 926}], LineBox[{1929, 929}], LineBox[{1930, 930}], 
       LineBox[{1931, 931}], LineBox[{1933, 933}], LineBox[{1934, 934}], 
       LineBox[{1938, 938}], LineBox[{1941, 941}], LineBox[{1942, 942}], 
       LineBox[{1943, 943}], LineBox[{1944, 944}], LineBox[{1948, 948}], 
       LineBox[{1949, 949}], LineBox[{1950, 950}], LineBox[{1951, 951}], 
       LineBox[{1953, 953}], LineBox[{1954, 954}], LineBox[{1955, 955}], 
       LineBox[{1956, 956}], LineBox[{1957, 957}], LineBox[{1958, 958}], 
       LineBox[{1960, 960}], LineBox[{1961, 961}], LineBox[{1962, 962}], 
       LineBox[{1964, 964}], LineBox[{1967, 967}], LineBox[{1968, 968}], 
       LineBox[{1971, 971}], LineBox[{1974, 974}], LineBox[{1976, 976}], 
       LineBox[{1979, 979}], LineBox[{1982, 982}], LineBox[{1983, 983}], 
       LineBox[{1984, 984}], LineBox[{1986, 986}], LineBox[{1987, 987}], 
       LineBox[{1988, 988}], LineBox[{1991, 991}], LineBox[{1994, 994}], 
       LineBox[{1996, 996}], LineBox[{1998, 998}], LineBox[{2000, 1000}]}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwN02MDHQQAAMDXbNu2bdu2bdu2bdveal4NNdu2bXUf7idc4iYdq3T4IxAI
PAkaCJwNGQic4zwXuMglLnOFq1zjOje4yS1uc4e73OM+D3jIIx7zhKc84zkv
eMkrXvOGt7zjPR/4yCc+84WvfOM7P/jJL34TCBUI/EEQghKM4IQgJKEITRjC
Eo7wRCAikYhMFKISjejEICaxiE0c4hKP+CQgIYlITBKSkozkpCAlqUhNGtKS
jvRkICOZyEwWspKN7OQgJ7nITR7yko/8FKAghShMEYpSjOKUoCSlKE0ZylKO
8lSgIpWoTBWqUo3q1KAmtahNHepSj/o0oCGNaEwTmtKM5rSgJa1oTRva0o72
dKAjnehMF7rSje70oCe96E0f+tKP/gxgIIMYzBCGMozhjGAkoxjNGMYyjvFM
YCKTmMwUpjKN6cxgJrOYzRzmMo/5LGAhi1jMEpayjOWsYCWrWM0a1rKO9Wxg
I5vYzBa2so3t7GAnu/iTv9jNHvayj/0c4CCH+Jt/OMwRjnKMf/mP45zgJKc4
zRnOco7zXOAil7jMFa5yjevc4Ca3uM0d7nKP+zzgIY94zBOe8oznvOAlr3jN
G97yjvd84COf+MwXvvKN7/zgJ7/4TSC0/wQhKMEITghCEorQhCEs4QhPBCIS
ichEISrRiE4MYhKL2MQhLvGITwISkojEJCEpyUhOClKSitSkIS3pSE8GMpKJ
zGQhK9nITg5ykovc5CEv+chPAQpSiMIUoSjFKE4JSlKK0pShLOUoTwUqUonK
VKEq1ahODWpSi9rUoS71qE8DGtKIxjShKc1oTgta0orWtKEt7WhPBzrSic50
oSvd6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzjGM8EJjKJyUxh
KtOYzgxmMovZzGEu85jPAhayiMUsYSnLWM4KVrKK1axhLetYzwY2sonNbGEr
29jODnayiz/5i93sYS/72M8BDnKIv/mHwxzhKMf4l/84zglOcorTnOEs5zjP
BS5yictc4SrXuM4NbnKL29zhLve4zwMe8ojHPOEpz3jOC17yite84S3veM8H
PvKJz3zhK9/4zg9+8ovfBML4TxCCEozghCAkoQhNGMISjvBEICKRiEwUohKN
6MQgJrGITRziEo/4JCAhiUhMEpKSjOSkICWpSE0a0pKO9GQgI5nITBayko3s
5CAnuchNHvKSj/wUoCCFKEwRilKM4pSgJKUoTRnKUo7yVKAilahMFapSjerU
oCa1qE0d6lKP+jSgIY1oTBOa0ozmtKAlrWhNG9rSjvZ0oCOd6EwXutKN7vSg
J73oTR/60o/+DGAggxjMEIYyjOGMYCSjGM0YxjKO8UxgIpOYzBSmMo3pzGAm
s5jNHOYyj/ksYCGLWMwSlrKM5axgJatYzRrWso71bGAjm9jMFrayje3sYCe7
+JO/2M0e9rKP/RzgIIf4m384zBGOcox/+Y/jnOAkpzjNGc5yjvNc4CKXuMwV
rnKN69zgJre4zR3uco/7POAhj3jME57yjOe84CWveM0b3vKO93zgI5/4zBe+
8o3v/OAnv/hNIKz/BCEowQhOCEISitCEISzhCE8EIhKJyEQhKtGITgxiEovY
xCEu8YhPAhKSiMQkISnJSE4KUpKK1KQhLelITwYykonMZCEr2chODnKSi9zk
IS/5yE8BClKIwhShKMUoTglKUorSlKEs5ShPBSpSicpUoSrVqE4NalKL2tSh
LvWoTwMa0ojGNKEpzWhOC1rSita0oS3taE8HOtKJznShK93oTg960ove9KEv
/ejPAAYyiMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jODGYyi9nMYS7z
mM8CFrKIxSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4OdrKL/wEJBxKN

       "]]}}], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 1000.}, {-2.962642743298771, 2.9451793911850057`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8819784518687153`*^9, 3.881978465312561*^9}},
 CellLabel->"Out[90]=",ExpressionUUID->"8135b205-7f25-44ee-ac12-e3d7611df9ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"GeometricDistribution", "[", 
      RowBox[{"1", "/", "2"}], "]"}], ",", "50"}], "]"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.8819785470815277`*^9, {3.881978582204775*^9, 3.881978587546206*^9}, {
   3.881978658992475*^9, 3.881978671871854*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"685007a7-7d8e-40c0-a00c-5c33e8bab500"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJzt1DsKAjEQxvHBytLCwsJCRURExPdbN7619QiCtVfIkT2CijPK/GFPoANL
+DlfYtgsKV9u52tGROLzeY3vuifiK7yHLEb7PRfEVR4uIF+ES8hX4CryteD3
WUe+gXwT/Rbmt9HvwF3ke2p7D330B/AQHmH9MTxBfor+DP05+guzjks4QT74
9WJAfuXzEZY1+mbb38avFzc+L1u1fjfRbPN3mP+x1t7nIywH7A+Wo1q/y3hE
/+T//ztqZeECXISrcA1uwC24C/fgPjyAh/AEnsELeAkH70ivkU87f8vDknbe
locl9fy0/veb9/9+c/Efvt8e68Nv1A==
    "], {{{}, {}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], LineBox[{51, 2}],
        LineBox[{52, 3}], LineBox[{53, 6}], LineBox[{54, 7}], 
       LineBox[{55, 10}], LineBox[{56, 11}], LineBox[{57, 13}], 
       LineBox[{58, 15}], LineBox[{59, 18}], LineBox[{60, 19}], 
       LineBox[{61, 20}], LineBox[{62, 21}], LineBox[{63, 22}], 
       LineBox[{64, 25}], LineBox[{65, 27}], LineBox[{66, 29}], 
       LineBox[{67, 30}], LineBox[{68, 32}], LineBox[{69, 33}], 
       LineBox[{70, 37}], LineBox[{71, 38}], LineBox[{72, 40}], 
       LineBox[{73, 41}], LineBox[{74, 42}], LineBox[{75, 44}], 
       LineBox[{76, 45}], LineBox[{77, 48}], LineBox[{78, 50}]}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], 
      PointBox[{79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 
       94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 
       109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 
       123, 124, 125, 126, 127, 128}]}}], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 50.}, {0, 7.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.881978587978726*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"edc07f96-e4a6-4694-bb2e-d4e6d8a3c169"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Accumulate", "[", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", "100"}], "]"}], "]"}], "/", 
   RowBox[{"Range", "[", "100", "]"}]}], " ", "//", " ", 
  "ListPlot"}]], "Input",
 CellChangeTimes->{{3.88197885344417*^9, 3.8819790044326077`*^9}, {
  3.881979041322089*^9, 3.881979052031364*^9}, {3.881979122395155*^9, 
  3.88197920163914*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"2268dd6f-62c0-4ddb-9bb0-4f2b5718bb66"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdk2lIVGEUhgdbxhakck0tW6RExJo0l1LndZtxb2Z0dCRE3ChpUzGJUrhE
1o9MwiBLiFIjCSuxoEVapkiNqLTN0FLTQSyNmNAw+9W90zk/7j2cy+Xl+d5v
Od/51hceMpU4qVSqYvGT/v/DrpX/VZBrZ5gdMUF6BfGvpN3QdFGKQdJeNP4j
aV98vntAStLrFP4N8O0tF/MLaX8F34TKt4meeZVjpAMUPBCdrjvFZB6EBv9k
McdJByPEETbSW8nPXIP376RgvQ0Vjg3xfCHYH9DR/PAk81DFfNsV64Up9huO
9ctyX8R5MI+g+jCPxA/j/bW106x3oHBzlZg8fqdiP1GK9aJx/ph3wYM25jFY
6QjWWtRperyK6liDzk9aAKrtT9V+1VzPWPyyS0FaiIVBfVhM5nGIrLdF1NuY
x+GZ2/wNnzSePx4z3i/3BXTw/PGK+0nA61dSsD8BxWUxiyeLeP5E2h/zRHjN
LqqJzWeuQ9e3ltPBXcx1ivPq4XH7bG1QMa+vh75mT+vjO8yT5PUXkqANHTjV
85fnT0bS2FG3W3rmyfJ6qFLk5xFScH1Jz+7BSeapmFs1lLp3C/NURT+k4aDj
QTBPQ5nf05qFc8zT5fcppCOxv8w0N8E8g94b8wyMtN0vdh5gvkt+38IuRf8Y
qL7UPzCgYmO4mKQFAxztYKfxVgOcA/fcs7ez34hSR5CGEa7a1ud9AbyeEc0u
U1dcpqgeViNa3MPUq25yfUz03knDhOML1C6+EXyfJvn9W004lx80390wSv5M
OUcmej9YRzTb2a/g1kxonrR3p19gf5bCnwXL1eVRw03EBQW3ZkFjeOaTfon9
ZvTNRIlJGmZcuSwF+83o95QalrTVDL3lZ+mJiRHyZ6MuWOpg0siGbXXfkZ4Q
0kI2RoYdQX5R26KlJH8ORmevhT/6Thw5aMyrGixpJC3k4PelM3/f6NifA91Q
p1PBVdIqC/U/+y1Y4/5nfErNfgty/byn44vYb4HYvGIHsz8X5dFLP7WWDWv/
Ab8IrV4=
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 100.}, {0, 0.6758620689655174}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8819789204737043`*^9, 3.88197897257906*^9}, 
   3.8819790056487207`*^9, 3.881979042599114*^9, {3.881979147124791*^9, 
   3.881979209222515*^9}},
 CellLabel->
  "Out[116]=",ExpressionUUID->"29ae5440-0a37-4f64-89b7-305c4d85f783"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"6", "x", 
    RowBox[{"(", 
     RowBox[{"1", "-", "x"}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"Filling", "->", "Bottom"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.881979608778393*^9, 3.881979627927567*^9}, {
   3.881979706617278*^9, 3.881979728986058*^9}, {3.881979773759602*^9, 
   3.881979776148299*^9}, 3.881979817217259*^9},
 CellLabel->
  "In[120]:=",ExpressionUUID->"c1316f66-d8a6-4e05-bf72-7a48e77915bb"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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

    "], {{{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1FXUVkUAhtHvp7u7QRrpRjqVbkRSGpGW7lQ6pbs7BKVTpUsBAekGaURB
yX3gYq9n5ty+s07aZh1rdggXCoXCSBD2ofHDPpzzOMfTsxpNl+gJwjn31Tkc
4H++oCvfs4snlKI6bRnFj9wmN7nISQ6y8zHZyEoWMpOJjGQgPR+RjrSkoSTV
aMNINnKL1JSgKq0ZwQZukoriVKEV3/EDN0hJfbowmZ08phiVacm3rOc6Kfic
zkxiB48oSk9m8Av/UokWDGcd10hOH2azn/+oRycmsp2HfEIPpvMz/1CReRzi
Fc0ZxlqukozFHA+2tVdvPUUk51m6jxfU5Q+i+L5AY+oRfUNHYrv/rhF0gkbX
bfqAIsR1P6NRdaHG0qP6lu7EcT+pEXWaxtC9+ozPOE1k3+bqQV7SjN8I7/tQ
XcMVkrKIY6HQ+4faS2byK8+pw3wO85oOjGcr9ylMN6ayh7/5lC8Zwmouk4Ta
tGccW7hHIb5hCrt5SgWaMphVXCIxtfiasWzmLwpSniYMYiUXSURN2jGGTdyl
AOVozEBWcIGE1OArRvMTd8hPWRoxgOWcJwH5KEND+rOMP4lPvGDHYKtg72DD
4B0EWwV7Ey3YN3gjwVZECvYM3kSwEcH/Iy+laUA/lnKOdyKVgjI=
         "]]]}, {}, {}}, {{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwl1GWQVXUAh+FlwaWUbhRYukG6u7tBREolBHbp7la6u7tTQJAuQaVR6VA6
lBQlnzN8eO57/ufOnJk7vzM3vGVknYgoISEhCXwEPccy+vE5ZchLKFGJxgeE
EZ0YxCQWsfmQj4hDXOIRP3g+CTnPcvrThLLkIxEXWMEAvqAc+bnNFkbzDbVJ
zEVWMpCmlKcAd9jKGNpRhyRcYhWDaEYFCnKXbYylPXVJymVWM5jmVOQxe5hK
Vwpxjx8YRwfqkYwrrGEILajEE/YyjW4U5j7bGU8Er/mZBdTnXw4yi14EQx2T
xSTnKmsZGmzku5PakpccYV6wlftntTJP2Rds5d70YE89HWyl3fUtvwYbOi8K
9tXfgx21iD5gR7C384TgndBTwd4aqW/4JXgPnBdqDP1NG/CCQ8wmzP0z2jv4
Sa6P6xJScI11DONLXnGU+VThGfuZQQ+K8pAfmUhHGvIfh5lDH1JynfUM5yuq
8pwDzKQnxfibnUyiE434mD/ZwAi+phrF+YddTKYzn/EJf7GRkbSiOiVIxQ02
8S2tqUFJUnOTzXxHG2pSijSEk5Z0pCcDGclEZrKQlWxkJwc5yUVuPuUW3zOK
ttSiNI/YzRS60Jj/+Ym59CXUXid0KbFc/xHy/j8kj74DP0KCBQ==
         "]]},
       Annotation[#, "Charting`Private`Tag$105595#1"]& ]}}], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}, "AxesInFront" -> True},
  PlotRange->{{0, 1}, {0., 1.4999999644585054`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.881979721825646*^9, 3.881979731559367*^9}, 
   3.8819797778737926`*^9, 3.88197981929871*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"f5a82025-74a3-435a-9eb7-037672c6028f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"6", "x", 
    RowBox[{"(", 
     RowBox[{"1", "-", "x"}], ")"}], "x"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.881979857657497*^9, 3.8819798732472353`*^9}, 
   3.881979917064732*^9},
 CellLabel->
  "In[123]:=",ExpressionUUID->"310c2580-b21e-4580-86c8-27a50cc13b70"],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{3.881979874339085*^9, 3.8819799185707817`*^9},
 CellLabel->
  "Out[123]=",ExpressionUUID->"b91b406e-4bcb-4114-91e8-f08250ce7d99"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "1"], 
  RowBox[{"6", "x", 
   RowBox[{"(", 
    RowBox[{"1", "-", "x"}], ")"}], "x", " ", 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.881979967581657*^9, 3.881980046850819*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"7d6ac7e5-f187-4265-b600-4642306f5f9e"],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{3.881980028252531*^9},
 CellLabel->
  "Out[125]=",ExpressionUUID->"caa8ba87-7dec-40bc-a468-4c1eb48ae156"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", " ", "=", " ", 
  RowBox[{
  "SemanticImport", "[", 
   "\"\</Users/codingquark/Documents/Wolfram \
Mathematica/doing_bayesian_data_analysis/DBDA2Eprograms/HairEyeColor.csv\>\"",
    "]"}]}]], "Input",
 CellChangeTimes->{{3.881989398309679*^9, 3.881989421780427*^9}, {
   3.881989475325781*^9, 3.881989476460511*^9}, {3.881989512003676*^9, 
   3.881989512203245*^9}, {3.8819895615389643`*^9, 3.881989597354204*^9}, {
   3.8819900052129087`*^9, 3.88199003705068*^9}, {3.881990205044449*^9, 
   3.881990208720529*^9}, {3.881990469059588*^9, 3.881990471210396*^9}, 
   3.8819972285827293`*^9, {3.881997267251873*^9, 3.8819972806980047`*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"b20744b0-45e4-4ce9-8fb1-2019386c9253"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|"Hair" -> "Black", "Eye" -> "Blue", "Count" -> 20|>, <|
       "Hair" -> "Black", "Eye" -> "Brown", "Count" -> 68|>, <|
       "Hair" -> "Black", "Eye" -> "Green", "Count" -> 5|>, <|
       "Hair" -> "Black", "Eye" -> "Hazel", "Count" -> 15|>, <|
       "Hair" -> "Blond", "Eye" -> "Blue", "Count" -> 94|>, <|
       "Hair" -> "Blond", "Eye" -> "Brown", "Count" -> 7|>, <|
       "Hair" -> "Blond", "Eye" -> "Green", "Count" -> 16|>, <|
       "Hair" -> "Blond", "Eye" -> "Hazel", "Count" -> 10|>, <|
       "Hair" -> "Brown", "Eye" -> "Blue", "Count" -> 84|>, <|
       "Hair" -> "Brown", "Eye" -> "Brown", "Count" -> 119|>, <|
       "Hair" -> "Brown", "Eye" -> "Green", "Count" -> 29|>, <|
       "Hair" -> "Brown", "Eye" -> "Hazel", "Count" -> 54|>, <|
       "Hair" -> "Red", "Eye" -> "Blue", "Count" -> 17|>, <|
       "Hair" -> "Red", "Eye" -> "Brown", "Count" -> 26|>, <|
       "Hair" -> "Red", "Eye" -> "Green", "Count" -> 14|>, <|
       "Hair" -> "Red", "Eye" -> "Hazel", "Count" -> 14|>}, "AllowEmbedding" -> 
     True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Hair"} -> 1, {All, "Eye"} -> 
        1, {All, "Count"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Hair" -> TypeSystem`PackageScope`AtomShape[52.5], "Eye" -> 
            TypeSystem`PackageScope`AtomShape[52.5], "Count" -> 
            TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 3, {All}]], 16, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Hair", "Eye", "Count"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["Black", "Blond", "Brown", "Red"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["Blue", "Brown", "Green", "Hazel"]], 
         TypeSystem`Atom[Integer]}], 16], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Hair"} -> 1, {All, "Eye"} -> 
        1, {All, "Count"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Hair" -> TypeSystem`PackageScope`AtomShape[52.5], "Eye" -> 
            TypeSystem`PackageScope`AtomShape[52.5], "Count" -> 
            TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 3, {All}]], 16, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Hair", "Eye", "Count"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["Black", "Blond", "Brown", "Red"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["Blue", "Brown", "Green", "Hazel"]], 
         TypeSystem`Atom[Integer]}], 16], "Path" -> {}, "DisplayedRowCount" -> 
     16, "DisplayedColumnCount" -> 3, "DataRowCount" -> 16, "DataColumnCount" -> 
     3, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Hair", 
                  Style[
                  "Hair", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Hair"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Hair"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Eye", 
                  Style[
                  "Eye", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Eye"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Eye"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Count", 
                  Style[
                  "Count", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Count"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Count"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["Black", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Blue", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Black", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["68"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Black", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Green", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Black", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Hazel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Blond", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Blue", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["94"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Blond", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Blond", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Green", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Blond", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Hazel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Blue", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["84"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["119"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Green", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["29"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Hazel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["54"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Blue", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Green", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Hazel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{182., {296.91754150390625`, 304.08245849609375`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{182., {296.91754150390625`, 304.08245849609375`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.881989425568507*^9, 3.8819894772846117`*^9, 3.881989513133141*^9, {
   3.881989577749761*^9, 3.881989597766685*^9}, {3.88199000703526*^9, 
   3.8819900374708633`*^9}, 3.881990209549963*^9, 3.881990471575354*^9, {
   3.881997270415186*^9, 3.881997281363768*^9}},
 CellLabel->
  "Out[163]=",ExpressionUUID->"e08e308f-02c2-4c32-8170-a2fb3789acfc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", "data", "]"}]], "Input",
 CellChangeTimes->{{3.8819896603900747`*^9, 3.881989663059054*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"114d5428-f55b-4b53-b56a-57f9ba7bd070"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Hair\"\>", "\[Rule]", 
    RowBox[{
     FractionBox["1", "16"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", "\<\"Black\"\>"}], "+", 
       RowBox[{"4", " ", "\<\"Blond\"\>"}], "+", 
       RowBox[{"4", " ", "\<\"Brown\"\>"}], "+", 
       RowBox[{"4", " ", "\<\"Red\"\>"}]}], ")"}]}]}], ",", 
   RowBox[{"\<\"Eye\"\>", "\[Rule]", 
    RowBox[{
     FractionBox["1", "16"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", "\<\"Blue\"\>"}], "+", 
       RowBox[{"4", " ", "\<\"Brown\"\>"}], "+", 
       RowBox[{"4", " ", "\<\"Green\"\>"}], "+", 
       RowBox[{"4", " ", "\<\"Hazel\"\>"}]}], ")"}]}]}], ",", 
   RowBox[{"\<\"Count\"\>", "\[Rule]", "37"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8819902171894083`*^9, 3.881990477641618*^9, 
  3.881997284481278*^9},
 CellLabel->
  "Out[164]=",ExpressionUUID->"d453e581-1070-4f48-8978-3108551b4c8b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "data", "]"}]], "Input",
 CellChangeTimes->{{3.881990134656144*^9, 3.881990136677857*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"420c1ae9-1038-472e-893e-55b97d7fb9bc"],

Cell[BoxData["16"], "Output",
 CellChangeTimes->{3.881990137005192*^9, 3.881990213607231*^9, 
  3.881990480840499*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"f65f99a0-30e2-410f-83a7-26f950808ee2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", "data", "]"}]], "Input",
 CellChangeTimes->{{3.881990153295869*^9, 3.881990156605942*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"1c12a8a9-14de-4b20-af07-a3e0d6370bad"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Hair\"\>", "\[Rule]", "\<\"Black\"\>"}], ",", 
     RowBox[{"\<\"Eye\"\>", "\[Rule]", "\<\"Blue\"\>"}], ",", 
     RowBox[{"\<\"Count\"\>", "\[Rule]", "20"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Hair\"\>", "\[Rule]", "\<\"Black\"\>"}], ",", 
     RowBox[{"\<\"Eye\"\>", "\[Rule]", "\<\"Brown\"\>"}], ",", 
     RowBox[{"\<\"Count\"\>", "\[Rule]", "68"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Hair\"\>", "\[Rule]", "\<\"Black\"\>"}], ",", 
     RowBox[{"\<\"Eye\"\>", "\[Rule]", "\<\"Green\"\>"}], ",", 
     RowBox[{"\<\"Count\"\>", "\[Rule]", "5"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Hair\"\>", "\[Rule]", "\<\"Black\"\>"}], ",", 
     RowBox[{"\<\"Eye\"\>", "\[Rule]", "\<\"Hazel\"\>"}], ",", 
     RowBox[{"\<\"Count\"\>", "\[Rule]", "15"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Hair\"\>", "\[Rule]", "\<\"Blond\"\>"}], ",", 
     RowBox[{"\<\"Eye\"\>", "\[Rule]", "\<\"Blue\"\>"}], ",", 
     RowBox[{"\<\"Count\"\>", "\[Rule]", "94"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Hair\"\>", "\[Rule]", "\<\"Blond\"\>"}], ",", 
     RowBox[{"\<\"Eye\"\>", "\[Rule]", "\<\"Brown\"\>"}], ",", 
     RowBox[{"\<\"Count\"\>", "\[Rule]", "7"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Hair\"\>", "\[Rule]", "\<\"Blond\"\>"}], ",", 
     RowBox[{"\<\"Eye\"\>", "\[Rule]", "\<\"Green\"\>"}], ",", 
     RowBox[{"\<\"Count\"\>", "\[Rule]", "16"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Hair\"\>", "\[Rule]", "\<\"Blond\"\>"}], ",", 
     RowBox[{"\<\"Eye\"\>", "\[Rule]", "\<\"Hazel\"\>"}], ",", 
     RowBox[{"\<\"Count\"\>", "\[Rule]", "10"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Hair\"\>", "\[Rule]", "\<\"Brown\"\>"}], ",", 
     RowBox[{"\<\"Eye\"\>", "\[Rule]", "\<\"Blue\"\>"}], ",", 
     RowBox[{"\<\"Count\"\>", "\[Rule]", "84"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Hair\"\>", "\[Rule]", "\<\"Brown\"\>"}], ",", 
     RowBox[{"\<\"Eye\"\>", "\[Rule]", "\<\"Brown\"\>"}], ",", 
     RowBox[{"\<\"Count\"\>", "\[Rule]", "119"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Hair\"\>", "\[Rule]", "\<\"Brown\"\>"}], ",", 
     RowBox[{"\<\"Eye\"\>", "\[Rule]", "\<\"Green\"\>"}], ",", 
     RowBox[{"\<\"Count\"\>", "\[Rule]", "29"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Hair\"\>", "\[Rule]", "\<\"Brown\"\>"}], ",", 
     RowBox[{"\<\"Eye\"\>", "\[Rule]", "\<\"Hazel\"\>"}], ",", 
     RowBox[{"\<\"Count\"\>", "\[Rule]", "54"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Hair\"\>", "\[Rule]", "\<\"Red\"\>"}], ",", 
     RowBox[{"\<\"Eye\"\>", "\[Rule]", "\<\"Blue\"\>"}], ",", 
     RowBox[{"\<\"Count\"\>", "\[Rule]", "17"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Hair\"\>", "\[Rule]", "\<\"Red\"\>"}], ",", 
     RowBox[{"\<\"Eye\"\>", "\[Rule]", "\<\"Brown\"\>"}], ",", 
     RowBox[{"\<\"Count\"\>", "\[Rule]", "26"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Hair\"\>", "\[Rule]", "\<\"Red\"\>"}], ",", 
     RowBox[{"\<\"Eye\"\>", "\[Rule]", "\<\"Green\"\>"}], ",", 
     RowBox[{"\<\"Count\"\>", "\[Rule]", "14"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Hair\"\>", "\[Rule]", "\<\"Red\"\>"}], ",", 
     RowBox[{"\<\"Eye\"\>", "\[Rule]", "\<\"Hazel\"\>"}], ",", 
     RowBox[{"\<\"Count\"\>", "\[Rule]", "14"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.881990156888097*^9, 3.881990225526772*^9, 
  3.8819904828082237`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"45cc43fe-8a10-4591-baf6-46d7ac1addee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"Histogram", ",", "\"\<Count\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8819903155535917`*^9, 3.881990322474312*^9}, {
  3.881990790036304*^9, 3.881990821478035*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"17258066-1981-421b-b790-cbc32d1366d8"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.6649999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.6649999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0., 0}, {50., 11.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{25.7121196957566, 
           164.24744795836668`}, {-130.36980152094554`, 117.9643901894666}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 11]& ,
        TagBoxNote->"11"],
       StyleBox["11", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[11, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{50., 0}, {100., 4.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{163.62244795836668`, 302.15777622097676`}, {
           27.26332047658947, 117.96439018946661`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{100., 0}, {150., 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{301.53277622097676`, 440.0681044835868}, {
           94.82037276124733, 117.96439018946661`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-3., 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0., 150.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.881990322980155*^9, 3.881990485774406*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"ac5c1a77-67df-4edf-896d-ed5529bcd1e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{
   RowBox[{"GroupBy", "[", "\"\<Hair\>\"", "]"}], ",", "Total", ",", " ", 
   "\"\<Count\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.881990341697542*^9, 3.88199045571071*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"8475e472-3711-44c1-aebd-abc6cda626b1"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Black" -> 108, "Blond" -> 127, "Brown" -> 286, "Red" -> 71|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[52.5], 
         TypeSystem`PackageScope`AtomShape[34]]], 4, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["Black", "Blond", "Brown", "Red"]], 
       TypeSystem`Atom[Integer], 4], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[52.5], 
         TypeSystem`PackageScope`AtomShape[34]]], 4, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["Black", "Blond", "Brown", "Red"]], 
       TypeSystem`Atom[Integer], 4], "Path" -> {}, "DisplayedRowCount" -> 4, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 4, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Black", 
                  Style[
                  "Black", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Black"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["108"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Blond", 
                  Style[
                  "Blond", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Blond"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blond"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["127"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blond"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Brown", 
                  Style[
                  "Brown", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Brown"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["286"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Red", 
                  Style[
                  "Red", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Red"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Red"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["71"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{109., {75.91754150390625, 83.08245849609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{109., {75.91754150390625, 83.08245849609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.88199037694578*^9, 3.8819904563112173`*^9}, 
   3.881990489464055*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"274667a6-5fce-4ea4-8a9b-deb0c8fa7c4c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{
   RowBox[{"GroupBy", "[", "\"\<Eye\>\"", "]"}], ",", "Total", ",", 
   "\"\<Count\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.881990513435281*^9, 3.8819905597836323`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"4f75e5e9-c13a-4df6-8627-054bece1861e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Blue" -> 215, "Brown" -> 220, "Green" -> 64, "Hazel" -> 93|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[52.5], 
         TypeSystem`PackageScope`AtomShape[34]]], 4, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["Blue", "Brown", "Green", "Hazel"]], 
       TypeSystem`Atom[Integer], 4], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[52.5], 
         TypeSystem`PackageScope`AtomShape[34]]], 4, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["Blue", "Brown", "Green", "Hazel"]], 
       TypeSystem`Atom[Integer], 4], "Path" -> {}, "DisplayedRowCount" -> 4, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 4, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Blue", 
                  Style[
                  "Blue", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Blue"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blue"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["215"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blue"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Brown", 
                  Style[
                  "Brown", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Brown"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["220"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Green", 
                  Style[
                  "Green", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Green"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Green"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["64"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Green"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Hazel", 
                  Style[
                  "Hazel", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Hazel"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hazel"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["93"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hazel"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{109., {75.91754150390625, 83.08245849609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{109., {75.91754150390625, 83.08245849609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.881990533114708*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"18f29462-786c-4776-92b6-e588b5b4af6d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "[", 
   RowBox[{"All", ",", "\"\<Count\>\""}], "]"}], " ", "//", " ", 
  "Total"}]], "Input",
 CellChangeTimes->{{3.881990719897621*^9, 3.8819907287846937`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"3cce3a43-8936-4c34-a64c-22a9ca2fd977"],

Cell[BoxData["592"], "Output",
 CellChangeTimes->{3.881990729084455*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"24aaac2d-2c36-4855-836a-457597cb1e09"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"data", "[", 
  RowBox[{"GroupBy", "[", "\"\<Hair\>\"", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"data", "[", 
  RowBox[{"GroupBy", "[", "\"\<Eye\>\"", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8819915083175364`*^9, 3.8819915183709106`*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"1da7de6f-d59e-4bdf-ae1b-90b9e9fc4a41"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Black" -> {<|"Hair" -> "Black", "Eye" -> "Blue", "Count" -> 20|>, <|
         "Hair" -> "Black", "Eye" -> "Brown", "Count" -> 68|>, <|
         "Hair" -> "Black", "Eye" -> "Green", "Count" -> 5|>, <|
         "Hair" -> "Black", "Eye" -> "Hazel", "Count" -> 15|>}, 
       "Blond" -> {<|"Hair" -> "Blond", "Eye" -> "Blue", "Count" -> 94|>, <|
         "Hair" -> "Blond", "Eye" -> "Brown", "Count" -> 7|>, <|
         "Hair" -> "Blond", "Eye" -> "Green", "Count" -> 16|>, <|
         "Hair" -> "Blond", "Eye" -> "Hazel", "Count" -> 10|>}, 
       "Brown" -> {<|"Hair" -> "Brown", "Eye" -> "Blue", "Count" -> 84|>, <|
         "Hair" -> "Brown", "Eye" -> "Brown", "Count" -> 119|>, <|
         "Hair" -> "Brown", "Eye" -> "Green", "Count" -> 29|>, <|
         "Hair" -> "Brown", "Eye" -> "Hazel", "Count" -> 54|>}, 
       "Red" -> {<|"Hair" -> "Red", "Eye" -> "Blue", "Count" -> 17|>, <|
         "Hair" -> "Red", "Eye" -> "Brown", "Count" -> 26|>, <|
         "Hair" -> "Red", "Eye" -> "Green", "Count" -> 14|>, <|
         "Hair" -> "Red", "Eye" -> "Hazel", "Count" -> 14|>}|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, All, 
          TypeSystem`PackageScope`KeyDummy[7]} -> 1, {All, All, "Hair"} -> 
        1, {All, All, "Eye"} -> 1, {All, All, "Count"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[52.5], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "Hair" -> TypeSystem`PackageScope`AtomShape[52.5], "Eye" -> 
               TypeSystem`PackageScope`AtomShape[56.00000000000001], "Count" -> 
               TypeSystem`PackageScope`AtomShape[34]|>], 
             DirectedInfinity[1], 3, {All, All}]], 4, 
           DirectedInfinity[1], {All}]]], 4, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["Black", "Blond", "Brown", "Red"]], 
       TypeSystem`Vector[
        TypeSystem`Struct[{"Hair", "Eye", "Count"}, {
          TypeSystem`Atom[
           TypeSystem`Enumeration["Black", "Blond", "Brown", "Red"]], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[Integer]}], 4], 4], "Meta" -> <||>, "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, All, 
          TypeSystem`PackageScope`KeyDummy[7]} -> 1, {All, All, "Hair"} -> 
        1, {All, All, "Eye"} -> 1, {All, All, "Count"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[52.5], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "Hair" -> TypeSystem`PackageScope`AtomShape[52.5], "Eye" -> 
               TypeSystem`PackageScope`AtomShape[56.00000000000001], "Count" -> 
               TypeSystem`PackageScope`AtomShape[34]|>], 
             DirectedInfinity[1], 3, {All, All}]], 4, 
           DirectedInfinity[1], {All}]]], 4, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["Black", "Blond", "Brown", "Red"]], 
       TypeSystem`Vector[
        TypeSystem`Struct[{"Hair", "Eye", "Count"}, {
          TypeSystem`Atom[
           TypeSystem`Enumeration["Black", "Blond", "Brown", "Red"]], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[Integer]}], 4], 4], "Path" -> {}, 
     "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     4, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Hair", 
                  Style[
                  "Hair", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "Hair"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "Hair"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Eye", 
                  Style[
                  "Eye", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "Eye"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "Eye"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Count", 
                  Style[
                  "Count", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "Count"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "Count"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Black", 
                  Style[
                  "Black", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Black"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Black", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"], 1, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Blue", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"], 1, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"], 1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Black", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"], 2, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"], 2, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["68"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"], 2, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Black", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"], 3, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Green", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"], 3, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"], 3, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Black", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"], 4, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Hazel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"], 4, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"], 4, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Blond", 
                  Style[
                  "Blond", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Blond"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blond"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Blond", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blond"], 1, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Blue", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blond"], 1, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["94"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blond"], 1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Blond", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blond"], 2, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blond"], 2, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blond"], 2, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Blond", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blond"], 3, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Green", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blond"], 3, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blond"], 3, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Blond", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blond"], 4, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Hazel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blond"], 4, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blond"], 4, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Brown", 
                  Style[
                  "Brown", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Brown"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"], 1, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Blue", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"], 1, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["84"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"], 1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"], 2, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"], 2, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["119"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"], 2, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"], 3, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Green", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"], 3, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["29"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"], 3, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"], 4, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Hazel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"], 4, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["54"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"], 4, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Red", 
                  Style[
                  "Red", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Red"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Red"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Red"], 1, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Blue", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Red"], 1, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Red"], 1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Red"], 2, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Red"], 2, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Red"], 2, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Red"], 3, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Green", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Red"], 3, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Red"], 3, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Red"], 4, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Hazel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Red"], 4, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Red"], 4, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{248., {296.91754150390625`, 304.08245849609375`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{248., {296.91754150390625`, 304.08245849609375`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.881991518697731*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"f01a2196-aa9e-4ae7-8eda-4e391b269729"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Blue" -> {<|"Hair" -> "Black", "Eye" -> "Blue", "Count" -> 20|>, <|
         "Hair" -> "Blond", "Eye" -> "Blue", "Count" -> 94|>, <|
         "Hair" -> "Brown", "Eye" -> "Blue", "Count" -> 84|>, <|
         "Hair" -> "Red", "Eye" -> "Blue", "Count" -> 17|>}, 
       "Brown" -> {<|"Hair" -> "Black", "Eye" -> "Brown", "Count" -> 68|>, <|
         "Hair" -> "Blond", "Eye" -> "Brown", "Count" -> 7|>, <|
         "Hair" -> "Brown", "Eye" -> "Brown", "Count" -> 119|>, <|
         "Hair" -> "Red", "Eye" -> "Brown", "Count" -> 26|>}, 
       "Green" -> {<|"Hair" -> "Black", "Eye" -> "Green", "Count" -> 5|>, <|
         "Hair" -> "Blond", "Eye" -> "Green", "Count" -> 16|>, <|
         "Hair" -> "Brown", "Eye" -> "Green", "Count" -> 29|>, <|
         "Hair" -> "Red", "Eye" -> "Green", "Count" -> 14|>}, 
       "Hazel" -> {<|"Hair" -> "Black", "Eye" -> "Hazel", "Count" -> 15|>, <|
         "Hair" -> "Blond", "Eye" -> "Hazel", "Count" -> 10|>, <|
         "Hair" -> "Brown", "Eye" -> "Hazel", "Count" -> 54|>, <|
         "Hair" -> "Red", "Eye" -> "Hazel", "Count" -> 14|>}|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, All, 
          TypeSystem`PackageScope`KeyDummy[8]} -> 1, {All, All, "Hair"} -> 
        1, {All, All, "Eye"} -> 1, {All, All, "Count"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[52.5], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "Hair" -> TypeSystem`PackageScope`AtomShape[56.00000000000001], 
               "Eye" -> TypeSystem`PackageScope`AtomShape[52.5], "Count" -> 
               TypeSystem`PackageScope`AtomShape[34]|>], 
             DirectedInfinity[1], 3, {All, All}]], 4, 
           DirectedInfinity[1], {All}]]], 4, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["Blue", "Brown", "Green", "Hazel"]], 
       TypeSystem`Vector[
        TypeSystem`Struct[{"Hair", "Eye", "Count"}, {
          TypeSystem`Atom[String], 
          TypeSystem`Atom[
           TypeSystem`Enumeration["Blue", "Brown", "Green", "Hazel"]], 
          TypeSystem`Atom[Integer]}], 4], 4], "Meta" -> <||>, "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, All, 
          TypeSystem`PackageScope`KeyDummy[8]} -> 1, {All, All, "Hair"} -> 
        1, {All, All, "Eye"} -> 1, {All, All, "Count"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[52.5], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "Hair" -> TypeSystem`PackageScope`AtomShape[56.00000000000001], 
               "Eye" -> TypeSystem`PackageScope`AtomShape[52.5], "Count" -> 
               TypeSystem`PackageScope`AtomShape[34]|>], 
             DirectedInfinity[1], 3, {All, All}]], 4, 
           DirectedInfinity[1], {All}]]], 4, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["Blue", "Brown", "Green", "Hazel"]], 
       TypeSystem`Vector[
        TypeSystem`Struct[{"Hair", "Eye", "Count"}, {
          TypeSystem`Atom[String], 
          TypeSystem`Atom[
           TypeSystem`Enumeration["Blue", "Brown", "Green", "Hazel"]], 
          TypeSystem`Atom[Integer]}], 4], 4], "Path" -> {}, 
     "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     4, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Hair", 
                  Style[
                  "Hair", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "Hair"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "Hair"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Eye", 
                  Style[
                  "Eye", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "Eye"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "Eye"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Count", 
                  Style[
                  "Count", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "Count"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "Count"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Blue", 
                  Style[
                  "Blue", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Blue"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blue"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Black", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blue"], 1, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Blue", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blue"], 1, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blue"], 1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Blond", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blue"], 2, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Blue", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blue"], 2, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["94"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blue"], 2, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blue"], 3, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Blue", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blue"], 3, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["84"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blue"], 3, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blue"], 4, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Blue", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blue"], 4, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blue"], 4, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Brown", 
                  Style[
                  "Brown", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Brown"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Black", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"], 1, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"], 1, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["68"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"], 1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Blond", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"], 2, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"], 2, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"], 2, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"], 3, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"], 3, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["119"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"], 3, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"], 4, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"], 4, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"], 4, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Green", 
                  Style[
                  "Green", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Green"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Green"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Black", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Green"], 1, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Green", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Green"], 1, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Green"], 1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Blond", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Green"], 2, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Green", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Green"], 2, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Green"], 2, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Green"], 3, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Green", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Green"], 3, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["29"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Green"], 3, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Green"], 4, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Green", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Green"], 4, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Green"], 4, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Hazel", 
                  Style[
                  "Hazel", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Hazel"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hazel"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Black", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hazel"], 1, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Hazel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hazel"], 1, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hazel"], 1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Blond", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hazel"], 2, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Hazel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hazel"], 2, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hazel"], 2, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hazel"], 3, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Hazel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hazel"], 3, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["54"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hazel"], 3, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hazel"], 4, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Hazel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hazel"], 4, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hazel"], 4, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{248., {296.91754150390625`, 304.08245849609375`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{248., {296.91754150390625`, 304.08245849609375`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8819915188426533`*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"d84f94b1-a1bd-4a50-9385-6b16494c083b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{
   RowBox[{"GroupBy", "[", "\"\<Hair\>\"", "]"}], ",", "Mean", ",", 
   "\"\<Count\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8819922254438677`*^9, 3.881992238956958*^9}, {
  3.881992270619598*^9, 3.881992272588093*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"5059f696-313d-464d-b9ef-6cea759974e9"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Black" -> 27, "Blond" -> Rational[127, 4], "Brown" -> Rational[143, 2],
        "Red" -> Rational[71, 4]|>, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"Black"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Blond"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Brown"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Red"} -> 
        TypeSystem`PackageScope`AtomShape[34]|>, 1], "InitialType" -> 
     TypeSystem`Struct[{"Black", "Blond", "Brown", "Red"}, {
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Rational], 
        TypeSystem`Atom[Rational], 
        TypeSystem`Atom[Rational]}], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"Black"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Blond"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Brown"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Red"} -> 
        TypeSystem`PackageScope`AtomShape[34]|>, 1], "Type" -> 
     TypeSystem`Struct[{"Black", "Blond", "Brown", "Red"}, {
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Rational], 
        TypeSystem`Atom[Rational], 
        TypeSystem`Atom[Rational]}], "Path" -> {}, "DisplayedRowCount" -> 20, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 4, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Black", 
                  Style[
                  "Black", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Black"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["27"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Blond", 
                  Style[
                  "Blond", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Blond"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blond"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["31.75"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blond"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Brown", 
                  Style[
                  "Brown", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Brown"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["71.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Red", 
                  Style[
                  "Red", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Red"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Red"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["71/4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{109., {75.91754150390625, 83.08245849609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{109., {75.91754150390625, 83.08245849609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8819922393200693`*^9, 3.88199227763806*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"c5e42bdc-4fae-4701-820e-50edf7b54db1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{
   RowBox[{"GroupBy", "[", "\"\<Eye\>\"", "]"}], ",", "Mean", ",", 
   "\"\<Count\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.88199228468602*^9, 3.881992285071216*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"5d232234-2bd5-4313-a5c4-f90681556967"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Blue" -> Rational[215, 4], "Brown" -> 55, "Green" -> 16, "Hazel" -> 
       Rational[93, 4]|>, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"Blue"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Brown"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Green"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Hazel"} -> 
        TypeSystem`PackageScope`AtomShape[34]|>, 1], "InitialType" -> 
     TypeSystem`Struct[{"Blue", "Brown", "Green", "Hazel"}, {
        TypeSystem`Atom[Rational], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Rational]}], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"Blue"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Brown"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Green"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Hazel"} -> 
        TypeSystem`PackageScope`AtomShape[34]|>, 1], "Type" -> 
     TypeSystem`Struct[{"Blue", "Brown", "Green", "Hazel"}, {
        TypeSystem`Atom[Rational], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Rational]}], "Path" -> {}, "DisplayedRowCount" -> 20, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 4, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Blue", 
                  Style[
                  "Blue", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Blue"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blue"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["53.75"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blue"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Brown", 
                  Style[
                  "Brown", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Brown"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["55"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Green", 
                  Style[
                  "Green", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Green"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Green"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Green"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Hazel", 
                  Style[
                  "Hazel", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Hazel"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hazel"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["93/4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hazel"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{109., {75.91754150390625, 83.08245849609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{109., {75.91754150390625, 83.08245849609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.88199228543427*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"1322c4ba-c85f-45d5-af6b-c11d6d2ab37c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["data"], "Input",
 CellChangeTimes->{{3.88199526065392*^9, 3.881995262312858*^9}},
 CellLabel->
  "In[165]:=",ExpressionUUID->"77b49794-88a6-4f16-b966-3659a25037cd"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|"Hair" -> "Black", "Eye" -> "Blue", "Count" -> 20|>, <|
       "Hair" -> "Black", "Eye" -> "Brown", "Count" -> 68|>, <|
       "Hair" -> "Black", "Eye" -> "Green", "Count" -> 5|>, <|
       "Hair" -> "Black", "Eye" -> "Hazel", "Count" -> 15|>, <|
       "Hair" -> "Blond", "Eye" -> "Blue", "Count" -> 94|>, <|
       "Hair" -> "Blond", "Eye" -> "Brown", "Count" -> 7|>, <|
       "Hair" -> "Blond", "Eye" -> "Green", "Count" -> 16|>, <|
       "Hair" -> "Blond", "Eye" -> "Hazel", "Count" -> 10|>, <|
       "Hair" -> "Brown", "Eye" -> "Blue", "Count" -> 84|>, <|
       "Hair" -> "Brown", "Eye" -> "Brown", "Count" -> 119|>, <|
       "Hair" -> "Brown", "Eye" -> "Green", "Count" -> 29|>, <|
       "Hair" -> "Brown", "Eye" -> "Hazel", "Count" -> 54|>, <|
       "Hair" -> "Red", "Eye" -> "Blue", "Count" -> 17|>, <|
       "Hair" -> "Red", "Eye" -> "Brown", "Count" -> 26|>, <|
       "Hair" -> "Red", "Eye" -> "Green", "Count" -> 14|>, <|
       "Hair" -> "Red", "Eye" -> "Hazel", "Count" -> 14|>}, "AllowEmbedding" -> 
     True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Hair"} -> 1, {All, "Eye"} -> 
        1, {All, "Count"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Hair" -> TypeSystem`PackageScope`AtomShape[52.5], "Eye" -> 
            TypeSystem`PackageScope`AtomShape[52.5], "Count" -> 
            TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 3, {All}]], 16, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Hair", "Eye", "Count"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["Black", "Blond", "Brown", "Red"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["Blue", "Brown", "Green", "Hazel"]], 
         TypeSystem`Atom[Integer]}], 16], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Hair"} -> 1, {All, "Eye"} -> 
        1, {All, "Count"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Hair" -> TypeSystem`PackageScope`AtomShape[52.5], "Eye" -> 
            TypeSystem`PackageScope`AtomShape[52.5], "Count" -> 
            TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 3, {All}]], 16, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Hair", "Eye", "Count"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["Black", "Blond", "Brown", "Red"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["Blue", "Brown", "Green", "Hazel"]], 
         TypeSystem`Atom[Integer]}], 16], "Path" -> {}, "DisplayedRowCount" -> 
     16, "DisplayedColumnCount" -> 3, "DataRowCount" -> 16, "DataColumnCount" -> 
     3, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Hair", 
                  Style[
                  "Hair", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Hair"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Hair"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Eye", 
                  Style[
                  "Eye", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Eye"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Eye"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Count", 
                  Style[
                  "Count", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Count"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Count"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["Black", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Blue", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Black", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["68"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Black", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Green", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Black", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Hazel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Blond", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Blue", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["94"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Blond", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Blond", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Green", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Blond", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Hazel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Blue", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["84"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["119"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Green", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["29"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Hazel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["54"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Blue", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Green", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Hazel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{182., {296.91754150390625`, 304.08245849609375`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{182., {296.91754150390625`, 304.08245849609375`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.881995262859108*^9, 3.881997289646667*^9},
 CellLabel->
  "Out[165]=",ExpressionUUID->"4e3513d9-a0a1-4c7b-98c6-fec7cfa02ca4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"titanic", "=", " ", 
  RowBox[{"ExampleData", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Dataset\>\"", ",", "\"\<Titanic\>\""}], "}"}], 
   "]"}]}]], "Input",
 CellLabel->
  "In[153]:=",ExpressionUUID->"c6456637-b73e-433a-8628-0fd6d2f21c0b"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "class" -> "1st", "age" -> 29, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 1, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 2, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 30, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 25, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 48, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 63, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 39, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 53, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 71, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 47, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 18, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 24, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 26, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 80, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 24, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 50, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 32, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 36, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 37, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 47, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 26, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 42, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 29, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 25, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 25, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 19, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 35, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 28, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 45, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 40, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 30, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 58, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 42, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 45, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 22, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 41, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 48, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 44, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 59, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 60, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 41, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 45, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 42, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 53, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 36, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 58, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 33, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 28, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 17, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 11, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 14, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 36, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 36, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 49, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 36, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 76, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 46, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 47, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 27, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 33, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 36, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 30, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 45, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 27, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 26, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 22, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 47, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 39, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 37, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 64, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 55, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 70, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 36, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 64, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 39, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 38, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 51, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 27, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 33, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 31, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 27, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 31, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 17, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 53, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 4, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 54, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 50, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 27, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 48, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 48, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 49, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 39, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 23, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 38, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 54, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 36, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 36, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 30, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 24, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 28, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 23, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 19, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 64, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 60, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 30, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 50, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 43, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 22, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 60, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 48, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 37, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 35, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 47, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 35, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 22, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 45, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 24, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 49, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 71, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 53, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 19, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 38, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 58, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 23, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 45, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 46, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 25, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 25, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 48, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 49, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 45, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 35, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 40, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 27, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 24, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 55, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 52, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 42, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 55, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 16, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 44, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 51, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 42, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 35, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 35, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 38, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 35, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 38, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 50, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 49, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 46, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 50, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 33, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 58, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 41, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 42, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 45, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 39, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 49, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 30, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 35, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 42, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 55, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 16, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 51, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 29, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 21, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 30, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 58, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 15, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 30, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 16, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 19, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 18, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 24, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 46, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 54, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 36, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 28, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 65, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 44, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 33, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 37, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 30, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 55, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 47, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 37, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 31, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 23, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 58, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 19, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 64, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 39, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 22, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 65, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 29, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 46, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 23, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 29, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 22, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 18, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 17, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 30, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 52, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 47, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 56, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 38, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 22, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 43, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 31, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 45, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 33, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 46, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 36, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 33, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 55, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 54, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 33, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 13, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 18, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 21, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 61, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 48, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 24, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 35, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 30, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 34, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 40, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 35, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 50, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 39, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 56, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 28, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 56, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 56, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 24, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 18, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 24, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 23, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 6, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 45, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 40, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 57, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 32, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 62, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 54, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 43, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 52, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 62, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 67, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 63, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 61, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 48, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 18, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 52, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 39, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 48, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 49, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 17, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 39, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 31, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> 40, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 61, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 47, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 35, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 64, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 60, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 60, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 54, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 21, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 55, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 31, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 57, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 45, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 50, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 27, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 50, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 21, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 51, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 21, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 31, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True|>, <|
       "class" -> "1st", "age" -> 62, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "1st", "age" -> 36, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 28, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 18, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 25, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 34, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 36, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 57, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 18, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 23, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 36, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 28, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 51, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 32, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "2nd", "age" -> 19, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 28, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 1, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "2nd", "age" -> 4, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 12, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 36, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 34, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "2nd", "age" -> 19, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 23, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 26, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 42, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 27, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 15, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 60, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 40, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 20, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 25, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 36, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 25, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 42, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 42, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 1, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "2nd", "age" -> 26, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "2nd", "age" -> 22, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 35, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 19, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 44, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 54, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 52, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 37, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 29, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 25, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 45, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 29, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 28, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 29, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 28, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 24, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "2nd", "age" -> 8, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 31, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 31, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 22, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 30, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 21, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 8, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "2nd", "age" -> 18, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 48, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 28, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 32, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 17, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 29, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 25, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 18, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 18, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 34, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 54, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 8, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "2nd", "age" -> 42, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 34, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 27, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 30, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 23, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 21, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 18, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 40, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 29, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 18, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 36, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 38, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 35, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 38, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 34, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 34, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 16, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 26, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 47, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 21, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 21, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 24, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 24, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 34, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 52, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 1, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 44, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 6, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 28, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 62, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 7, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 43, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 45, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 49, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 48, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 55, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 24, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 32, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 21, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 18, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 20, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 23, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 36, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 54, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 50, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 44, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 29, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 21, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 42, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "2nd", "age" -> 63, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 60, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 33, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 17, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 42, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 47, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 24, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 22, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 32, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 23, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 34, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 22, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 35, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 45, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 57, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 31, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 26, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 1, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 3, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 25, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 22, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 17, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 34, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 36, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 24, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 61, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 50, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 42, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 57, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 1, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "2nd", "age" -> 31, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 40, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 32, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 46, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 13, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 41, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 19, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "2nd", "age" -> 39, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 48, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 70, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 27, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 54, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 39, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 16, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 62, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 33, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 14, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 2, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "2nd", "age" -> 3, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "2nd", "age" -> 37, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 26, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 19, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 28, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 20, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "2nd", "age" -> 29, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 39, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 22, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 23, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 29, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "2nd", "age" -> 28, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 50, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 19, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 41, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 21, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 19, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 43, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 32, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 34, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "2nd", "age" -> 27, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 2, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 8, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 33, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 36, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 34, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 30, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 28, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 23, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 1, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "2nd", "age" -> 3, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 50, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 19, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 21, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 26, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 25, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 27, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 25, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 18, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 20, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 30, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 59, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 30, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 35, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 40, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 25, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 41, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 25, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 19, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 14, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 50, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 23, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 28, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 27, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 29, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 27, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 40, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 31, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 30, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 23, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 31, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 12, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 40, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 33, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 27, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 29, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 2, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "2nd", "age" -> 4, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 29, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 1, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 5, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 36, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 33, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 66, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "2nd", "age" -> 31, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "2nd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 26, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "2nd", "age" -> 24, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 42, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 13, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 16, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 35, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 16, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 30, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 40, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 1, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 35, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 19, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 4, "sex" -> "male", "survived" -> False|>, <|
       "class" -> "3rd", "age" -> 6, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 2, "sex" -> "female", "survived" -> False|>,
        <|"class" -> "3rd", "age" -> 17, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 38, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 9, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 11, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 39, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 39, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 35, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 5, "sex" -> "male", "survived" -> False|>, <|
       "class" -> "3rd", "age" -> 9, "sex" -> "male", "survived" -> False|>, <|
       "class" -> "3rd", "age" -> 3, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 13, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 5, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 40, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 23, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 38, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 45, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 23, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 17, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 30, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 23, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 13, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 33, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 1, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 1, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 5, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 24, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 40, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 45, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 27, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 6, "sex" -> "male", "survived" -> False|>, <|
       "class" -> "3rd", "age" -> 9, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 40, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 32, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 20, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 35, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 19, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 21, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 30, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 38, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 17, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 17, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 21, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 16, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 37, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 36, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 31, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 31, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 30, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 71, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 43, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 35, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 30, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 9, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 3, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 36, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 59, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 17, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 44, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 17, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 23, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 45, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 30, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 1, "sex" -> "male", "survived" -> False|>, <|
       "class" -> "3rd", "age" -> 34, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 28, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 17, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 37, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 36, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 30, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 16, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 1, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 1, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 33, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 36, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 19, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 17, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 42, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 43, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 30, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 24, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 23, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 65, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 23, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 16, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 45, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 39, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 17, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 15, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 47, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 5, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 41, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 41, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 21, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 9, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 16, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 48, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 16, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 9, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 41, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 31, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 38, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 9, "sex" -> "male", "survived" -> False|>, <|
       "class" -> "3rd", "age" -> 1, "sex" -> "male", "survived" -> False|>, <|
       "class" -> "3rd", "age" -> 11, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 10, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 16, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 14, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 40, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 43, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 51, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 37, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 24, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 17, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 24, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 41, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 45, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 11, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 26, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 23, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 28, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 2, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 43, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 27, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 42, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 30, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 27, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 25, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 48, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 17, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 34, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 31, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 4, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 1, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 49, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 27, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 23, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 20, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 21, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 17, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 30, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 4, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 39, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 35, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 44, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 4, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 26, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 1, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 36, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 37, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 26, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 35, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 36, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 39, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 25, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 45, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 36, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 30, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 30, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 26, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 51, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 23, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 31, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 35, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 15, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 35, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 19, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 56, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 6, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 27, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 34, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 24, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 15, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 1, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 19, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 12, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 14, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 29, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 26, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 41, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 39, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 61, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 23, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 9, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 42, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 31, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 23, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 20, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 16, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 31, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 2, "sex" -> "male", "survived" -> False|>, <|
       "class" -> "3rd", "age" -> 6, "sex" -> "male", "survived" -> False|>, <|
       "class" -> "3rd", "age" -> 3, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 8, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 29, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 1, "sex" -> "male", "survived" -> False|>, <|
       "class" -> "3rd", "age" -> 7, "sex" -> "male", "survived" -> False|>, <|
       "class" -> "3rd", "age" -> 2, "sex" -> "male", "survived" -> False|>, <|
       "class" -> "3rd", "age" -> 16, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 14, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 41, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 1, "sex" -> "male", "survived" -> False|>, <|
       "class" -> "3rd", "age" -> 3, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 26, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 28, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 17, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 38, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 10, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 4, "sex" -> "male", "survived" -> False|>, <|
       "class" -> "3rd", "age" -> 7, "sex" -> "male", "survived" -> False|>, <|
       "class" -> "3rd", "age" -> 2, "sex" -> "male", "survived" -> False|>, <|
       "class" -> "3rd", "age" -> 8, "sex" -> "male", "survived" -> False|>, <|
       "class" -> "3rd", "age" -> 39, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 35, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 50, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 47, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 2, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 41, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 50, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 16, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 39, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 15, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 21, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 39, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 1, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 24, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 4, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 40, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 4, "sex" -> "male", "survived" -> False|>, <|
       "class" -> "3rd", "age" -> 10, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 9, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 2, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 40, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 45, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 30, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 23, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 61, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 19, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 22, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 31, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 2, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 29, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 16, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 44, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 74, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 14, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 24, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 34, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 1, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 16, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 32, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 31, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 44, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 25, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 7, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 9, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 29, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 36, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 63, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 12, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 41, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 10, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 36, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 30, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 28, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 47, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 18, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 31, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 16, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 31, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> True|>, <|
       "class" -> "3rd", "age" -> 20, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 14, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 22, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 33, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 38, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 51, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 18, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 47, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 21, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 36, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 15, "sex" -> "female", "survived" -> 
        True|>, <|
       "class" -> "3rd", "age" -> 46, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 15, "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> Missing[], "sex" -> "female", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 27, "sex" -> "male", "survived" -> 
        False|>, <|
       "class" -> "3rd", "age" -> 29, "sex" -> "male", "survived" -> False|>},
      "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "class"} -> 1, {All, "age"} -> 
        1, {All, "sex"} -> 1, {All, "survived"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "class" -> TypeSystem`PackageScope`AtomShape[31.5], "age" -> 
            TypeSystem`PackageScope`AtomShape[34], "sex" -> 
            TypeSystem`PackageScope`AtomShape[63.], "survived" -> 
            TypeSystem`PackageScope`AtomShape[36]|>], 
          DirectedInfinity[1], 4, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"class", "age", "sex", "survived"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["1st", "2nd", "3rd"]], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["female", "male"]], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 1309], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "class"} -> 1, {All, "age"} -> 
        1, {All, "sex"} -> 1, {All, "survived"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "class" -> TypeSystem`PackageScope`AtomShape[31.5], "age" -> 
            TypeSystem`PackageScope`AtomShape[34], "sex" -> 
            TypeSystem`PackageScope`AtomShape[63.], "survived" -> 
            TypeSystem`PackageScope`AtomShape[36]|>], 
          DirectedInfinity[1], 4, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"class", "age", "sex", "survived"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["1st", "2nd", "3rd"]], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["female", "male"]], 
         TypeSystem`Atom[TypeSystem`Boolean]}], 1309], "Path" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 4, "DataRowCount" -> 
     1309, "DataColumnCount" -> 4, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["class", 
                  Style[
                  "class", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "class"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "class"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["age", 
                  Style[
                  "age", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "age"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "age"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["sex", 
                  Style[
                  "sex", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "sex"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "sex"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["survived", 
                  Style[
                  "survived", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "survived"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "survived"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["29"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["63"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["39"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["53"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["71"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["47"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["80"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["50"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["36"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["survived"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 1309, 1], {1, 1309 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 1309, 1], {1, 1309 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[1309, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[1309, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 1309, 1], {1, 1309 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 1309, 1], {1, 1309 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{260., {378.41754150390625`, 385.58245849609375`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{260., {378.41754150390625`, 385.58245849609375`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.881995606546558*^9},
 CellLabel->
  "Out[153]=",ExpressionUUID->"b272054d-8350-4f53-9530-c2408927f394"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"titanic", "[", 
  RowBox[{"Histogram", ",", "\"\<age\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8819956144241667`*^9, 3.8819956206132593`*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"3f5557b8-0b67-4c70-bc7d-70436a6e3ca2"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.567], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.567], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0., 0}, {5., 51.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{26.25440352281825, 45.88500211934253}, {
           37.169458407466564`, 91.93456273819312}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 51]& ,
        TagBoxNote->"51"],
       StyleBox["51", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[51, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5., 0}, {10., 31.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{45.38500211934253, 65.01560071586681}, {
           58.44989147833972, 91.93456273819312}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 31]& ,
        TagBoxNote->"31"],
       StyleBox["31", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[31, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{10., 0}, {15., 25.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{64.51560071586681, 84.14619931239108}, {
           64.83402139960168, 91.93456273819312}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 25]& ,
        TagBoxNote->"25"],
       StyleBox["25", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[25, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{15., 0}, {20., 118.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{83.64619931239108, 
           103.27679790891536`}, {-34.11999237995852, 91.93456273819312}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 118]& ,
        TagBoxNote->"118"],
       StyleBox["118", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[118, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{20., 0}, {25., 183.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{102.77679790891536`, 
           122.40739650543964`}, {-103.28139986029628`, 91.93456273819312}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 183]& ,
        TagBoxNote->"183"],
       StyleBox["183", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[183, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{25., 0}, {30., 161.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{121.90739650543964`, 
           141.53799510196393`}, {-79.87292348233582, 91.93456273819312}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 161]& ,
        TagBoxNote->"161"],
       StyleBox["161", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[161, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{30., 0}, {35., 130.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{141.03799510196393`, 
           160.6685936984882}, {-46.88825222248242, 91.93456273819312}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 130]& ,
        TagBoxNote->"130"],
       StyleBox["130", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[130, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{35., 0}, {40., 102.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{160.1685936984882, 
           179.79919229501246`}, {-17.095645923259994`, 91.93456273819312}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 102]& ,
        TagBoxNote->"102"],
       StyleBox["102", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[102, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{40., 0}, {45., 69.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{179.29919229501246`, 198.92979089153675`}, {
           18.017068643680716`, 91.93456273819312}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 69]& ,
        TagBoxNote->"69"],
       StyleBox["69", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[69, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{45., 0}, {50., 66.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{198.42979089153675`, 218.06038948806102`}, {
           21.209133604311702`, 91.93456273819312}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 66]& ,
        TagBoxNote->"66"],
       StyleBox["66", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[66, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{50., 0}, {55., 43.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{217.56038948806102`, 237.1909880845853}, {
           45.68163163581583, 91.93456273819312}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 43]& ,
        TagBoxNote->"43"],
       StyleBox["43", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[43, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{55., 0}, {60., 27.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{236.6909880845853, 256.3215866811096}, {
           62.70597809251436, 91.93456273819312}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 27]& ,
        TagBoxNote->"27"],
       StyleBox["27", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[27, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{60., 0}, {65., 27.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{255.82158668110958`, 275.4521852776338}, {
           62.70597809251436, 91.93456273819312}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 27]& ,
        TagBoxNote->"27"],
       StyleBox["27", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[27, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{65., 0}, {70., 5.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{274.9521852776338, 294.58278387415817`}, {
           86.11445447047484, 91.93456273819312}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{70., 0}, {75., 6.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{294.08278387415817`, 313.7133824706824}, {
           85.05043281693118, 91.93456273819312}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{75., 0}, {80., 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{313.2133824706824, 332.84398106720664`}, {
           90.37054108464946, 91.93456273819312}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{80., 0}, {85., 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{332.34398106720664`, 351.974579663731}, {
           90.37054108464946, 91.93456273819312}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-1.7, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0., 85.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.881995621016491*^9},
 CellLabel->
  "Out[154]=",ExpressionUUID->"a55523f5-7509-4490-8159-bd90a42677a9"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"titanic", "[", 
  RowBox[{
   RowBox[{"GroupBy", "[", 
    RowBox[{"Key", "[", "\"\<sex\>\"", "]"}], "]"}], ",", "Counts", ",", 
   "\"\<class\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.881995696031163*^9, 3.881995710635436*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"b32ec813-3f53-4d6c-b10e-7f9508095a4e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "female" -> <|"1st" -> 144, "2nd" -> 106, "3rd" -> 216|>, 
       "male" -> <|"1st" -> 179, "2nd" -> 171, "3rd" -> 493|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[17]} -> 1, {All, "1st"} -> 
        1, {All, "2nd"} -> 1, {All, "3rd"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[67.2], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "1st" -> TypeSystem`PackageScope`AtomShape[34], "2nd" -> 
             TypeSystem`PackageScope`AtomShape[34], "3rd" -> 
             TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 3, {All}]]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"1st", "2nd", "3rd"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 2], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[17]} -> 1, {All, "1st"} -> 
        1, {All, "2nd"} -> 1, {All, "3rd"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[67.2], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "1st" -> TypeSystem`PackageScope`AtomShape[34], "2nd" -> 
             TypeSystem`PackageScope`AtomShape[34], "3rd" -> 
             TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 3, {All}]]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"1st", "2nd", "3rd"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 2], "Path" -> {}, "DisplayedRowCount" -> 
     2, "DisplayedColumnCount" -> 3, "DataRowCount" -> 2, "DataColumnCount" -> 
     3, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["1st", 
                  Style[
                  "1st", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "1st"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "1st"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2nd", 
                  Style[
                  "2nd", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2nd"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2nd"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["3rd", 
                  Style[
                  "3rd", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "3rd"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "3rd"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["female", 
                  Style[
                  "female", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["female"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["female"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["144"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["female"], 
                 Key["1st"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["106"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["female"], 
                 Key["2nd"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["216"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["female"], 
                 Key["3rd"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["male", 
                  Style[
                  "male", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["male"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["male"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["179"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["male"], 
                 Key["1st"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["171"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["male"], 
                 Key["2nd"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["493"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["male"], 
                 Key["3rd"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{204., {47.134033203125, 52.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{204., {47.134033203125, 52.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.881995711098531*^9},
 CellLabel->
  "Out[155]=",ExpressionUUID->"54858073-2442-48bf-ad5a-232c35506c55"]
}, Closed]],

Cell["\<\
Watch https://www.wolfram.com/broadcast/video.php?c=377&p=2&v=1258\
\>", "Text",
 CellChangeTimes->{
  3.881997464265163*^9, {3.882323532348997*^9, 
   3.882323533211793*^9}},ExpressionUUID->"83ddd6f4-4232-494b-bcd8-\
6438b039834a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"Histogram", ",", "\"\<Count\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.882323578896603*^9, 3.882323607853874*^9}},
 CellLabel->
  "In[232]:=",ExpressionUUID->"3750f650-5abc-407d-90bb-d7c224898cf7"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.6649999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.6649999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0., 0}, {50., 11.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{19.778403582240784`, 
           59.41846328625387}, {-45.91990109840835, 24.78243847119615}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 11]& ,
        TagBoxNote->"11"],
       StyleBox["11", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[11, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{50., 0}, {100., 4.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{58.79346328625387, 
           98.43352299026695}, {-1.3252304632054859`, 24.78243847119615}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{100., 0}, {150., 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{97.80852299026695, 137.44858269428005`}, {
           17.786771237595744`, 24.78243847119615}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-3., 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{112.95961914062468`, Automatic},
  PlotRange->{{0., 150.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.882323608286948*^9},
 CellLabel->
  "Out[232]=",ExpressionUUID->"27086ebd-2b8c-4f41-ae91-edf8680bba22"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"ListPlot", ",", "\"\<Count\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8823236165535107`*^9, 3.88232362186581*^9}},
 CellLabel->
  "In[233]:=",ExpressionUUID->"6d362c0d-738a-4eb5-b315-a530a38bf776"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], 
    PointBox[{{1., 20.}, {2., 68.}, {3., 5.}, {4., 15.}, {5., 94.}, {6., 
     7.}, {7., 16.}, {8., 10.}, {9., 84.}, {10., 119.}, {11., 29.}, {12., 
     54.}, {13., 17.}, {14., 26.}, {15., 14.}, {16., 14.}}]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{111.91679687499936`, Automatic},
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 16.}, {0, 119.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.882323622288506*^9},
 CellLabel->
  "Out[233]=",ExpressionUUID->"c058f8f7-13d0-4bbf-8c0d-efec4af2acd2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{
   RowBox[{"GroupBy", "[", "\"\<Hair\>\"", "]"}], ",", 
   RowBox[{"GroupBy", "[", "\"\<Eye\>\"", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8823243158267593`*^9, 3.882324327943862*^9}, {
  3.8823244506707487`*^9, 3.882324456118441*^9}},
 CellLabel->
  "In[253]:=",ExpressionUUID->"f47843c6-c78e-40e1-a14e-c418a6f603d0"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Black" -> <|
        "Blue" -> {<|"Hair" -> "Black", "Eye" -> "Blue", "Count" -> 20|>}, 
         "Brown" -> {<|"Hair" -> "Black", "Eye" -> "Brown", "Count" -> 68|>}, 
         "Green" -> {<|"Hair" -> "Black", "Eye" -> "Green", "Count" -> 5|>}, 
         "Hazel" -> {<|
           "Hair" -> "Black", "Eye" -> "Hazel", "Count" -> 15|>}|>, 
       "Blond" -> <|
        "Blue" -> {<|"Hair" -> "Blond", "Eye" -> "Blue", "Count" -> 94|>}, 
         "Brown" -> {<|"Hair" -> "Blond", "Eye" -> "Brown", "Count" -> 7|>}, 
         "Green" -> {<|"Hair" -> "Blond", "Eye" -> "Green", "Count" -> 16|>}, 
         "Hazel" -> {<|
           "Hair" -> "Blond", "Eye" -> "Hazel", "Count" -> 10|>}|>, 
       "Brown" -> <|
        "Blue" -> {<|"Hair" -> "Brown", "Eye" -> "Blue", "Count" -> 84|>}, 
         "Brown" -> {<|"Hair" -> "Brown", "Eye" -> "Brown", "Count" -> 119|>},
          "Green" -> {<|"Hair" -> "Brown", "Eye" -> "Green", "Count" -> 29|>},
          "Hazel" -> {<|
           "Hair" -> "Brown", "Eye" -> "Hazel", "Count" -> 54|>}|>, 
       "Red" -> <|
        "Blue" -> {<|"Hair" -> "Red", "Eye" -> "Blue", "Count" -> 17|>}, 
         "Brown" -> {<|"Hair" -> "Red", "Eye" -> "Brown", "Count" -> 26|>}, 
         "Green" -> {<|"Hair" -> "Red", "Eye" -> "Green", "Count" -> 14|>}, 
         "Hazel" -> {<|
           "Hair" -> "Red", "Eye" -> "Hazel", "Count" -> 14|>}|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[32]} -> 
        1, {All, "Blue"} -> <|{All, "Blue", All, "Hair"} -> 
          1, {All, "Blue", All, "Eye"} -> 1, {All, "Blue", All, "Count"} -> 
          1|>, {All, "Brown"} -> <|{All, "Brown", All, "Hair"} -> 
          1, {All, "Brown", All, "Eye"} -> 1, {All, "Brown", All, "Count"} -> 
          1|>, {All, "Green"} -> <|{All, "Green", All, "Hair"} -> 
          1, {All, "Green", All, "Eye"} -> 1, {All, "Green", All, "Count"} -> 
          1|>, {All, "Hazel"} -> <|{All, "Hazel", All, "Hair"} -> 
          1, {All, "Hazel", All, "Eye"} -> 1, {All, "Hazel", All, "Count"} -> 
          1|>|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[56.00000000000001], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Blue" -> TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`Limited[
                 
                 TypeSystem`PackageScope`RowShape[<|
                  "Hair" -> TypeSystem`PackageScope`AtomShape[
                    56.00000000000001], "Eye" -> 
                   TypeSystem`PackageScope`AtomShape[42.], "Count" -> 
                   TypeSystem`PackageScope`AtomShape[34]|>], 
                 DirectedInfinity[1], 3, {All, "Blue", All}]], 1, 
               DirectedInfinity[1], {All, "Blue"}], "Brown" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`Limited[
                 
                 TypeSystem`PackageScope`RowShape[<|
                  "Hair" -> TypeSystem`PackageScope`AtomShape[
                    56.00000000000001], "Eye" -> 
                   TypeSystem`PackageScope`AtomShape[52.5], "Count" -> 
                   TypeSystem`PackageScope`AtomShape[34]|>], 
                 DirectedInfinity[1], 3, {All, "Brown", All}]], 1, 
               DirectedInfinity[1], {All, "Brown"}], "Green" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`Limited[
                 
                 TypeSystem`PackageScope`RowShape[<|
                  "Hair" -> TypeSystem`PackageScope`AtomShape[
                    56.00000000000001], "Eye" -> 
                   TypeSystem`PackageScope`AtomShape[52.5], "Count" -> 
                   TypeSystem`PackageScope`AtomShape[34]|>], 
                 DirectedInfinity[1], 3, {All, "Green", All}]], 1, 
               DirectedInfinity[1], {All, "Green"}], "Hazel" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`Limited[
                 
                 TypeSystem`PackageScope`RowShape[<|
                  "Hair" -> TypeSystem`PackageScope`AtomShape[
                    56.00000000000001], "Eye" -> 
                   TypeSystem`PackageScope`AtomShape[52.5], "Count" -> 
                   TypeSystem`PackageScope`AtomShape[34]|>], 
                 DirectedInfinity[1], 3, {All, "Hazel", All}]], 1, 
               DirectedInfinity[1], {All, "Hazel"}]|>], 
           DirectedInfinity[1], 4, {All}]]], 4, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"Blue", "Brown", "Green", "Hazel"}, {
         TypeSystem`Vector[
          TypeSystem`Struct[{"Hair", "Eye", "Count"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["Blue"]], 
            TypeSystem`Atom[Integer]}], 1], 
         TypeSystem`Vector[
          TypeSystem`Struct[{"Hair", "Eye", "Count"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["Brown"]], 
            TypeSystem`Atom[Integer]}], 1], 
         TypeSystem`Vector[
          TypeSystem`Struct[{"Hair", "Eye", "Count"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["Green"]], 
            TypeSystem`Atom[Integer]}], 1], 
         TypeSystem`Vector[
          TypeSystem`Struct[{"Hair", "Eye", "Count"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["Hazel"]], 
            TypeSystem`Atom[Integer]}], 1]}], 4], "Meta" -> <||>, "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[32]} -> 
        1, {All, "Blue"} -> <|{All, "Blue", All, "Hair"} -> 
          1, {All, "Blue", All, "Eye"} -> 1, {All, "Blue", All, "Count"} -> 
          1|>, {All, "Brown"} -> <|{All, "Brown", All, "Hair"} -> 
          1, {All, "Brown", All, "Eye"} -> 1, {All, "Brown", All, "Count"} -> 
          1|>, {All, "Green"} -> <|{All, "Green", All, "Hair"} -> 
          1, {All, "Green", All, "Eye"} -> 1, {All, "Green", All, "Count"} -> 
          1|>, {All, "Hazel"} -> <|{All, "Hazel", All, "Hair"} -> 
          1, {All, "Hazel", All, "Eye"} -> 1, {All, "Hazel", All, "Count"} -> 
          1|>|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[56.00000000000001], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Blue" -> TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`Limited[
                 
                 TypeSystem`PackageScope`RowShape[<|
                  "Hair" -> TypeSystem`PackageScope`AtomShape[
                    56.00000000000001], "Eye" -> 
                   TypeSystem`PackageScope`AtomShape[42.], "Count" -> 
                   TypeSystem`PackageScope`AtomShape[34]|>], 
                 DirectedInfinity[1], 3, {All, "Blue", All}]], 1, 
               DirectedInfinity[1], {All, "Blue"}], "Brown" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`Limited[
                 
                 TypeSystem`PackageScope`RowShape[<|
                  "Hair" -> TypeSystem`PackageScope`AtomShape[
                    56.00000000000001], "Eye" -> 
                   TypeSystem`PackageScope`AtomShape[52.5], "Count" -> 
                   TypeSystem`PackageScope`AtomShape[34]|>], 
                 DirectedInfinity[1], 3, {All, "Brown", All}]], 1, 
               DirectedInfinity[1], {All, "Brown"}], "Green" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`Limited[
                 
                 TypeSystem`PackageScope`RowShape[<|
                  "Hair" -> TypeSystem`PackageScope`AtomShape[
                    56.00000000000001], "Eye" -> 
                   TypeSystem`PackageScope`AtomShape[52.5], "Count" -> 
                   TypeSystem`PackageScope`AtomShape[34]|>], 
                 DirectedInfinity[1], 3, {All, "Green", All}]], 1, 
               DirectedInfinity[1], {All, "Green"}], "Hazel" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`Limited[
                 
                 TypeSystem`PackageScope`RowShape[<|
                  "Hair" -> TypeSystem`PackageScope`AtomShape[
                    56.00000000000001], "Eye" -> 
                   TypeSystem`PackageScope`AtomShape[52.5], "Count" -> 
                   TypeSystem`PackageScope`AtomShape[34]|>], 
                 DirectedInfinity[1], 3, {All, "Hazel", All}]], 1, 
               DirectedInfinity[1], {All, "Hazel"}]|>], 
           DirectedInfinity[1], 4, {All}]]], 4, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"Blue", "Brown", "Green", "Hazel"}, {
         TypeSystem`Vector[
          TypeSystem`Struct[{"Hair", "Eye", "Count"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["Blue"]], 
            TypeSystem`Atom[Integer]}], 1], 
         TypeSystem`Vector[
          TypeSystem`Struct[{"Hair", "Eye", "Count"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["Brown"]], 
            TypeSystem`Atom[Integer]}], 1], 
         TypeSystem`Vector[
          TypeSystem`Struct[{"Hair", "Eye", "Count"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["Green"]], 
            TypeSystem`Atom[Integer]}], 1], 
         TypeSystem`Vector[
          TypeSystem`Struct[{"Hair", "Eye", "Count"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["Hazel"]], 
            TypeSystem`Atom[Integer]}], 1]}], 4], "Path" -> {}, 
     "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 4, "DataRowCount" -> 
     4, "DataColumnCount" -> 4, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Blue", 
                  Style[
                  "Blue", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Blue"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Blue"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Brown", 
                  Style[
                  "Brown", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Brown"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Brown"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Green", 
                  Style[
                  "Green", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Green"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Green"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Hazel", 
                  Style[
                  "Hazel", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Hazel"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Hazel"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Hair", 
                  Style[
                  "Hair", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Blue", All, "Hair"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Blue", All, "Hair"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Eye", 
                  Style[
                  "Eye", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Blue", All, "Eye"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Blue", All, "Eye"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Count", 
                  Style[
                  "Count", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Blue", All, "Count"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Blue", All, "Count"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Hair", 
                  Style[
                  "Hair", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Brown", All, "Hair"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Brown", All, "Hair"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Eye", 
                  Style[
                  "Eye", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Brown", All, "Eye"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Brown", All, "Eye"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Count", 
                  Style[
                  "Count", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Brown", All, "Count"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Brown", All, "Count"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Hair", 
                  Style[
                  "Hair", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Green", All, "Hair"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Green", All, "Hair"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Eye", 
                  Style[
                  "Eye", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Green", All, "Eye"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Green", All, "Eye"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Count", 
                  Style[
                  "Count", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Green", All, "Count"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Green", All, "Count"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Hair", 
                  Style[
                  "Hair", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Hazel", All, "Hair"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Hazel", All, "Hair"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Eye", 
                  Style[
                  "Eye", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Hazel", All, "Eye"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Hazel", All, "Eye"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Count", 
                  Style[
                  "Count", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Hazel", All, "Count"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Hazel", All, "Count"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Black", 
                  Style[
                  "Black", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Black"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Black", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"], 
                 Key["Blue"], 1, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Blue", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"], 
                 Key["Blue"], 1, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{42., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"], 
                 Key["Blue"], 1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Black", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"], 
                 Key["Brown"], 1, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"], 
                 Key["Brown"], 1, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["68"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"], 
                 Key["Brown"], 1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Black", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"], 
                 Key["Green"], 1, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Green", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"], 
                 Key["Green"], 1, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"], 
                 Key["Green"], 1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Black", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"], 
                 Key["Hazel"], 1, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Hazel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"], 
                 Key["Hazel"], 1, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"], 
                 Key["Hazel"], 1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Blond", 
                  Style[
                  "Blond", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Blond"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blond"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Blond", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blond"], 
                 Key["Blue"], 1, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Blue", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blond"], 
                 Key["Blue"], 1, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{42., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["94"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blond"], 
                 Key["Blue"], 1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Blond", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blond"], 
                 Key["Brown"], 1, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blond"], 
                 Key["Brown"], 1, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blond"], 
                 Key["Brown"], 1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Blond", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blond"], 
                 Key["Green"], 1, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Green", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blond"], 
                 Key["Green"], 1, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blond"], 
                 Key["Green"], 1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Blond", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blond"], 
                 Key["Hazel"], 1, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Hazel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blond"], 
                 Key["Hazel"], 1, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blond"], 
                 Key["Hazel"], 1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Brown", 
                  Style[
                  "Brown", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Brown"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"], 
                 Key["Blue"], 1, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Blue", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"], 
                 Key["Blue"], 1, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{42., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["84"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"], 
                 Key["Blue"], 1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"], 
                 Key["Brown"], 1, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"], 
                 Key["Brown"], 1, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["119"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"], 
                 Key["Brown"], 1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"], 
                 Key["Green"], 1, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Green", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"], 
                 Key["Green"], 1, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["29"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"], 
                 Key["Green"], 1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"], 
                 Key["Hazel"], 1, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Hazel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"], 
                 Key["Hazel"], 1, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["54"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"], 
                 Key["Hazel"], 1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Red", 
                  Style[
                  "Red", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Red"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Red"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Red"], 
                 Key["Blue"], 1, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Blue", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Red"], 
                 Key["Blue"], 1, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{42., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Red"], 
                 Key["Blue"], 1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Red"], 
                 Key["Brown"], 1, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Red"], 
                 Key["Brown"], 1, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Red"], 
                 Key["Brown"], 1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Red"], 
                 Key["Green"], 1, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Green", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Red"], 
                 Key["Green"], 1, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Red"], 
                 Key["Green"], 1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Red"], 
                 Key["Hazel"], 1, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Hazel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Red"], 
                 Key["Hazel"], 1, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Red"], 
                 Key["Hazel"], 1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{789., {109.91754150390625`, 117.08245849609375`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{789., {109.91754150390625`, 117.08245849609375`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.882324319568479*^9, 3.882324328352075*^9}, {
  3.8823244523603153`*^9, 3.8823244573150806`*^9}},
 CellLabel->
  "Out[253]=",ExpressionUUID->"db22f069-48b7-4a19-b77c-4c3c55c4884a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"data", "[", 
  RowBox[{"Total", ",", "\"\<Count\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "[", 
   RowBox[{"All", ",", "\"\<Count\>\""}], "]"}], " ", "//", 
  "Total"}]}], "Input",
 CellChangeTimes->{{3.882324902015929*^9, 3.8823249591328573`*^9}, {
  3.882325057881302*^9, 3.882325075839531*^9}},
 CellLabel->
  "In[263]:=",ExpressionUUID->"7de6a6cc-5710-4911-b660-c43ef2714fbd"],

Cell[BoxData["592"], "Output",
 CellChangeTimes->{{3.882324919342741*^9, 3.8823249594241753`*^9}, {
  3.8823250631783123`*^9, 3.882325076156598*^9}},
 CellLabel->
  "Out[263]=",ExpressionUUID->"551a8bae-c9a0-4bf3-b290-0aa6e5c21b51"],

Cell[BoxData["592"], "Output",
 CellChangeTimes->{{3.882324919342741*^9, 3.8823249594241753`*^9}, {
  3.8823250631783123`*^9, 3.8823250761614656`*^9}},
 CellLabel->
  "Out[264]=",ExpressionUUID->"2e3e6f98-2d51-4386-bd1b-8d99f51325b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"Mean", ",", "\"\<Count\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.882325097205058*^9, 3.882325100565568*^9}},
 CellLabel->
  "In[265]:=",ExpressionUUID->"8c56a2bd-acae-4d8a-9558-6662279cedfd"],

Cell[BoxData["37"], "Output",
 CellChangeTimes->{3.8823251009171667`*^9},
 CellLabel->
  "Out[265]=",ExpressionUUID->"f0eca392-30b1-491c-9e53-21c84d329699"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"Median", ",", "\"\<Count\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.882325103538382*^9, 3.882325119546876*^9}},
 CellLabel->
  "In[268]:=",ExpressionUUID->"fe11a88f-fd4c-4e3e-8164-1b3099ea0a40"],

Cell[BoxData[
 FractionBox["37", "2"]], "Output",
 CellChangeTimes->{{3.882325109014948*^9, 3.88232512088426*^9}},
 CellLabel->
  "Out[268]=",ExpressionUUID->"46b88a97-e450-4cf0-b655-53b20f6b7407"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"Counts", ",", "\"\<Hair\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8823251423361073`*^9, 3.882325149518107*^9}},
 CellLabel->
  "In[269]:=",ExpressionUUID->"040581c8-5942-48c3-8902-aa112d2f19a8"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|"Black" -> 4, "Blond" -> 4, "Brown" -> 4, "Red" -> 4|>,
      "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[52.5], 
         TypeSystem`PackageScope`AtomShape[34]]], 4, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["Black", "Blond", "Brown", "Red"]], 
       TypeSystem`Atom[Integer], 4], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[52.5], 
         TypeSystem`PackageScope`AtomShape[34]]], 4, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["Black", "Blond", "Brown", "Red"]], 
       TypeSystem`Atom[Integer], 4], "Path" -> {}, "DisplayedRowCount" -> 4, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 4, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Black", 
                  Style[
                  "Black", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Black"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Blond", 
                  Style[
                  "Blond", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Blond"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blond"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blond"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Brown", 
                  Style[
                  "Brown", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Brown"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Red", 
                  Style[
                  "Red", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Red"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Red"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{109., {75.91754150390625, 83.08245849609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{109., {75.91754150390625, 83.08245849609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.882325149892294*^9},
 CellLabel->
  "Out[269]=",ExpressionUUID->"233696b6-d068-43d4-9d96-d6ad0dc51ec1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"Counts", ",", "\"\<Eye\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.882325151871832*^9, 3.882325155815065*^9}},
 CellLabel->
  "In[270]:=",ExpressionUUID->"0fcab2fa-a1cf-41ba-9fe4-0e6fbce6c8c6"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Blue" -> 4, "Brown" -> 4, "Green" -> 4, "Hazel" -> 4|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[52.5], 
         TypeSystem`PackageScope`AtomShape[34]]], 4, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["Blue", "Brown", "Green", "Hazel"]], 
       TypeSystem`Atom[Integer], 4], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[52.5], 
         TypeSystem`PackageScope`AtomShape[34]]], 4, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["Blue", "Brown", "Green", "Hazel"]], 
       TypeSystem`Atom[Integer], 4], "Path" -> {}, "DisplayedRowCount" -> 4, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 4, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Blue", 
                  Style[
                  "Blue", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Blue"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blue"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blue"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Brown", 
                  Style[
                  "Brown", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Brown"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Green", 
                  Style[
                  "Green", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Green"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Green"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Green"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Hazel", 
                  Style[
                  "Hazel", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Hazel"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hazel"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hazel"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{109., {75.91754150390625, 83.08245849609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{109., {75.91754150390625, 83.08245849609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.882325156237255*^9},
 CellLabel->
  "Out[270]=",ExpressionUUID->"5789a89f-af27-4ca2-a181-b2a9673eb1d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"MinMax", ",", "\"\<Count\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.882325187025839*^9, 3.882325192035593*^9}},
 CellLabel->
  "In[271]:=",ExpressionUUID->"50c1f982-0571-4aeb-b453-009b41207737"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {5, 119}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[34]], 2, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Atom[Integer], 2], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[34]], 2, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Atom[Integer], 2], "Path" -> {}, "DisplayedRowCount" -> 2, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 2, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["119"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{46., {41.91754150390625, 49.08245849609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{46., {41.91754150390625, 49.08245849609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.882325192367523*^9},
 CellLabel->
  "Out[271]=",ExpressionUUID->"8b020003-831f-48ab-a45f-258b0d94d42e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"StandardDeviation", ",", "\"\<Count\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8823251970215387`*^9, 3.882325206085733*^9}},
 CellLabel->
  "In[272]:=",ExpressionUUID->"6742cfee-e420-4f69-95f9-19e783a29200"],

Cell[BoxData[
 SqrtBox[
  FractionBox["6314", "5"]]], "Output",
 CellChangeTimes->{3.882325206441615*^9},
 CellLabel->
  "Out[272]=",ExpressionUUID->"220b2f31-5055-4f5e-bf1f-d71c72df0db3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"data", "[", 
  RowBox[{
   RowBox[{"GroupBy", "[", "\"\<Hair\>\"", "]"}], ",", "Total", ",", 
   "\"\<Count\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"data", "[", 
  RowBox[{
   RowBox[{"GroupBy", "[", "\"\<Eye\>\"", "]"}], ",", "Total", ",", 
   "\"\<Count\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.88232572997684*^9, 3.882325769747218*^9}},
 CellLabel->
  "In[289]:=",ExpressionUUID->"a5bcd8da-b837-47d3-baff-2a6f80532985"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Black" -> 108, "Blond" -> 127, "Brown" -> 286, "Red" -> 71|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[52.5], 
         TypeSystem`PackageScope`AtomShape[34]]], 4, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["Black", "Blond", "Brown", "Red"]], 
       TypeSystem`Atom[Integer], 4], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[52.5], 
         TypeSystem`PackageScope`AtomShape[34]]], 4, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["Black", "Blond", "Brown", "Red"]], 
       TypeSystem`Atom[Integer], 4], "Path" -> {}, "DisplayedRowCount" -> 4, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 4, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Black", 
                  Style[
                  "Black", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Black"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["108"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Blond", 
                  Style[
                  "Blond", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Blond"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blond"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["127"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blond"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Brown", 
                  Style[
                  "Brown", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Brown"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["286"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Red", 
                  Style[
                  "Red", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Red"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Red"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["71"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{109., {75.91754150390625, 83.08245849609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{109., {75.91754150390625, 83.08245849609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.882325740255432*^9, 3.8823257701613293`*^9}},
 CellLabel->
  "Out[289]=",ExpressionUUID->"73fcc8fd-46b6-44de-afcc-73580c508cc0"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Blue" -> 215, "Brown" -> 220, "Green" -> 64, "Hazel" -> 93|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[52.5], 
         TypeSystem`PackageScope`AtomShape[34]]], 4, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["Blue", "Brown", "Green", "Hazel"]], 
       TypeSystem`Atom[Integer], 4], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[52.5], 
         TypeSystem`PackageScope`AtomShape[34]]], 4, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["Blue", "Brown", "Green", "Hazel"]], 
       TypeSystem`Atom[Integer], 4], "Path" -> {}, "DisplayedRowCount" -> 4, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 4, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Blue", 
                  Style[
                  "Blue", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Blue"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blue"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["215"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blue"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Brown", 
                  Style[
                  "Brown", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Brown"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["220"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Green", 
                  Style[
                  "Green", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Green"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Green"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["64"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Green"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Hazel", 
                  Style[
                  "Hazel", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Hazel"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hazel"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["93"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hazel"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{109., {75.91754150390625, 83.08245849609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{109., {75.91754150390625, 83.08245849609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.882325740255432*^9, 3.88232577021064*^9}},
 CellLabel->
  "Out[290]=",ExpressionUUID->"ee5e21d3-b40a-42ec-9282-4813d6d84e51"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PieChart", "[", 
  RowBox[{
   RowBox[{"data", "[", 
    RowBox[{
     RowBox[{"GroupBy", "[", "\"\<Eye\>\"", "]"}], ",", "Total", ",", 
     "\"\<Count\>\""}], "]"}], ",", 
   RowBox[{"ChartLegends", "->", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.882325890884696*^9, 3.882326007941347*^9}},
 CellLabel->
  "In[299]:=",ExpressionUUID->"45c6aa36-4897-451c-9618-17b5c691b51b"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$530674$530790 = False, 
       DynamicChart`click$530678$530790 = False, 
       DynamicChart`click$530682$530790 = False, 
       DynamicChart`click$530686$530790 = False}, {{
        RGBColor[0.5, 0.5, 1.], 
        EdgeForm[{
          GrayLevel[0], 
          Opacity[0.5]}], {{{}, {{
            RGBColor[0.982864, 0.7431472, 0.3262672], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], 
            TagBox[
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.8596925842593688, 
                    3.141592653589793}]}, 
                    ImageSizeCache -> {{39.83578643762692, 
                    346.3424014116365}, {-188.16421356237308`, \
-1.5857864376268935`}}], "DelayedMouseEffectStyle"], StatusArea[#, 215]& , 
                  TagBoxNote -> "215"], 
                 StyleBox["215", {}, StripOnInput -> False]], Annotation[#, 
                 Style[215, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$530674$530790, 
                   FEPrivate`Not[DynamicChart`click$530674$530790]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               FEPrivate`If[
               DynamicChart`click$530674$530790, {{{1., 0.}, {0., 
                 1.}}, {-0.08334621646313418, 0.18180596305204177`}}, {{1, 
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$530674$530790}]], 
             "DelayedClickEffect"]}, {
            RGBColor[0.928, 0.5210666666666667, 0.2], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], 
            TagBox[
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.4752749285438558`, 
                    0.8596925842593688}]}, 
                    ImageSizeCache -> {{223.5857864376269, 
                    410.1642135623731}, {-143.63092326056903`, 
                    181.3265522684169}}], "DelayedMouseEffectStyle"], 
                  StatusArea[#, 220]& , TagBoxNote -> "220"], 
                 StyleBox["220", {}, StripOnInput -> False]], Annotation[#, 
                 Style[220, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$530678$530790, 
                   FEPrivate`Not[DynamicChart`click$530678$530790]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               FEPrivate`If[
               DynamicChart`click$530678$530790, {{{1., 0.}, {0., 1.}}, {
                 0.1906010136346544, -0.060590870611357706`}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$530678$530790}]], 
             "DelayedClickEffect"]}, {
            RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], 
            TagBox[
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.1545382049957036`, -1.4752749285438558`}]}, 
                    ImageSizeCache -> {{122.31196764833305`, 
                    243.9395908503376}, {-4.414213562373078, 
                    182.16421356237308`}}], "DelayedMouseEffectStyle"], 
                  StatusArea[#, 64]& , TagBoxNote -> "64"], 
                 StyleBox["64", {}, StripOnInput -> False]], Annotation[#, 
                 Style[64, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$530682$530790, 
                   FEPrivate`Not[DynamicChart`click$530682$530790]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               FEPrivate`If[
               DynamicChart`click$530682$530790, {{{1., 0.}, {0., 
                 1.}}, {-0.0483386078958406, -0.194070551570021}}, {{1, 0}, {
                0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$530682$530790}]], 
             "DelayedClickEffect"]}, {
            RGBColor[0.4992, 0.5552, 0.8309304], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], 
            TagBox[
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.1545382049957036`}]}, 
                    ImageSizeCache -> {{39.83578643762692, 
                    226.4142135623731}, {-4.414213562373078, 
                    151.7363454541299}}], "DelayedMouseEffectStyle"], 
                  StatusArea[#, 93]& , TagBoxNote -> "93"], 
                 StyleBox["93", {}, StripOnInput -> False]], Annotation[#, 
                 Style[93, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$530686$530790, 
                   FEPrivate`Not[DynamicChart`click$530686$530790]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               FEPrivate`If[
               DynamicChart`click$530686$530790, {{{1., 0.}, {0., 
                 1.}}, {-0.17613347406029609`, -0.09474702800326251}}, {{1, 
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$530686$530790}]], 
             "DelayedClickEffect"]}}}, {}}, {}}, {{{
          TagBox[
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 215]& , TagBoxNote -> "215"], 
               StyleBox["215", {}, StripOnInput -> False]], Annotation[#, 
               Style[215, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$530674$530790, 
                 FEPrivate`Not[DynamicChart`click$530674$530790]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$530674$530790, {{{1., 0.}, {0., 
               1.}}, {-0.08334621646313418, 0.18180596305204177`}}, {{1, 0}, {
              0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$530674$530790}]], 
           "DelayedClickEffect"], 
          TagBox[
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 220]& , TagBoxNote -> "220"], 
               StyleBox["220", {}, StripOnInput -> False]], Annotation[#, 
               Style[220, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$530678$530790, 
                 FEPrivate`Not[DynamicChart`click$530678$530790]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$530678$530790, {{{1., 0.}, {0., 1.}}, {
               0.1906010136346544, -0.060590870611357706`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$530678$530790}]], 
           "DelayedClickEffect"], 
          TagBox[
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 64]& , TagBoxNote -> "64"], 
               StyleBox["64", {}, StripOnInput -> False]], Annotation[#, 
               Style[64, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$530682$530790, 
                 FEPrivate`Not[DynamicChart`click$530682$530790]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$530682$530790, {{{1., 0.}, {0., 
               1.}}, {-0.0483386078958406, -0.194070551570021}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$530682$530790}]], 
           "DelayedClickEffect"], 
          TagBox[
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 93]& , TagBoxNote -> "93"], 
               StyleBox["93", {}, StripOnInput -> False]], Annotation[#, 
               Style[93, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$530686$530790, 
                 FEPrivate`Not[DynamicChart`click$530686$530790]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$530686$530790, {{{1., 0.}, {0., 
               1.}}, {-0.17613347406029609`, -0.09474702800326251}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$530686$530790}]], 
           "DelayedClickEffect"]}, {}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{}, {}}, {{{}, {}, {}, {}}, {}}}, 
    ContentSelectable -> False, DisplayFunction -> Identity, GridLinesStyle -> 
    Directive[
      GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
    PlotRangePadding -> Scaled[0.09166666666666669]], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Blue\"", "\"Brown\"", "\"Green\"", "\"Hazel\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.928, 0.5210666666666667, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.982864, 0.7431472, 0.3262672]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.928, 0.5210666666666667, 0.2]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.7116405333333333, 0.4816, 0.5483194666666666]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.4992, 0.5552, 0.8309304]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"None", ",", "None", ",", "None", ",", "None"}], 
                 "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8823259040340147`*^9, 3.882326008615684*^9}},
 CellLabel->
  "Out[299]=",ExpressionUUID->"9c7f753d-cd71-48c3-aebc-054c2dd77fc9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PieChart", "[", 
  RowBox[{
   RowBox[{"data", "[", 
    RowBox[{
     RowBox[{"GroupBy", "[", "\"\<Hair\>\"", "]"}], ",", "Total", ",", 
     "\"\<Count\>\""}], "]"}], ",", 
   RowBox[{"ChartLegends", "->", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.88232601674137*^9, 3.882326017167124*^9}},
 CellLabel->
  "In[300]:=",ExpressionUUID->"88e02522-1e49-47d0-ad84-1a2d30a5d157"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$531300$531406 = False, 
       DynamicChart`click$531304$531406 = False, 
       DynamicChart`click$531308$531406 = False, 
       DynamicChart`click$531312$531406 = False}, {{
        RGBColor[0.5, 0.5, 1.], 
        EdgeForm[{
          GrayLevel[0], 
          Opacity[0.5]}], {{{}, {{
            RGBColor[0.982864, 0.7431472, 0.3262672], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], 
            TagBox[
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.9953358745773009`, 
                    3.141592653589793}]}, 
                    ImageSizeCache -> {{39.83578643762692, 
                    226.4142135623731}, {-171.85244867119303`, \
-1.5857864376268935`}}], "DelayedMouseEffectStyle"], StatusArea[#, 108]& , 
                  TagBoxNote -> "108"], 
                 StyleBox["108", {}, StripOnInput -> False]], Annotation[#, 
                 Style[108, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$531300$531406, 
                   FEPrivate`Not[DynamicChart`click$531300$531406]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               FEPrivate`If[
               DynamicChart`click$531300$531406, {{{1., 0.}, {0., 
                 1.}}, {-0.1680417357827509, 0.10845263959498704`}}, {{1, 
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$531300$531406}]], 
             "DelayedClickEffect"]}, {
            RGBColor[0.928, 0.5210666666666667, 0.2], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], 
            TagBox[
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.6474228103681665, 
                    1.9953358745773009`}]}, 
                    ImageSizeCache -> {{147.8989320727933, 
                    372.9807166623457}, {-188.16421356237308`, \
-1.5857864376268935`}}], "DelayedMouseEffectStyle"], StatusArea[#, 127]& , 
                  TagBoxNote -> "127"], 
                 StyleBox["127", {}, StripOnInput -> False]], Annotation[#, 
                 Style[127, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$531304$531406, 
                   FEPrivate`Not[DynamicChart`click$531304$531406]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               FEPrivate`If[
               DynamicChart`click$531304$531406, {{{1., 0.}, {0., 1.}}, {
                 0.04936780522140282, 0.19381129948385786`}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$531304$531406}]], 
             "DelayedClickEffect"]}, {
            RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], 
            TagBox[
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-2.3880349562760257`, 
                    0.6474228103681665}]}, 
                    ImageSizeCache -> {{89.58441228919838, 
                    410.1642135623731}, {-115.23985440891056`, 
                    182.16421356237305`}}], "DelayedMouseEffectStyle"], 
                  StatusArea[#, 286]& , TagBoxNote -> "286"], 
                 StyleBox["286", {}, StripOnInput -> False]], Annotation[#, 
                 Style[286, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$531308$531406, 
                   FEPrivate`Not[DynamicChart`click$531308$531406]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               FEPrivate`If[
               DynamicChart`click$531308$531406, {{{1., 0.}, {0., 1.}}, {
                 0.12891851532484774`, -0.15290525303741856`}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$531308$531406}]], 
             "DelayedClickEffect"]}, {
            RGBColor[0.4992, 0.5552, 0.8309304], 
            EdgeForm[{
              GrayLevel[0], 
              Opacity[0.5]}], 
            TagBox[
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.3880349562760257`}]}, 
                    ImageSizeCache -> {{39.83578643762692, 
                    226.4142135623731}, {-4.414213562373121, 
                    124.14286672597329`}}], "DelayedMouseEffectStyle"], 
                  StatusArea[#, 71]& , TagBoxNote -> "71"], 
                 StyleBox["71", {}, StripOnInput -> False]], Annotation[#, 
                 Style[71, {}], "Tooltip"]& ], 
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$531312$531406, 
                   FEPrivate`Not[DynamicChart`click$531312$531406]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], 
              Dynamic[
               FEPrivate`If[
               DynamicChart`click$531312$531406, {{{1., 0.}, {0., 
                 1.}}, {-0.185970921331216, -0.0735854361896338}}, {{1, 0}, {
                0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$531312$531406}]], 
             "DelayedClickEffect"]}}}, {}}, {}}, {{{
          TagBox[
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 108]& , TagBoxNote -> "108"], 
               StyleBox["108", {}, StripOnInput -> False]], Annotation[#, 
               Style[108, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$531300$531406, 
                 FEPrivate`Not[DynamicChart`click$531300$531406]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$531300$531406, {{{1., 0.}, {0., 
               1.}}, {-0.1680417357827509, 0.10845263959498704`}}, {{1, 0}, {
              0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$531300$531406}]], 
           "DelayedClickEffect"], 
          TagBox[
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 127]& , TagBoxNote -> "127"], 
               StyleBox["127", {}, StripOnInput -> False]], Annotation[#, 
               Style[127, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$531304$531406, 
                 FEPrivate`Not[DynamicChart`click$531304$531406]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$531304$531406, {{{1., 0.}, {0., 1.}}, {
               0.04936780522140282, 0.19381129948385786`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$531304$531406}]], 
           "DelayedClickEffect"], 
          TagBox[
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 286]& , TagBoxNote -> "286"], 
               StyleBox["286", {}, StripOnInput -> False]], Annotation[#, 
               Style[286, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$531308$531406, 
                 FEPrivate`Not[DynamicChart`click$531308$531406]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$531308$531406, {{{1., 0.}, {0., 1.}}, {
               0.12891851532484774`, -0.15290525303741856`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$531308$531406}]], 
           "DelayedClickEffect"], 
          TagBox[
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 71]& , TagBoxNote -> "71"], 
               StyleBox["71", {}, StripOnInput -> False]], Annotation[#, 
               Style[71, {}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$531312$531406, 
                 FEPrivate`Not[DynamicChart`click$531312$531406]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$531312$531406, {{{1., 0.}, {0., 
               1.}}, {-0.185970921331216, -0.0735854361896338}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$531312$531406}]], 
           "DelayedClickEffect"]}, {}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{}, {}}, {{{}, {}, {}, {}}, {}}}, 
    ContentSelectable -> False, DisplayFunction -> Identity, GridLinesStyle -> 
    Directive[
      GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
    PlotRangePadding -> Scaled[0.09166666666666669]], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Black\"", "\"Blond\"", "\"Brown\"", "\"Red\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.928, 0.5210666666666667, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.982864, 0.7431472, 0.3262672]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.928, 0.5210666666666667, 0.2]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.7116405333333333, 0.4816, 0.5483194666666666]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.4992, 0.5552, 0.8309304]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"None", ",", "None", ",", "None", ",", "None"}], 
                 "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.882326018243701*^9},
 CellLabel->
  "Out[300]=",ExpressionUUID->"9d90678b-184b-4aff-a16b-193a7189c8d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "[", 
   RowBox[{"GroupBy", "[", "\"\<Eye\>\"", "]"}], "]"}], " ", "//", 
  "Normal"}]], "Input",
 CellChangeTimes->{{3.882326389840021*^9, 3.882326392596867*^9}},
 CellLabel->
  "In[301]:=",ExpressionUUID->"bf5aa6b4-3293-4d09-a65b-6c7725779d77"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Blue\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"Hair\"\>", "\[Rule]", "\<\"Black\"\>"}], ",", 
        RowBox[{"\<\"Eye\"\>", "\[Rule]", "\<\"Blue\"\>"}], ",", 
        RowBox[{"\<\"Count\"\>", "\[Rule]", "20"}]}], "\[RightAssociation]"}],
       ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"Hair\"\>", "\[Rule]", "\<\"Blond\"\>"}], ",", 
        RowBox[{"\<\"Eye\"\>", "\[Rule]", "\<\"Blue\"\>"}], ",", 
        RowBox[{"\<\"Count\"\>", "\[Rule]", "94"}]}], "\[RightAssociation]"}],
       ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"Hair\"\>", "\[Rule]", "\<\"Brown\"\>"}], ",", 
        RowBox[{"\<\"Eye\"\>", "\[Rule]", "\<\"Blue\"\>"}], ",", 
        RowBox[{"\<\"Count\"\>", "\[Rule]", "84"}]}], "\[RightAssociation]"}],
       ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"Hair\"\>", "\[Rule]", "\<\"Red\"\>"}], ",", 
        RowBox[{"\<\"Eye\"\>", "\[Rule]", "\<\"Blue\"\>"}], ",", 
        RowBox[{"\<\"Count\"\>", "\[Rule]", "17"}]}], 
       "\[RightAssociation]"}]}], "}"}]}], ",", 
   RowBox[{"\<\"Brown\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"Hair\"\>", "\[Rule]", "\<\"Black\"\>"}], ",", 
        RowBox[{"\<\"Eye\"\>", "\[Rule]", "\<\"Brown\"\>"}], ",", 
        RowBox[{"\<\"Count\"\>", "\[Rule]", "68"}]}], "\[RightAssociation]"}],
       ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"Hair\"\>", "\[Rule]", "\<\"Blond\"\>"}], ",", 
        RowBox[{"\<\"Eye\"\>", "\[Rule]", "\<\"Brown\"\>"}], ",", 
        RowBox[{"\<\"Count\"\>", "\[Rule]", "7"}]}], "\[RightAssociation]"}], 
      ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"Hair\"\>", "\[Rule]", "\<\"Brown\"\>"}], ",", 
        RowBox[{"\<\"Eye\"\>", "\[Rule]", "\<\"Brown\"\>"}], ",", 
        RowBox[{"\<\"Count\"\>", "\[Rule]", "119"}]}], 
       "\[RightAssociation]"}], ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"Hair\"\>", "\[Rule]", "\<\"Red\"\>"}], ",", 
        RowBox[{"\<\"Eye\"\>", "\[Rule]", "\<\"Brown\"\>"}], ",", 
        RowBox[{"\<\"Count\"\>", "\[Rule]", "26"}]}], 
       "\[RightAssociation]"}]}], "}"}]}], ",", 
   RowBox[{"\<\"Green\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"Hair\"\>", "\[Rule]", "\<\"Black\"\>"}], ",", 
        RowBox[{"\<\"Eye\"\>", "\[Rule]", "\<\"Green\"\>"}], ",", 
        RowBox[{"\<\"Count\"\>", "\[Rule]", "5"}]}], "\[RightAssociation]"}], 
      ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"Hair\"\>", "\[Rule]", "\<\"Blond\"\>"}], ",", 
        RowBox[{"\<\"Eye\"\>", "\[Rule]", "\<\"Green\"\>"}], ",", 
        RowBox[{"\<\"Count\"\>", "\[Rule]", "16"}]}], "\[RightAssociation]"}],
       ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"Hair\"\>", "\[Rule]", "\<\"Brown\"\>"}], ",", 
        RowBox[{"\<\"Eye\"\>", "\[Rule]", "\<\"Green\"\>"}], ",", 
        RowBox[{"\<\"Count\"\>", "\[Rule]", "29"}]}], "\[RightAssociation]"}],
       ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"Hair\"\>", "\[Rule]", "\<\"Red\"\>"}], ",", 
        RowBox[{"\<\"Eye\"\>", "\[Rule]", "\<\"Green\"\>"}], ",", 
        RowBox[{"\<\"Count\"\>", "\[Rule]", "14"}]}], 
       "\[RightAssociation]"}]}], "}"}]}], ",", 
   RowBox[{"\<\"Hazel\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"Hair\"\>", "\[Rule]", "\<\"Black\"\>"}], ",", 
        RowBox[{"\<\"Eye\"\>", "\[Rule]", "\<\"Hazel\"\>"}], ",", 
        RowBox[{"\<\"Count\"\>", "\[Rule]", "15"}]}], "\[RightAssociation]"}],
       ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"Hair\"\>", "\[Rule]", "\<\"Blond\"\>"}], ",", 
        RowBox[{"\<\"Eye\"\>", "\[Rule]", "\<\"Hazel\"\>"}], ",", 
        RowBox[{"\<\"Count\"\>", "\[Rule]", "10"}]}], "\[RightAssociation]"}],
       ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"Hair\"\>", "\[Rule]", "\<\"Brown\"\>"}], ",", 
        RowBox[{"\<\"Eye\"\>", "\[Rule]", "\<\"Hazel\"\>"}], ",", 
        RowBox[{"\<\"Count\"\>", "\[Rule]", "54"}]}], "\[RightAssociation]"}],
       ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"Hair\"\>", "\[Rule]", "\<\"Red\"\>"}], ",", 
        RowBox[{"\<\"Eye\"\>", "\[Rule]", "\<\"Hazel\"\>"}], ",", 
        RowBox[{"\<\"Count\"\>", "\[Rule]", "14"}]}], 
       "\[RightAssociation]"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8823263929437523`*^9},
 CellLabel->
  "Out[301]=",ExpressionUUID->"f5fdb321-ba1c-4388-970f-9631416b6922"]
}, Open  ]],

Cell[TextData[{
 "Given the structure so far, we need to figure out a way to have named rows, \
nested with further named rows. Like so: {\[OpenCurlyDoubleQuote]Brown Eye\
\[CloseCurlyDoubleQuote]->{\[OpenCurlyDoubleQuote]Black Hair\
\[CloseCurlyDoubleQuote]->4, \[OpenCurlyDoubleQuote]Blond Hair\
\[CloseCurlyDoubleQuote]->10}, \[OpenCurlyDoubleQuote]Blue Eye\
\[CloseCurlyDoubleQuote]->...}\nNot sure if this should be done at import \
time, or as the next step ",
 StyleBox["after",
  FontSlant->"Italic"],
 " import."
}], "Text",
 CellChangeTimes->{{3.882326566509307*^9, 
  3.882326716955896*^9}},ExpressionUUID->"34423cc9-3ee2-4c2d-98c7-\
cbaff6178d3d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Importing Data", "Title",
 CellChangeTimes->{{3.882420271043007*^9, 3.8824202971005173`*^9}, {
  3.882420336365292*^9, 
  3.8824203389489326`*^9}},ExpressionUUID->"23412bb8-f152-4576-8a92-\
2dcae899e717"],

Cell[CellGroupData[{

Cell["How should it look like?", "Section",
 CellChangeTimes->{{3.882420346323186*^9, 
  3.882420353411522*^9}},ExpressionUUID->"ef48375c-94df-4212-a4fd-\
f8b970e0ecca"],

Cell["\<\
We want our Hair + Eye colour data to be structured \
\[OpenCurlyDoubleQuote]nicely\[CloseCurlyDoubleQuote] before we start doing \
analysis. What is this \[OpenCurlyDoubleQuote]nice\[CloseCurlyDoubleQuote] \
structure?\
\>", "Text",
 CellChangeTimes->{{3.882420359017149*^9, 
  3.8824203948289557`*^9}},ExpressionUUID->"bf3d8cf2-c32c-4a33-9f99-\
51a4719290cd"],

Cell["If imported simply, this is what it looks like:", "Text",
 CellChangeTimes->{{3.882420513651067*^9, 
  3.882420529887471*^9}},ExpressionUUID->"87a4d028-5a11-4676-a188-\
f6ca72f84ef5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "path", " ", "=", " ", 
   "\"\</Users/codingquark/Documents/Wolfram \
Mathematica/doing_bayesian_data_analysis/DBDA2Eprograms/HairEyeColor.csv\>\""}\
], ";"}], "\[IndentingNewLine]", 
 RowBox[{"dataset", "=", 
  RowBox[{"SemanticImport", "[", "path", "]"}]}]}], "Input",
 CellChangeTimes->{{3.882420531690172*^9, 3.8824205753274727`*^9}},
 CellLabel->
  "In[307]:=",ExpressionUUID->"ba7de5b8-342d-4347-b89f-484c4d5e7b8a"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|"Hair" -> "Black", "Eye" -> "Blue", "Count" -> 20|>, <|
       "Hair" -> "Black", "Eye" -> "Brown", "Count" -> 68|>, <|
       "Hair" -> "Black", "Eye" -> "Green", "Count" -> 5|>, <|
       "Hair" -> "Black", "Eye" -> "Hazel", "Count" -> 15|>, <|
       "Hair" -> "Blond", "Eye" -> "Blue", "Count" -> 94|>, <|
       "Hair" -> "Blond", "Eye" -> "Brown", "Count" -> 7|>, <|
       "Hair" -> "Blond", "Eye" -> "Green", "Count" -> 16|>, <|
       "Hair" -> "Blond", "Eye" -> "Hazel", "Count" -> 10|>, <|
       "Hair" -> "Brown", "Eye" -> "Blue", "Count" -> 84|>, <|
       "Hair" -> "Brown", "Eye" -> "Brown", "Count" -> 119|>, <|
       "Hair" -> "Brown", "Eye" -> "Green", "Count" -> 29|>, <|
       "Hair" -> "Brown", "Eye" -> "Hazel", "Count" -> 54|>, <|
       "Hair" -> "Red", "Eye" -> "Blue", "Count" -> 17|>, <|
       "Hair" -> "Red", "Eye" -> "Brown", "Count" -> 26|>, <|
       "Hair" -> "Red", "Eye" -> "Green", "Count" -> 14|>, <|
       "Hair" -> "Red", "Eye" -> "Hazel", "Count" -> 14|>}, "AllowEmbedding" -> 
     True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Hair"} -> 1, {All, "Eye"} -> 
        1, {All, "Count"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Hair" -> TypeSystem`PackageScope`AtomShape[52.5], "Eye" -> 
            TypeSystem`PackageScope`AtomShape[52.5], "Count" -> 
            TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 3, {All}]], 16, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Hair", "Eye", "Count"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["Black", "Blond", "Brown", "Red"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["Blue", "Brown", "Green", "Hazel"]], 
         TypeSystem`Atom[Integer]}], 16], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Hair"} -> 1, {All, "Eye"} -> 
        1, {All, "Count"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Hair" -> TypeSystem`PackageScope`AtomShape[52.5], "Eye" -> 
            TypeSystem`PackageScope`AtomShape[52.5], "Count" -> 
            TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 3, {All}]], 16, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Hair", "Eye", "Count"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["Black", "Blond", "Brown", "Red"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["Blue", "Brown", "Green", "Hazel"]], 
         TypeSystem`Atom[Integer]}], 16], "Path" -> {}, "DisplayedRowCount" -> 
     16, "DisplayedColumnCount" -> 3, "DataRowCount" -> 16, "DataColumnCount" -> 
     3, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Hair", 
                  Style[
                  "Hair", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Hair"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Hair"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Eye", 
                  Style[
                  "Eye", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Eye"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Eye"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Count", 
                  Style[
                  "Count", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Count"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Count"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["Black", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Blue", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Black", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["68"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Black", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Green", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Black", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Hazel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Blond", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Blue", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["94"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Blond", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Blond", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Green", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Blond", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Hazel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Blue", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["84"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["119"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Green", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["29"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Hazel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["54"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Blue", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Green", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Hazel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{182., {296.91754150390625`, 304.08245849609375`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{182., {296.91754150390625`, 304.08245849609375`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8824205765124273`*^9},
 CellLabel->
  "Out[308]=",ExpressionUUID->"250652c9-23c4-4c1b-a6e4-141038e2e76b"]
}, Open  ]],

Cell[TextData[{
 "This structure is not bad, it correctly figures out that the first row of \
the CSV is column names. But is this how we want things to be? Could we have \
more structure to it?\n\nOne approach can be to add some named rows. For \
example, we can imagine that the ",
 StyleBox["actual",
  FontSlant->"Italic"],
 " data point in the entire dataset is the `Count` column, rest are just \
names! Which means, we can have rows of rows.\n\nLet\[CloseCurlyQuote]s try. \
What does the structure look like?"
}], "Text",
 CellChangeTimes->{{3.8824205810574408`*^9, 3.882420619503091*^9}, {
  3.88242070598836*^9, 3.8824207076691837`*^9}, {3.8824208485624647`*^9, 
  3.882420863677155*^9}},ExpressionUUID->"f1f59f75-605a-4e5b-8cbf-\
5275ba257eb7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"planets", " ", "=", " ", 
  RowBox[{"ExampleData", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Dataset\>\"", ",", "\"\<Planets\>\""}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8824207255631857`*^9, 3.882420772275341*^9}, {
  3.8824208457199507`*^9, 3.882420989837995*^9}},
 CellLabel->
  "In[328]:=",ExpressionUUID->"fe9f9ed8-5f6f-406f-81c9-b4b31d2a881a"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Mercury" -> <|
        "Mass" -> Quantity[3.30104`6.*^23, "Kilograms"], "Radius" -> 
         Quantity[2439.7`5., "Kilometers"], "Moons" -> <||>|>, 
       "Venus" -> <|
        "Mass" -> Quantity[4.867320000000000000000001`6.*^24, "Kilograms"], 
         "Radius" -> Quantity[6051.85`5., "Kilometers"], "Moons" -> <||>|>, 
       "Earth" -> <|
        "Mass" -> Quantity[5.9721986`8.*^24, "Kilograms"], "Radius" -> 
         Quantity[6367.4446571000000000001`8.299868708313456, "Kilometers"], 
         "Moons" -> <|
          "Moon" -> <|
            "Mass" -> Quantity[
              7.3459006322855173653772`4.995678626217362*^22, "Kilograms"], 
             "Radius" -> Quantity[1737.5`5., "Kilometers"]|>|>|>, 
       "Mars" -> <|
        "Mass" -> Quantity[6.41693`6.*^23, "Kilograms"], "Radius" -> 
         Quantity[3385.595`4.298042852900571, "Kilometers"], 
         "Moons" -> <|
          "Phobos" -> <|
            "Mass" -> Quantity[
              1.0724880884600402`3.9586073148417724*^16, "Kilograms"], 
             "Radius" -> Quantity[11.1`3., "Kilometers"]|>, 
           "Deimos" -> <|
            "Mass" -> Quantity[
              1.468340774924336`1.9995659225206786*^15, "Kilograms"], 
             "Radius" -> Quantity[6.2`2., "Kilometers"]|>|>|>, 
       "Jupiter" -> <|
        "Mass" -> Quantity[1.89813`6.*^27, "Kilograms"], "Radius" -> 
         Quantity[69173.`5., "Kilometers"], 
         "Moons" -> <|
          "Metis" -> <|
            "Mass" -> Quantity[
              1.19864553055047796`0.9999565727231415*^17, "Kilograms"], 
             "Radius" -> Quantity[21.5`3., "Kilometers"]|>, 
           "Adrastea" -> <|
            "Mass" -> Quantity[
              7.491534565940487`0.9999565727231415*^15, "Kilograms"], 
             "Radius" -> Quantity[8.2`2., "Kilometers"]|>, 
           "Amalthea" -> <|
            "Mass" -> Quantity[
              2.067663540199574478`2.995678626217367*^18, "Kilograms"], 
             "Radius" -> Quantity[83.45`4., "Kilometers"]|>, 
           "Thebe" -> <|
            "Mass" -> Quantity[
              1.49830691318809745`1.9995659225206872*^18, "Kilograms"], 
             "Radius" -> Quantity[49.3`3., "Kilometers"]|>, 
           "Io" -> <|
            "Mass" -> Quantity[
              8.9297833448203530011087`4.995678626217362*^22, "Kilograms"], 
             "Radius" -> Quantity[1821.6`5., "Kilometers"]|>, 
           "Europa" -> <|
            "Mass" -> Quantity[
              4.7986859848371340385365`4.995678626217362*^22, "Kilograms"], 
             "Radius" -> Quantity[1560.8`5., "Kilometers"]|>, 
           "Ganymede" -> <|
            "Mass" -> Quantity[
              1.48150100386563183602529`4.995678626217362*^23, "Kilograms"], 
             "Radius" -> Quantity[2631.2`5., "Kilometers"]|>, 
           "Callisto" -> <|
            "Mass" -> Quantity[
              1.07567783404752629528633`4.995678626217362*^23, "Kilograms"], 
             "Radius" -> Quantity[2410.3`5., "Kilometers"]|>, 
           "Themisto" -> <|
            "Mass" -> Quantity[
              6.89221180066526`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[4.`2., "Kilometers"]|>, 
           "Leda" -> <|
            "Mass" -> Quantity[
              1.0937640466273112`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[10.`2., "Kilometers"]|>, 
           "Himalia" -> <|
            "Mass" -> Quantity[
              6.742381109346438525`1.999565922520683*^18, "Kilograms"], 
             "Radius" -> Quantity[85.`2., "Kilometers"]|>, 
           "Lysithea" -> <|
            "Mass" -> Quantity[
              6.2928890353900092`1.999565922520683*^16, "Kilograms"], 
             "Radius" -> Quantity[18.`2., "Kilometers"]|>, 
           "Elara" -> <|
            "Mass" -> Quantity[
              8.6901800964909652`1.9995659225206872*^17, "Kilograms"], 
             "Radius" -> Quantity[43.`2., "Kilometers"]|>, 
           "S/2000 J11" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]|>, 
           "S/2003 J12" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.`2., "Kilometers"]|>, 
           "Carpo" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]|>, 
           "Euporie" -> <|
            "Mass" -> Quantity[
              1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.`2., "Kilometers"]|>, 
           "S/2003 J3" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]|>, 
           "S/2003 J18" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]|>, 
           "Orthosie" -> <|
            "Mass" -> Quantity[
              1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.`2., "Kilometers"]|>, 
           "Euanthe" -> <|
            "Mass" -> Quantity[
              4.4949207395643`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.5`2., "Kilometers"]|>, 
           "Harpalyke" -> <|
            "Mass" -> Quantity[
              1.19864553055047`0.9999565727231415*^14, "Kilograms"], "Radius" -> 
             Quantity[2.2`2., "Kilometers"]|>, 
           "Praxidike" -> <|
            "Mass" -> Quantity[
              4.34509004824548`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[3.4`2., "Kilometers"]|>, 
           "Thyone" -> <|
            "Mass" -> Quantity[
              8.9898414791287`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]|>, 
           "S/2003 J16" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]|>, 
           "Iocaste" -> <|
            "Mass" -> Quantity[
              1.94779898714453`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[2.6`2., "Kilometers"]|>, 
           "Mneme" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]|>, 
           "Hermippe" -> <|
            "Mass" -> Quantity[
              8.9898414791287`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]|>, 
           "Thelxinoe" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]|>, 
           "Helike" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[4.`2., "Kilometers"]|>, 
           "Ananke" -> <|
            "Mass" -> Quantity[
              2.9966138263761948`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[14.`2., "Kilometers"]|>, 
           "S/2003 J15" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]|>, 
           "Eurydome" -> <|
            "Mass" -> Quantity[
              4.4949207395643`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.5`2., "Kilometers"]|>, 
           "Arche" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.5`2., "Kilometers"]|>, 
           "Herse" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]|>, 
           "Pasithee" -> <|
            "Mass" -> Quantity[
              1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.`2., "Kilometers"]|>, 
           "S/2003 J10" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]|>, 
           "Chaldene" -> <|
            "Mass" -> Quantity[
              7.4915345659396`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.9`2., "Kilometers"]|>, 
           "Isonoe" -> <|
            "Mass" -> Quantity[
              7.4915345659396`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.9`2., "Kilometers"]|>, 
           "Erinome" -> <|
            "Mass" -> Quantity[
              4.4949207395643`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.6`2., "Kilometers"]|>, 
           "Kale" -> <|
            "Mass" -> Quantity[
              1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.`2., "Kilometers"]|>, 
           "Aitne" -> <|
            "Mass" -> Quantity[
              4.4949207395643`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.5`2., "Kilometers"]|>, 
           "Taygete" -> <|
            "Mass" -> Quantity[
              1.6481376045069`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[2.5`2., "Kilometers"]|>, 
           "S/2003 J9" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.`2., "Kilometers"]|>, 
           "Carme" -> <|
            "Mass" -> Quantity[
              1.31851008360552575`1.9995659225206786*^17, "Kilograms"], 
             "Radius" -> Quantity[23.`2., "Kilometers"]|>, 
           "Sponde" -> <|
            "Mass" -> Quantity[
              1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.`2., "Kilometers"]|>, 
           "Megaclite" -> <|
            "Mass" -> Quantity[
              2.09762967846334`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[2.7`2., "Kilometers"]|>, 
           "S/2003 J5" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[4.`2., "Kilometers"]|>, 
           "S/2003 J19" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]|>, 
           "S/2003 J23" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]|>, 
           "Kalyke" -> <|
            "Mass" -> Quantity[
              1.94779898714453`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[2.6`2., "Kilometers"]|>, 
           "Kore" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]|>, 
           "Pasiphae" -> <|
            "Mass" -> Quantity[
              2.9966138263761949`1.9995659225206786*^17, "Kilograms"], 
             "Radius" -> Quantity[30.`2., "Kilometers"]|>, 
           "Eukelade" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[4.`2., "Kilometers"]|>, 
           "S/2003 J4" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]|>, 
           "Sinope" -> <|
            "Mass" -> Quantity[
              7.4915345659404873`1.9995659225206786*^16, "Kilograms"], 
             "Radius" -> Quantity[19.`2., "Kilometers"]|>, 
           "Hegemone" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]|>, 
           "Aoede" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[4.`2., "Kilometers"]|>, 
           "Kallichore" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]|>, 
           "Autonoe" -> <|
            "Mass" -> Quantity[
              8.9898414791287`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]|>, 
           "Callirrhoe" -> <|
            "Mass" -> Quantity[
              8.69018009649097`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[4.3`2., "Kilometers"]|>, 
           "Cyllene" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]|>, 
           "S/2003 J2" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]|>|>|>, 
       "Saturn" -> <|
        "Mass" -> Quantity[5.68319`6.*^26, "Kilograms"], "Radius" -> 
         Quantity[57316.`5., "Kilometers"], 
         "Moons" -> <|
          "Tarqeq" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.5`2., "Kilometers"]|>, 
           "Pan" -> <|
            "Mass" -> Quantity[
              4.944412813520729`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[12.8`3., "Kilometers"]|>, 
           "Daphnis" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.9`2., "Kilometers"]|>, 
           "Atlas" -> <|
            "Mass" -> Quantity[
              2.097629678463337`1.9995659225206786*^15, "Kilograms"], 
             "Radius" -> Quantity[10.`2., "Kilometers"]|>, 
           "Prometheus" -> <|
            "Mass" -> Quantity[
              1.86689041383236942`3.9586073148417764*^17, "Kilograms"], 
             "Radius" -> Quantity[46.8`3., "Kilometers"]|>, 
           "Pandora" -> <|
            "Mass" -> Quantity[
              1.49081537862215657`2.9956786262173587*^17, "Kilograms"], 
             "Radius" -> Quantity[40.6`3., "Kilometers"]|>, 
           "Epimetheus" -> <|
            "Mass" -> Quantity[
              5.25905726529022205`2.9956786262173543*^17, "Kilograms"], 
             "Radius" -> Quantity[58.3`3., "Kilometers"]|>, 
           "Janus" -> <|
            "Mass" -> Quantity[
              1.896856552096131371`3.9586073148417764*^18, "Kilograms"], 
             "Radius" -> Quantity[90.4`3., "Kilometers"]|>, 
           "Aegaeon" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[0.25`2., "Kilometers"]|>, 
           "Mimas" -> <|
            "Mass" -> Quantity[
              3.7907164903658865482`3.9586073148417764*^19, "Kilograms"], 
             "Radius" -> Quantity[198.8`4., "Kilometers"]|>, 
           "Methone" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.6`2., "Kilometers"]|>, 
           "Anthe" -> <|
            "Mass" -> Quantity[5.`1.*^12, "Kilograms"], "Radius" -> 
             Quantity[1.`1., "Kilometers"]|>, 
           "Pallene" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.6`2., "Kilometers"]|>, 
           "Enceladus" -> <|
            "Mass" -> Quantity[
              1.08027928440861826137`3.9586073148417764*^20, "Kilograms"], 
             "Radius" -> Quantity[252.3`4., "Kilometers"]|>, 
           "Tethys" -> <|
            "Mass" -> Quantity[
              6.17452278924814959099`4.6989700043360205*^20, "Kilograms"], 
             "Radius" -> Quantity[536.3`4., "Kilometers"]|>, 
           "Calypso" -> <|
            "Mass" -> Quantity[
              3.595936591651433`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[9.5`2., "Kilometers"]|>, 
           "Telesto" -> <|
            "Mass" -> Quantity[
              7.191873183302868`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[12.`2., "Kilometers"]|>, 
           "Polydeuces" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2`2., "Kilometers"]|>, 
           "Dione" -> <|
            "Mass" -> Quantity[
              1.095457133439213688532`4.6989700043360205*^21, "Kilograms"], 
             "Radius" -> Quantity[562.5`4., "Kilometers"]|>, 
           "Helene" -> <|
            "Mass" -> Quantity[
              2.5471217524197656`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[16.`2., "Kilometers"]|>, 
           "Rhea" -> <|
            "Mass" -> Quantity[
              2.308441461148901741032`4.6989700043360205*^21, "Kilograms"], 
             "Radius" -> Quantity[764.5`4., "Kilometers"]|>, 
           "Titan" -> <|
            "Mass" -> Quantity[
              1.34520841449162446435527`4.958607314841778*^23, "Kilograms"], 
             "Radius" -> Quantity[2575.5`5., "Kilometers"]|>, 
           "Hyperion" -> <|
            "Mass" -> Quantity[
              5.543735578795960565`1.9995659225206872*^18, "Kilograms"], 
             "Radius" -> Quantity[133.`4., "Kilometers"]|>, 
           "Iapetus" -> <|
            "Mass" -> Quantity[
              1.805459830391657427108`4.6989700043360205*^21, "Kilograms"], 
             "Radius" -> Quantity[734.5`4., "Kilometers"]|>, 
           "Kiviuq" -> <|
            "Mass" -> Quantity[
              3.296275209013815`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[8.`1., "Kilometers"]|>, 
           "Ijiraq" -> <|
            "Mass" -> Quantity[
              1.198645530550478`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[6.`1., "Kilometers"]|>, 
           "Phoebe" -> <|
            "Mass" -> Quantity[
              8.287135536843366995`3.9586073148417764*^18, "Kilograms"], 
             "Radius" -> Quantity[106.6`4., "Kilometers"]|>, 
           "Paaliaq" -> <|
            "Mass" -> Quantity[
              8.240688022534537`1.999565922520683*^15, "Kilograms"], "Radius" -> 
             Quantity[11.`3., "Kilometers"]|>, 
           "Skathi" -> <|
            "Mass" -> Quantity[
              3.146444517695`1.9995659225206786*^14, "Kilograms"], "Radius" -> 
             Quantity[4.`1., "Kilometers"]|>, 
           "Albiorix" -> <|
            "Mass" -> Quantity[
              2.0976296784633363`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[16.`2., "Kilometers"]|>, 
           "S/2007 S2" -> <|
            "Mass" -> Quantity[1.5`2.*^14, "Kilograms"], "Radius" -> 
             Quantity[3.`1., "Kilometers"]|>, 
           "Bebhionn" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]|>, 
           "Erriapo" -> <|
            "Mass" -> Quantity[
              7.64136525725929`1.9995659225206914*^14, "Kilograms"], "Radius" -> 
             Quantity[5.`1., "Kilometers"]|>, 
           "Siarnaq" -> <|
            "Mass" -> Quantity[
              3.8955979742890535`1.999565922520683*^16, "Kilograms"], 
             "Radius" -> Quantity[20.`2., "Kilometers"]|>, 
           "Skoll" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]|>, 
           "Tarvos" -> <|
            "Mass" -> Quantity[
              2.696952443738576`1.9995659225206786*^15, "Kilograms"], 
             "Radius" -> Quantity[7.5`2., "Kilometers"]|>, 
           "Greip" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]|>, 
           "S/2004 S13" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]|>, 
           "Hyrrokkin" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[4.`2., "Kilometers"]|>, 
           "Mundilfari" -> <|
            "Mass" -> Quantity[
              2.09762967846334`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[3.5`2., "Kilometers"]|>, 
           "S/2006 S1" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]|>, 
           "Jarnsaxa" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]|>, 
           "Narvi" -> <|
            "Mass" -> Quantity[
              3.44610590033262`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[3.5`2., "Kilometers"]|>, 
           "Bergelmir" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]|>, 
           "S/2004 S17" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]|>, 
           "Suttungr" -> <|
            "Mass" -> Quantity[
              2.09762967846334`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[3.5`2., "Kilometers"]|>, 
           "Hati" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]|>, 
           "S/2004 S12" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]|>, 
           "Bestla" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]|>, 
           "Farbauti" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]|>, 
           "Thrymr" -> <|
            "Mass" -> Quantity[
              2.09762967846334`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[3.5`2., "Kilometers"]|>, 
           "S/2007 S3" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.5`2., "Kilometers"]|>, 
           "Aegir" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]|>, 
           "S/2004 S7" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]|>, 
           "S/2006 S3" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]|>, 
           "Kari" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]|>, 
           "Fenrir" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.`2., "Kilometers"]|>, 
           "Surtur" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]|>, 
           "Ymir" -> <|
            "Mass" -> Quantity[
              4.944412813520729`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[9.`1., "Kilometers"]|>, 
           "Loge" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]|>, 
           "Fornjot" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.`2., "Kilometers"]|>|>|>, 
       "Uranus" -> <|
        "Mass" -> Quantity[8.68103`6.*^25, "Kilograms"], "Radius" -> 
         Quantity[25266.`5., "Kilometers"], 
         "Moons" -> <|
          "Cordelia" -> <|
            "Mass" -> Quantity[
              4.4949207395642923`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[20.1`3., "Kilometers"]|>, 
           "Ophelia" -> <|
            "Mass" -> Quantity[
              5.3939048874771508`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[21.4`3., "Kilometers"]|>, 
           "Bianca" -> <|
            "Mass" -> Quantity[
              9.2895028617662042`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[25.7`3., "Kilometers"]|>, 
           "Cressida" -> <|
            "Mass" -> Quantity[
              3.43112283120074311`2.9956786262173587*^17, "Kilograms"], 
             "Radius" -> Quantity[39.8`3., "Kilometers"]|>, 
           "Desdemona" -> <|
            "Mass" -> Quantity[
              1.78298522669383596`2.995678626217367*^17, "Kilograms"], 
             "Radius" -> Quantity[32.`3., "Kilometers"]|>, 
           "Juliet" -> <|
            "Mass" -> Quantity[
              5.57370171705972251`2.9956786262173543*^17, "Kilograms"], 
             "Radius" -> Quantity[46.8`3., "Kilometers"]|>, 
           "Portia" -> <|
            "Mass" -> Quantity[
              1.681100356597045339`3.9586073148417764*^18, "Kilograms"], 
             "Radius" -> Quantity[67.6`3., "Kilometers"]|>, 
           "Rosalind" -> <|
            "Mass" -> Quantity[
              2.54712175241976567`2.9956786262173587*^17, "Kilograms"], 
             "Radius" -> Quantity[36.`2., "Kilometers"]|>, 
           "Cupid" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[5.`2., "Kilometers"]|>, 
           "Belinda" -> <|
            "Mass" -> Quantity[
              3.56597045338767194`2.995678626217367*^17, "Kilograms"], 
             "Radius" -> Quantity[40.3`3., "Kilometers"]|>, 
           "Perdita" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[10.`2., "Kilometers"]|>, 
           "Puck" -> <|
            "Mass" -> Quantity[
              2.893230649366216176`3.9586073148417764*^18, "Kilograms"], 
             "Radius" -> Quantity[81.`2., "Kilometers"]|>, 
           "Mab" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[5.`2., "Kilometers"]|>, 
           "Miranda" -> <|
            "Mass" -> Quantity[
              6.5925504180276287794`1.9995659225206872*^19, "Kilograms"], 
             "Radius" -> Quantity[235.8`4., "Kilometers"]|>, 
           "Ariel" -> <|
            "Mass" -> Quantity[
              1.352971142608851997243`2.9956786262173587*^21, "Kilograms"], 
             "Radius" -> Quantity[578.9`4., "Kilometers"]|>, 
           "Umbriel" -> <|
            "Mass" -> Quantity[
              1.171676006113092205807`2.9956786262173587*^21, "Kilograms"], 
             "Radius" -> Quantity[584.7`4., "Kilometers"]|>, 
           "Titania" -> <|
            "Mass" -> Quantity[
              3.525516166731593299572`3.9586073148417764*^21, "Kilograms"], 
             "Radius" -> Quantity[788.9`4., "Kilometers"]|>, 
           "Oberon" -> <|
            "Mass" -> Quantity[
              3.013095202421263971712`3.9586073148417764*^21, "Kilograms"], 
             "Radius" -> Quantity[761.4`4., "Kilometers"]|>, 
           "Francisco" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[11.`2., "Kilometers"]|>, 
           "Caliban" -> <|
            "Mass" -> Quantity[
              7.34170387462167751`1.9995659225206872*^17, "Kilograms"], 
             "Radius" -> Quantity[49.`2., "Kilometers"]|>, 
           "Stephano" -> <|
            "Mass" -> Quantity[
              5.99322765275239`0.9999565727231373*^15, "Kilograms"], "Radius" -> 
             Quantity[10.`2., "Kilometers"]|>, 
           "Trinculo" -> <|
            "Mass" -> Quantity[
              7.49153456594048`0.9999565727231373*^14, "Kilograms"], "Radius" -> 
             Quantity[5.`1., "Kilometers"]|>, 
           "Sycorax" -> <|
            "Mass" -> Quantity[
              5.378921818345269844`2.9956786262173627*^18, "Kilograms"], 
             "Radius" -> Quantity[95.`2., "Kilometers"]|>, 
           "Margaret" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[10.`2., "Kilometers"]|>, 
           "Prospero" -> <|
            "Mass" -> Quantity[
              2.0976296784633363`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[15.`2., "Kilometers"]|>, 
           "Setebos" -> <|
            "Mass" -> Quantity[
              2.0976296784633363`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[15.`2., "Kilometers"]|>, 
           "Ferdinand" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[10.`2., "Kilometers"]|>|>|>, 
       "Neptune" -> <|
        "Mass" -> Quantity[1.0241`6.*^26, "Kilograms"], "Radius" -> 
         Quantity[24552.5`5., "Kilometers"], 
         "Moons" -> <|
          "Naiad" -> <|
            "Mass" -> Quantity[
              1.94779898714452669`1.9995659225206872*^17, "Kilograms"], 
             "Radius" -> Quantity[33.`2., "Kilometers"]|>, 
           "Thalassa" -> <|
            "Mass" -> Quantity[
              3.74576728297024363`1.9995659225206872*^17, "Kilograms"], 
             "Radius" -> Quantity[41.`2., "Kilometers"]|>, 
           "Despina" -> <|
            "Mass" -> Quantity[
              2.09762967846333643`1.9995659225206872*^18, "Kilograms"], 
             "Radius" -> Quantity[75.`2., "Kilometers"]|>, 
           "Galatea" -> <|
            "Mass" -> Quantity[
              3.745767282970243625`1.9995659225206872*^18, "Kilograms"], 
             "Radius" -> Quantity[88.`2., "Kilometers"]|>, 
           "Larissa" -> <|
            "Mass" -> Quantity[
              4.944412813520721585`1.999565922520683*^18, "Kilograms"], 
             "Radius" -> Quantity[97.`2., "Kilometers"]|>, 
           "Proteus" -> <|
            "Mass" -> Quantity[
              5.0343112283120074311`2.995678626217367*^19, "Kilograms"], 
             "Radius" -> Quantity[210.`3., "Kilometers"]|>, 
           "Triton" -> <|
            "Mass" -> Quantity[
              2.139432441341284348686`4.6989700043360205*^22, "Kilograms"], 
             "Radius" -> Quantity[1353.4`5., "Kilometers"]|>, 
           "Nereid" -> <|
            "Mass" -> Quantity[
              3.0865122411674807466`2.9956786262173587*^19, "Kilograms"], 
             "Radius" -> Quantity[170.`3., "Kilometers"]|>, 
           "Halimede" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[30.`2., "Kilometers"]|>, 
           "Sao" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[20.`2., "Kilometers"]|>, 
           "Laomedeia" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[20.`2., "Kilometers"]|>, 
           "Psamathe" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[20.`2., "Kilometers"]|>, 
           "Neso" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[30.`2., "Kilometers"]|>|>|>|>, "AllowEmbedding" -> True,
      "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[58]} -> 1, {All, "Mass"} -> 
        1, {All, "Radius"} -> 1, {All, "Moons"} -> <|{All, "Moons", All, 
            TypeSystem`PackageScope`KeyDummy[57]} -> 
          1, {All, "Moons", All, "Mass"} -> 1, {All, "Moons", All, "Radius"} -> 
          1|>|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[78.4], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
             TypeSystem`PackageScope`AtomShape[75], "Moons" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`KeyValueShape[
                 TypeSystem`PackageScope`AtomShape[78.4], 
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
                    TypeSystem`PackageScope`AtomShape[75]|>], 
                  DirectedInfinity[1], 2, {All, "Moons", All}]]], 2, 
               DirectedInfinity[1], {All, "Moons"}]|>], 
           DirectedInfinity[1], 3, {All}]]], 8, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"Mass", "Radius", "Moons"}, {
         TypeSystem`Atom[
          Quantity[1, "Kilograms"]], 
         TypeSystem`Atom[
          Quantity[1, "Kilometers"]], 
         TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"Mass", "Radius"}, {
            TypeSystem`Atom[
             Quantity[1, "Kilograms"]], 
            TypeSystem`Atom[
             Quantity[1, "Kilometers"]]}], TypeSystem`AnyLength]}], 8], 
     "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[58]} -> 1, {All, "Mass"} -> 
        1, {All, "Radius"} -> 1, {All, "Moons"} -> <|{All, "Moons", All, 
            TypeSystem`PackageScope`KeyDummy[57]} -> 
          1, {All, "Moons", All, "Mass"} -> 1, {All, "Moons", All, "Radius"} -> 
          1|>|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[78.4], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
             TypeSystem`PackageScope`AtomShape[75], "Moons" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`KeyValueShape[
                 TypeSystem`PackageScope`AtomShape[78.4], 
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
                    TypeSystem`PackageScope`AtomShape[75]|>], 
                  DirectedInfinity[1], 2, {All, "Moons", All}]]], 2, 
               DirectedInfinity[1], {All, "Moons"}]|>], 
           DirectedInfinity[1], 3, {All}]]], 8, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"Mass", "Radius", "Moons"}, {
         TypeSystem`Atom[
          Quantity[1, "Kilograms"]], 
         TypeSystem`Atom[
          Quantity[1, "Kilometers"]], 
         TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"Mass", "Radius"}, {
            TypeSystem`Atom[
             Quantity[1, "Kilograms"]], 
            TypeSystem`Atom[
             Quantity[1, "Kilometers"]]}], TypeSystem`AnyLength]}], 8], 
     "Path" -> {}, "DisplayedRowCount" -> 8, "DisplayedColumnCount" -> 3, 
     "DataRowCount" -> 8, "DataColumnCount" -> 3, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mass", 
                  Style[
                  "Mass", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Mass"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Mass"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Radius", 
                  Style[
                  "Radius", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Radius"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Radius"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Moons", 
                  Style[
                  "Moons", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Moons"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft}, {SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons", All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mass", 
                  Style[
                  "Mass", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Moons", All, "Mass"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons", All, "Mass"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Radius", 
                  Style[
                  "Radius", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Moons", All, "Radius"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons", All, "Radius"}, "ColumnHeader", True], "Mouse"],
               ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mercury", 
                  Style[
                  "Mercury", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mercury"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.30104`6.*^23", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"2439.7`5", "\"km\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Spacer[10], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Spacer[10], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mercury"], 
                    Key["Moons"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"], 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5], 8}], SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Venus", 
                  Style[
                  "Venus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Venus"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.867320000000000000000001`6.*^24", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"6051.85`5", "\"km\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Spacer[10], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Spacer[10], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Venus"], 
                    Key["Moons"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"], 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5], 8}], SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Earth", 
                  Style[
                  "Earth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Earth"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.9721986`8.*^24", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "6367.4446571000000000001`8.299868708313456", "\"km\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Moon", 
                  Style[
                  "Moon", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Earth"], 
                    Key["Moons"], 
                    Key["Moon"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Moons"], 
                 Key["Moon"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "7.3459006322855173653772`4.995678626217362*^22", 
                  "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Moons"], 
                 Key["Moon"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1737.5`5", "\"km\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Moons"], 
                 Key["Moon"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mars", 
                  Style[
                  "Mars", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mars"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"6.41693`6.*^23", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3385.595`4.298042852900571", "\"km\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Phobos", 
                  Style[
                  "Phobos", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mars"], 
                    Key["Moons"], 
                    Key["Phobos"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Phobos"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "1.0724880884600402`3.9586073148417724*^16", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Phobos"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"11.1`3", "\"km\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Phobos"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Deimos", 
                  Style[
                  "Deimos", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mars"], 
                    Key["Moons"], 
                    Key["Deimos"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Deimos"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "1.468340774924336`1.9995659225206786*^15", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Deimos"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"6.2`2", "\"km\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Deimos"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Jupiter", 
                  Style[
                  "Jupiter", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Jupiter"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.89813`6.*^27", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"69173.`5", "\"km\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Metis", 
                  Style[
                  "Metis", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Jupiter"], 
                    Key["Moons"], 
                    Key["Metis"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Metis"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "1.19864553055047796`0.9999565727231415*^17", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Metis"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"21.5`3", "\"km\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Metis"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Adrastea", 
                  Style[
                  "Adrastea", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Jupiter"], 
                    Key["Moons"], 
                    Key["Adrastea"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Adrastea"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "7.491534565940487`0.9999565727231415*^15", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Adrastea"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"8.2`2", "\"km\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Adrastea"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["63 total \:203a ", ""], 
                  Style[
                   Superscript["63 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Jupiter"], 
                    Key["Moons"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]], 
            SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Saturn", 
                  Style[
                  "Saturn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Saturn"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.68319`6.*^26", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"57316.`5", "\"km\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Tarqeq", 
                  Style[
                  "Tarqeq", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Saturn"], 
                    Key["Moons"], 
                    Key["Tarqeq"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Tarqeq"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Tarqeq"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.5`2", "\"km\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Tarqeq"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Pan", 
                  Style[
                  "Pan", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Saturn"], 
                    Key["Moons"], 
                    Key["Pan"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Pan"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "4.944412813520729`1.9995659225206872*^15", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Pan"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"12.8`3", "\"km\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Pan"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["61 total \:203a ", ""], 
                  Style[
                   Superscript["61 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Saturn"], 
                    Key["Moons"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]], 
            SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Uranus", 
                  Style[
                  "Uranus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Uranus"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"8.68103`6.*^25", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"25266.`5", "\"km\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Cordelia", 
                  Style[
                  "Cordelia", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Uranus"], 
                    Key["Moons"], 
                    Key["Cordelia"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"], 
                 Key["Cordelia"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "4.4949207395642923`1.9995659225206872*^16", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"], 
                 Key["Cordelia"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"20.1`3", "\"km\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"], 
                 Key["Cordelia"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Ophelia", 
                  Style[
                  "Ophelia", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Uranus"], 
                    Key["Moons"], 
                    Key["Ophelia"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"], 
                 Key["Ophelia"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "5.3939048874771508`1.9995659225206872*^16", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"], 
                 Key["Ophelia"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"21.4`3", "\"km\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"], 
                 Key["Ophelia"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["27 total \:203a ", ""], 
                  Style[
                   Superscript["27 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Uranus"], 
                    Key["Moons"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]], 
            SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Neptune", 
                  Style[
                  "Neptune", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Neptune"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.0241`6.*^26", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"24552.5`5", "\"km\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Naiad", 
                  Style[
                  "Naiad", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Neptune"], 
                    Key["Moons"], 
                    Key["Naiad"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"], 
                 Key["Naiad"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "1.94779898714452669`1.9995659225206872*^17", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"], 
                 Key["Naiad"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"33.`2", "\"km\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"], 
                 Key["Naiad"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Thalassa", 
                  Style[
                  "Thalassa", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Neptune"], 
                    Key["Moons"], 
                    Key["Thalassa"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"], 
                 Key["Thalassa"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "3.74576728297024363`1.9995659225206872*^17", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"], 
                 Key["Thalassa"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"41.`2", "\"km\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"], 
                 Key["Thalassa"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["13 total \:203a ", ""], 
                  Style[
                   Superscript["13 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Neptune"], 
                    Key["Moons"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]], 
            SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{643., {310.91754150390625`, 318.08245849609375`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{643., {310.91754150390625`, 318.08245849609375`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.882420887456737*^9, 3.88242099052523*^9}},
 CellLabel->
  "Out[328]=",ExpressionUUID->"b91fde21-4ebe-49ad-9839-1911691fa4f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"planets", "//", "Normal"}]], "Input",
 CellChangeTimes->{{3.882420994786187*^9, 3.882421014249668*^9}, {
  3.882421085287383*^9, 3.882421113547299*^9}},
 CellLabel->
  "In[335]:=",ExpressionUUID->"734cd26c-99b6-4f44-b2f2-1d07fee25e66"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Mercury\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Mass\"\>", "\[Rule]", 
       TemplateBox[{"3.30104`6.*^23", "\"kg\"", "kilograms", "\"Kilograms\""},
        
        "Quantity"]}], ",", 
      RowBox[{"\<\"Radius\"\>", "\[Rule]", 
       TemplateBox[{"2439.7`5.", "\"km\"", "kilometers", "\"Kilometers\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"Moons\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Venus\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Mass\"\>", "\[Rule]", 
       TemplateBox[{
        "4.867320000000000000000001`6.*^24", "\"kg\"", "kilograms", 
         "\"Kilograms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"Radius\"\>", "\[Rule]", 
       TemplateBox[{"6051.85`5.", "\"km\"", "kilometers", "\"Kilometers\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"Moons\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Earth\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Mass\"\>", "\[Rule]", 
       TemplateBox[{
        "5.9721986`8.*^24", "\"kg\"", "kilograms", "\"Kilograms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"Radius\"\>", "\[Rule]", 
       TemplateBox[{
        "6367.4446571000000000001`8.299868708313456", "\"km\"", "kilometers", 
         "\"Kilometers\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"Moons\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{"\<\"Moon\"\>", "\[Rule]", 
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"Mass\"\>", "\[Rule]", 
            
            TemplateBox[{
             "7.3459006322855173653772`4.995678626217362*^22", "\"kg\"", 
              "kilograms", "\"Kilograms\""},
             "Quantity"]}], ",", 
           RowBox[{"\<\"Radius\"\>", "\[Rule]", 
            
            TemplateBox[{
             "1737.5`5.", "\"km\"", "kilometers", "\"Kilometers\""},
             "Quantity"]}]}], "\[RightAssociation]"}]}], 
        "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Mars\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Mass\"\>", "\[Rule]", 
       TemplateBox[{"6.41693`6.*^23", "\"kg\"", "kilograms", "\"Kilograms\""},
        
        "Quantity"]}], ",", 
      RowBox[{"\<\"Radius\"\>", "\[Rule]", 
       TemplateBox[{
        "3385.595`4.298042852900571", "\"km\"", "kilometers", 
         "\"Kilometers\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"Moons\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"\<\"Phobos\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "1.0724880884600402`3.9586073148417724*^16", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"11.1`3.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Deimos\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "1.468340774924336`1.9995659225206786*^15", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"6.2`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}]}], 
        "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Jupiter\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Mass\"\>", "\[Rule]", 
       TemplateBox[{"1.89813`6.*^27", "\"kg\"", "kilograms", "\"Kilograms\""},
        
        "Quantity"]}], ",", 
      RowBox[{"\<\"Radius\"\>", "\[Rule]", 
       TemplateBox[{"69173.`5.", "\"km\"", "kilometers", "\"Kilometers\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"Moons\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"\<\"Metis\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "1.19864553055047796`0.9999565727231415*^17", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"21.5`3.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Adrastea\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "7.491534565940487`0.9999565727231415*^15", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"8.2`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Amalthea\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "2.067663540199574478`2.995678626217367*^18", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{
              "83.45`4.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Thebe\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "1.49830691318809745`1.9995659225206872*^18", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"49.3`3.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Io\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "8.9297833448203530011087`4.995678626217362*^22", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{
              "1821.6`5.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Europa\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "4.7986859848371340385365`4.995678626217362*^22", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{
              "1560.8`5.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Ganymede\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "1.48150100386563183602529`4.995678626217362*^23", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{
              "2631.2`5.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Callisto\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "1.07567783404752629528633`4.995678626217362*^23", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{
              "2410.3`5.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Themisto\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "6.89221180066526`1.9995659225206872*^14", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"4.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Leda\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "1.0937640466273112`1.9995659225206872*^16", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"10.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Himalia\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "6.742381109346438525`1.999565922520683*^18", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"85.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Lysithea\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "6.2928890353900092`1.999565922520683*^16", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"18.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Elara\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "8.6901800964909652`1.9995659225206872*^17", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"43.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"S/2000 J11\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"2.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"S/2003 J12\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"1.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Carpo\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"3.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Euporie\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "1.4983069131881`0.9999565727231415*^13", "\"kg\"", "kilograms",
                "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"1.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"S/2003 J3\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"2.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"S/2003 J18\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"2.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Orthosie\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "1.4983069131881`0.9999565727231415*^13", "\"kg\"", "kilograms",
                "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"1.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Euanthe\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "4.4949207395643`0.9999565727231415*^13", "\"kg\"", "kilograms",
                "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"1.5`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Harpalyke\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "1.19864553055047`0.9999565727231415*^14", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"2.2`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Praxidike\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "4.34509004824548`1.9995659225206872*^14", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"3.4`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Thyone\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "8.9898414791287`0.9999565727231415*^13", "\"kg\"", "kilograms",
                "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"2.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"S/2003 J16\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"2.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Iocaste\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "1.94779898714453`1.9995659225206872*^14", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"2.6`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Mneme\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"2.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Hermippe\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "8.9898414791287`0.9999565727231415*^13", "\"kg\"", "kilograms",
                "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"2.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Thelxinoe\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"2.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Helike\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"4.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Ananke\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "2.9966138263761948`1.9995659225206872*^16", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"14.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"S/2003 J15\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"2.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Eurydome\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "4.4949207395643`0.9999565727231415*^13", "\"kg\"", "kilograms",
                "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"1.5`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Arche\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"1.5`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Herse\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"2.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Pasithee\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "1.4983069131881`0.9999565727231415*^13", "\"kg\"", "kilograms",
                "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"1.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"S/2003 J10\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"2.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Chaldene\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "7.4915345659396`0.9999565727231415*^13", "\"kg\"", "kilograms",
                "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"1.9`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Isonoe\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "7.4915345659396`0.9999565727231415*^13", "\"kg\"", "kilograms",
                "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"1.9`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Erinome\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "4.4949207395643`0.9999565727231415*^13", "\"kg\"", "kilograms",
                "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"1.6`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Kale\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "1.4983069131881`0.9999565727231415*^13", "\"kg\"", "kilograms",
                "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"1.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Aitne\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "4.4949207395643`0.9999565727231415*^13", "\"kg\"", "kilograms",
                "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"1.5`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Taygete\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "1.6481376045069`1.9995659225206872*^14", "\"kg\"", "kilograms",
                "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"2.5`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"S/2003 J9\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"1.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Carme\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "1.31851008360552575`1.9995659225206786*^17", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"23.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Sponde\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "1.4983069131881`0.9999565727231415*^13", "\"kg\"", "kilograms",
                "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"1.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Megaclite\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "2.09762967846334`1.9995659225206872*^14", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"2.7`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"S/2003 J5\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"4.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"S/2003 J19\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"2.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"S/2003 J23\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"2.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Kalyke\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "1.94779898714453`1.9995659225206872*^14", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"2.6`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Kore\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"2.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Pasiphae\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "2.9966138263761949`1.9995659225206786*^17", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"30.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Eukelade\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"4.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"S/2003 J4\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"2.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Sinope\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "7.4915345659404873`1.9995659225206786*^16", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"19.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Hegemone\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"3.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Aoede\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"4.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Kallichore\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"2.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Autonoe\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "8.9898414791287`0.9999565727231415*^13", "\"kg\"", "kilograms",
                "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"2.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Callirrhoe\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "8.69018009649097`1.9995659225206872*^14", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"4.3`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Cyllene\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"2.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"S/2003 J2\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"2.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}]}], 
        "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Saturn\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Mass\"\>", "\[Rule]", 
       TemplateBox[{"5.68319`6.*^26", "\"kg\"", "kilograms", "\"Kilograms\""},
        
        "Quantity"]}], ",", 
      RowBox[{"\<\"Radius\"\>", "\[Rule]", 
       TemplateBox[{"57316.`5.", "\"km\"", "kilometers", "\"Kilometers\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"Moons\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"\<\"Tarqeq\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"3.5`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Pan\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "4.944412813520729`1.9995659225206872*^15", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"12.8`3.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Daphnis\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"3.9`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Atlas\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "2.097629678463337`1.9995659225206786*^15", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"10.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Prometheus\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "1.86689041383236942`3.9586073148417764*^17", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"46.8`3.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Pandora\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "1.49081537862215657`2.9956786262173587*^17", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"40.6`3.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Epimetheus\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "5.25905726529022205`2.9956786262173543*^17", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"58.3`3.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Janus\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "1.896856552096131371`3.9586073148417764*^18", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"90.4`3.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Aegaeon\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"0.25`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Mimas\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "3.7907164903658865482`3.9586073148417764*^19", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{
              "198.8`4.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Methone\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"1.6`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Anthe\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             TemplateBox[{"5.`1.*^12", "\"kg\"", "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"1.`1.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Pallene\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"2.6`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Enceladus\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "1.08027928440861826137`3.9586073148417764*^20", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{
              "252.3`4.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Tethys\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "6.17452278924814959099`4.6989700043360205*^20", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{
              "536.3`4.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Calypso\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "3.595936591651433`1.9995659225206872*^15", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"9.5`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Telesto\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "7.191873183302868`1.9995659225206872*^15", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"12.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Polydeuces\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"1.2`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Dione\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "1.095457133439213688532`4.6989700043360205*^21", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{
              "562.5`4.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Helene\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "2.5471217524197656`1.9995659225206872*^16", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"16.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Rhea\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "2.308441461148901741032`4.6989700043360205*^21", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{
              "764.5`4.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Titan\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "1.34520841449162446435527`4.958607314841778*^23", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{
              "2575.5`5.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Hyperion\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "5.543735578795960565`1.9995659225206872*^18", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"133.`4.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Iapetus\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "1.805459830391657427108`4.6989700043360205*^21", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{
              "734.5`4.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Kiviuq\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "3.296275209013815`1.9995659225206872*^15", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"8.`1.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Ijiraq\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "1.198645530550478`1.9995659225206872*^15", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"6.`1.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Phoebe\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "8.287135536843366995`3.9586073148417764*^18", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{
              "106.6`4.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Paaliaq\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "8.240688022534537`1.999565922520683*^15", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"11.`3.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Skathi\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "3.146444517695`1.9995659225206786*^14", "\"kg\"", "kilograms", 
               "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"4.`1.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Albiorix\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "2.0976296784633363`1.9995659225206872*^16", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"16.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"S/2007 S2\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "1.5`2.*^14", "\"kg\"", "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"3.`1.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Bebhionn\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"3.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Erriapo\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "7.64136525725929`1.9995659225206914*^14", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"5.`1.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Siarnaq\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "3.8955979742890535`1.999565922520683*^16", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"20.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Skoll\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"3.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Tarvos\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "2.696952443738576`1.9995659225206786*^15", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"7.5`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Greip\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"3.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"S/2004 S13\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"3.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Hyrrokkin\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"4.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Mundilfari\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "2.09762967846334`1.9995659225206872*^14", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"3.5`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"S/2006 S1\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"3.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Jarnsaxa\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"3.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Narvi\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "3.44610590033262`1.9995659225206872*^14", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"3.5`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Bergelmir\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"3.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"S/2004 S17\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"2.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Suttungr\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "2.09762967846334`1.9995659225206872*^14", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"3.5`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Hati\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"3.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"S/2004 S12\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"3.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Bestla\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"3.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Farbauti\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"3.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Thrymr\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             TemplateBox[{
              "2.09762967846334`1.9995659225206872*^14", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"3.5`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"S/2007 S3\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"2.5`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Aegir\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"3.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"S/2004 S7\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"3.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"S/2006 S3\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"3.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Kari\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"3.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Fenrir\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"2.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Surtur\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"3.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Ymir\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "4.944412813520729`1.9995659225206872*^15", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"9.`1.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Loge\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"3.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Fornjot\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"3.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}]}], 
        "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Uranus\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Mass\"\>", "\[Rule]", 
       TemplateBox[{"8.68103`6.*^25", "\"kg\"", "kilograms", "\"Kilograms\""},
        
        "Quantity"]}], ",", 
      RowBox[{"\<\"Radius\"\>", "\[Rule]", 
       TemplateBox[{"25266.`5.", "\"km\"", "kilometers", "\"Kilometers\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"Moons\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"\<\"Cordelia\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "4.4949207395642923`1.9995659225206872*^16", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"20.1`3.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Ophelia\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "5.3939048874771508`1.9995659225206872*^16", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"21.4`3.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Bianca\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "9.2895028617662042`1.9995659225206872*^16", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"25.7`3.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Cressida\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "3.43112283120074311`2.9956786262173587*^17", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"39.8`3.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Desdemona\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "1.78298522669383596`2.995678626217367*^17", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"32.`3.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Juliet\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "5.57370171705972251`2.9956786262173543*^17", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"46.8`3.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Portia\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "1.681100356597045339`3.9586073148417764*^18", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"67.6`3.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Rosalind\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "2.54712175241976567`2.9956786262173587*^17", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"36.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Cupid\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"5.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Belinda\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "3.56597045338767194`2.995678626217367*^17", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"40.3`3.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Perdita\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"10.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Puck\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "2.893230649366216176`3.9586073148417764*^18", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"81.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Mab\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"5.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Miranda\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             TemplateBox[{
              "6.5925504180276287794`1.9995659225206872*^19", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{
              "235.8`4.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Ariel\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "1.352971142608851997243`2.9956786262173587*^21", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{
              "578.9`4.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Umbriel\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "1.171676006113092205807`2.9956786262173587*^21", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{
              "584.7`4.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Titania\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "3.525516166731593299572`3.9586073148417764*^21", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{
              "788.9`4.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Oberon\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "3.013095202421263971712`3.9586073148417764*^21", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{
              "761.4`4.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Francisco\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"11.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Caliban\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "7.34170387462167751`1.9995659225206872*^17", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"49.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Stephano\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "5.99322765275239`0.9999565727231373*^15", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"10.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Trinculo\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "7.49153456594048`0.9999565727231373*^14", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"5.`1.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Sycorax\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "5.378921818345269844`2.9956786262173627*^18", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"95.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Margaret\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"10.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Prospero\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "2.0976296784633363`1.9995659225206872*^16", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"15.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Setebos\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "2.0976296784633363`1.9995659225206872*^16", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"15.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Ferdinand\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"10.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}]}], 
        "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Neptune\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Mass\"\>", "\[Rule]", 
       TemplateBox[{"1.0241`6.*^26", "\"kg\"", "kilograms", "\"Kilograms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"Radius\"\>", "\[Rule]", 
       TemplateBox[{"24552.5`5.", "\"km\"", "kilometers", "\"Kilometers\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"Moons\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"\<\"Naiad\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "1.94779898714452669`1.9995659225206872*^17", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"33.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Thalassa\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "3.74576728297024363`1.9995659225206872*^17", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"41.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Despina\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "2.09762967846333643`1.9995659225206872*^18", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"75.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Galatea\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "3.745767282970243625`1.9995659225206872*^18", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"88.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Larissa\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "4.944412813520721585`1.999565922520683*^18", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"97.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Proteus\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "5.0343112283120074311`2.995678626217367*^19", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"210.`3.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Triton\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "2.139432441341284348686`4.6989700043360205*^22", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{
              "1353.4`5.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Nereid\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             
             TemplateBox[{
              "3.0865122411674807466`2.9956786262173587*^19", "\"kg\"", 
               "kilograms", "\"Kilograms\""},
              "Quantity"]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             TemplateBox[{"170.`3.", "\"km\"", "kilometers", "\"Kilometers\""},
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Halimede\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"30.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Sao\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"20.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Laomedeia\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"20.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Psamathe\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"20.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"Neso\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"Mass\"\>", "\[Rule]", 
             RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
            RowBox[{"\<\"Radius\"\>", "\[Rule]", 
             
             TemplateBox[{"30.`2.", "\"km\"", "kilometers", "\"Kilometers\""},
              
              "Quantity"]}]}], "\[RightAssociation]"}]}]}], 
        "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.882421002045093*^9, 3.8824210145800323`*^9}, {
  3.882421087936818*^9, 3.8824211144190083`*^9}},
 CellLabel->
  "Out[335]=",ExpressionUUID->"1633e1e2-525a-4f62-a820-337017f70d8c"]
}, Closed]],

Cell["\<\
Okay, now that we know how data is represented, we can try manually creating \
a row or two for our data.\
\>", "Text",
 CellChangeTimes->{{3.882421020366581*^9, 
  3.882421049407061*^9}},ExpressionUUID->"40ef2e7b-ec75-4d50-b32c-\
3d2d9063b7c0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataset", "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"<|", 
    RowBox[{"\"\<Black\>\"", "->", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Blue\>\"", "->", 
        RowBox[{"<|", 
         RowBox[{"\"\<Count\>\"", "->", "20"}], "|>"}]}], ",", 
       RowBox[{"<|", 
        RowBox[{"\"\<Brown\>\"", "->", 
         RowBox[{"<|", 
          RowBox[{"\"\<Count\>\"", "->", "68"}], "|>"}]}], "|>"}]}], "|>"}]}],
     "|>"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8824210531223383`*^9, 3.882421072604444*^9}, {
  3.8824211852354183`*^9, 3.882421294262661*^9}, {3.882421347509159*^9, 
  3.8824213551991043`*^9}, {3.882421391434525*^9, 3.882421513396657*^9}},
 CellLabel->
  "In[344]:=",ExpressionUUID->"2c23edca-d0e8-4eea-b310-ec057142f74b"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Black" -> <|
        "Blue" -> <|"Count" -> 20|>, "Brown" -> <|"Count" -> 68|>|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, All, 
          TypeSystem`PackageScope`KeyDummy[65]} -> 1, {All, All, 
          TypeSystem`PackageScope`KeyDummy[64]} -> 1, {All, All, "Count"} -> 
        1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[56.00000000000001], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[56.00000000000001], 
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Count" -> TypeSystem`PackageScope`AtomShape[34]|>], 
              DirectedInfinity[1], 1, {All, All}]]], 2, 
           DirectedInfinity[1], {All}]]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{"Count"}, {
          TypeSystem`Atom[Integer]}], 2], 1], "Meta" -> <||>, "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, All, 
          TypeSystem`PackageScope`KeyDummy[65]} -> 1, {All, All, 
          TypeSystem`PackageScope`KeyDummy[64]} -> 1, {All, All, "Count"} -> 
        1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[56.00000000000001], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[56.00000000000001], 
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Count" -> TypeSystem`PackageScope`AtomShape[34]|>], 
              DirectedInfinity[1], 1, {All, All}]]], 2, 
           DirectedInfinity[1], {All}]]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{"Count"}, {
          TypeSystem`Atom[Integer]}], 2], 1], "Path" -> {}, 
     "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     1, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Count", 
                  Style[
                  "Count", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "Count"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "Count"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Black", 
                  Style[
                  "Black", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Black"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Blue", 
                  Style[
                  "Blue", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Black"], 
                    Key["Blue"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"], 
                 Key["Blue"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"], 
                 Key["Blue"], 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Brown", 
                  Style[
                  "Brown", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Black"], 
                    Key["Brown"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"], 
                 Key["Brown"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["68"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"], 
                 Key["Brown"], 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{188., {58.91754150390625, 66.08245849609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{188., {58.91754150390625, 66.08245849609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.882421295665979*^9, 3.882421355576544*^9, {3.882421421599534*^9, 
   3.882421514645289*^9}},
 CellLabel->
  "Out[344]=",ExpressionUUID->"ebd8da5d-e578-4db1-914d-269ca0832e64"]
}, Open  ]],

Cell["\<\
Does this look good? We don\[CloseCurlyQuote]t have column names for Hair and \
Eye, but we do for Count. Is that normal? If you look at the Moons in the \
planet dataset, you can see that the names of of moons are not column-named, \
but their properties are column-named. Which is analogous to what we have for \
our dataset as well.

Let\[CloseCurlyQuote]s finalise on this structure for now, and find out how \
to convert the imported data.\
\>", "Text",
 CellChangeTimes->{{3.882421518035987*^9, 
  3.882421680986334*^9}},ExpressionUUID->"e52dfc2b-c9eb-4172-8565-\
95866aea3068"]
}, Closed]],

Cell[CellGroupData[{

Cell["Structuring Imported Dataset", "Section",
 CellChangeTimes->{{3.882421697844625*^9, 
  3.882421712549075*^9}},ExpressionUUID->"9c566c21-d953-4c50-a263-\
d404fc46ed3c"],

Cell[TextData[{
 "So far, I have not found any ",
 StyleBox["simple",
  FontSlant->"Italic"],
 " way to morph the dataset. The important note found so far is that we \
cannot modify existing Dataset, but instead have to create new Dataset with \
the structure we want. What this means, is that we will have to define \
Column/Row structure and select proper Count columns for the new Dataset \
definition.\n\nThis manual approach is too much hassle. And figuring out \
\[OpenCurlyDoubleQuote]script-like\[CloseCurlyDoubleQuote] way to change the \
structure is not attractive right now.\n\nHence, we will try to roll with \
what we have and see what happens when we try doing operations on the data."
}], "Text",
 CellChangeTimes->{{3.882423356829782*^9, 3.882423473129077*^9}, {
  3.882507298522347*^9, 
  3.882507346025959*^9}},ExpressionUUID->"7e2c27a7-8814-4b08-b9a5-\
739ab3cad22e"],

Cell[CellGroupData[{

Cell["References", "Subsection",
 CellChangeTimes->{{3.882422606313196*^9, 
  3.882422607605262*^9}},ExpressionUUID->"bcade709-37db-409d-8c0f-\
e0f68ee213ed"],

Cell["https://www.wolfram.com/broadcast/video.php?c=377&p=2&v=1258", \
"ItemNumbered",
 CellChangeTimes->{{3.8824226547639837`*^9, 
  3.882422656346882*^9}},ExpressionUUID->"52d77049-f281-48ec-86d7-\
920b9a6d78f7"],

Cell["https://www.youtube.com/watch?v=XN8Y177doEE", "ItemNumbered",
 CellChangeTimes->{{3.8824226547639837`*^9, 3.882422705459538*^9}, {
  3.882852320717781*^9, 
  3.882852320720091*^9}},ExpressionUUID->"4b764452-2a58-4f64-9a1a-\
829ef22bd74a"],

Cell["\<\
https://www.wolfram.com/wolfram-u/courses/data-science/becoming-a-data-\
curator-dat906/\
\>", "ItemNumbered",
 CellChangeTimes->{{3.8824226547639837`*^9, 3.882422705459538*^9}, 
   3.88285232138195*^9},ExpressionUUID->"e7164eff-aaf5-43b8-8bff-\
0bc46225653d"]
}, Closed]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Basic Analysis", "Title",
 CellChangeTimes->{{3.882507354281095*^9, 
  3.882507371233575*^9}},ExpressionUUID->"f7ca9920-6d70-4822-9eee-\
b8ca061b6cd7"],

Cell[CellGroupData[{

Cell["Exercises from 4.6", "Section",
 CellChangeTimes->{{3.882507702726389*^9, 
  3.8825077214536657`*^9}},ExpressionUUID->"34b876c2-d0d0-4514-ad27-\
5f00342e9ba9"],

Cell[CellGroupData[{

Cell["Exercise 4.1", "Subsection",
 CellChangeTimes->{{3.882507737393656*^9, 3.8825077399171867`*^9}, 
   3.88259005341183*^9},ExpressionUUID->"0dbb7967-dfbb-472c-8c15-\
07f35d061b72"],

Cell[TextData[{
 "The eye-color hair-color data is frequencies of eye and hair color for \
males and females. Run the (some, we are going to ignore them) R code.\n\nIn \
your write-up, include each line above and its results. ",
 StyleBox["Explain",
  FontSlant->"Italic"],
 " what each line does (in a bit more detail than the inline comments). \
Extend above commands by also computing the probabilities of the hair colors \
given brown eyes, and the probabilities of the eye colors given Brown hair."
}], "Text",
 CellChangeTimes->{{3.8825077457013617`*^9, 3.8825078051265*^9}, {
  3.882507839202887*^9, 
  3.882507891576696*^9}},ExpressionUUID->"87847d36-00a5-4bb4-b893-\
6e20f7bf4317"],

Cell[TextData[{
 "First, let\[CloseCurlyQuote]s import the data and ",
 StyleBox["show it.",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.882507912757547*^9, 
  3.882507922395409*^9}},ExpressionUUID->"9e027cee-4b99-446d-9abb-\
4dedd012ef41"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "path", " ", "=", " ", 
   "\"\</Users/codingquark/Documents/Wolfram \
Mathematica/doing_bayesian_data_analysis/DBDA2Eprograms/HairEyeColor.csv\>\""}\
], ";"}], "\[IndentingNewLine]", 
 RowBox[{"dataset", "=", 
  RowBox[{"SemanticImport", "[", "path", "]"}]}]}], "Input",
 CellChangeTimes->{{3.8825079239152107`*^9, 3.88250793898072*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"bc17617f-bff8-4dae-814e-6360f1e6b04e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|"Hair" -> "Black", "Eye" -> "Blue", "Count" -> 20|>, <|
       "Hair" -> "Black", "Eye" -> "Brown", "Count" -> 68|>, <|
       "Hair" -> "Black", "Eye" -> "Green", "Count" -> 5|>, <|
       "Hair" -> "Black", "Eye" -> "Hazel", "Count" -> 15|>, <|
       "Hair" -> "Blond", "Eye" -> "Blue", "Count" -> 94|>, <|
       "Hair" -> "Blond", "Eye" -> "Brown", "Count" -> 7|>, <|
       "Hair" -> "Blond", "Eye" -> "Green", "Count" -> 16|>, <|
       "Hair" -> "Blond", "Eye" -> "Hazel", "Count" -> 10|>, <|
       "Hair" -> "Brown", "Eye" -> "Blue", "Count" -> 84|>, <|
       "Hair" -> "Brown", "Eye" -> "Brown", "Count" -> 119|>, <|
       "Hair" -> "Brown", "Eye" -> "Green", "Count" -> 29|>, <|
       "Hair" -> "Brown", "Eye" -> "Hazel", "Count" -> 54|>, <|
       "Hair" -> "Red", "Eye" -> "Blue", "Count" -> 17|>, <|
       "Hair" -> "Red", "Eye" -> "Brown", "Count" -> 26|>, <|
       "Hair" -> "Red", "Eye" -> "Green", "Count" -> 14|>, <|
       "Hair" -> "Red", "Eye" -> "Hazel", "Count" -> 14|>}, "AllowEmbedding" -> 
     True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Hair"} -> 1, {All, "Eye"} -> 
        1, {All, "Count"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Hair" -> TypeSystem`PackageScope`AtomShape[52.5], "Eye" -> 
            TypeSystem`PackageScope`AtomShape[52.5], "Count" -> 
            TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 3, {All}]], 16, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Hair", "Eye", "Count"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["Black", "Blond", "Brown", "Red"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["Blue", "Brown", "Green", "Hazel"]], 
         TypeSystem`Atom[Integer]}], 16], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Hair"} -> 1, {All, "Eye"} -> 
        1, {All, "Count"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Hair" -> TypeSystem`PackageScope`AtomShape[52.5], "Eye" -> 
            TypeSystem`PackageScope`AtomShape[52.5], "Count" -> 
            TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 3, {All}]], 16, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Hair", "Eye", "Count"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["Black", "Blond", "Brown", "Red"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["Blue", "Brown", "Green", "Hazel"]], 
         TypeSystem`Atom[Integer]}], 16], "Path" -> {}, "DisplayedRowCount" -> 
     16, "DisplayedColumnCount" -> 3, "DataRowCount" -> 16, "DataColumnCount" -> 
     3, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Hair", 
                  Style[
                  "Hair", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Hair"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Hair"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Eye", 
                  Style[
                  "Eye", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Eye"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Eye"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Count", 
                  Style[
                  "Count", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Count"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Count"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["Black", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Blue", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Black", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["68"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Black", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Green", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Black", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Hazel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Blond", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Blue", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["94"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Blond", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Blond", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Green", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Blond", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Hazel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Blue", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["84"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["119"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Green", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["29"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Hazel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["54"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Blue", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Green", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Hazel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{182., {296.91754150390625`, 304.08245849609375`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{182., {296.91754150390625`, 304.08245849609375`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8825079503770323`*^9, 3.882512433326778*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"505f44a6-1ddb-43bd-9c7e-57e81d502d98"]
}, Open  ]],

Cell[TextData[{
 "Run equivalent of: \n",
 Cell[BoxData[{
  RowBox[{"EyeHairFreq", " ", "=", " ", 
   RowBox[{"apply", " ", 
    RowBox[{"(", 
     RowBox[{"HairEyeColor", ",", " ", 
      RowBox[{"c", " ", 
       RowBox[{"(", 
        RowBox[{"\"\<Eye\>\"", ",", " ", "\"\<Hair\>\""}], ")"}]}], ",", " ", 
      "sum"}], ")"}]}]}], "\n", 
  RowBox[{"EyeHairProp", " ", "=", " ", 
   RowBox[{
    RowBox[{"EyeHairFreq", " ", "/", " ", "sum"}], " ", 
    RowBox[{"(", "EyeHairFreq", ")"}]}]}], "\n", 
  RowBox[{"show", " ", 
   RowBox[{"(", 
    RowBox[{"round", " ", 
     RowBox[{"(", 
      RowBox[{"EyeHairProp", ",", " ", "2"}], ")"}]}], ")"}]}]}], 
  "InlineCode",ExpressionUUID->"ac53bc8a-1299-4938-a67f-62b2ca94850b"]
}], "Text",
 CellChangeTimes->{{3.8825083312651997`*^9, 3.882508332487919*^9}, {
  3.882508389105607*^9, 
  3.882508476296051*^9}},ExpressionUUID->"a6f165f2-7e74-48da-9427-\
d5fa933ebe5d"],

Cell[TextData[{
 "Funnily enough, the R code given by the book loads the CSV, ",
 StyleBox["generates Male/Female split",
  FontSlant->"Italic"],
 ", and then store in the variable \[OpenCurlyDoubleQuote]HairEyeColor\
\[CloseCurlyDoubleQuote]. The \[OpenCurlyDoubleQuote]sum\
\[CloseCurlyDoubleQuote] application then gives the data we have got \
already!"
}], "Text",
 CellChangeTimes->{{3.88251014696592*^9, 
  3.8825102147985477`*^9}},ExpressionUUID->"1a7f40a1-eef2-4e3f-825b-\
e8e061ee1bf3"],

Cell[TextData[{
 "Next line is dividing each ",
 StyleBox["cell",
  FontSlant->"Italic"],
 " by the total."
}], "Text",
 CellChangeTimes->{{3.882510285428473*^9, 
  3.882510299637478*^9}},ExpressionUUID->"02244a86-26dc-4e94-8185-\
b31c7666b25d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"counttotal", "=", 
   RowBox[{"dataset", "[", 
    RowBox[{"Total", ",", "\"\<Count\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"haireyeproportion", "=", 
  RowBox[{"dataset", "[", 
   RowBox[{"All", ",", 
    RowBox[{
     RowBox[{"Append", "[", 
      RowBox[{"#", ",", 
       RowBox[{"\"\<Frequency\>\"", "->", 
        RowBox[{"#Count", "/", "counttotal"}]}]}], "]"}], "&"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.882510312090444*^9, 3.882510389859166*^9}, {
   3.882510485389566*^9, 3.8825104881680403`*^9}, {3.882510543056156*^9, 
   3.882510548245275*^9}, 3.88251059881*^9, {3.882510636351379*^9, 
   3.8825106545582047`*^9}, {3.882510763466764*^9, 3.8825108280137243`*^9}, {
   3.882510862446419*^9, 3.8825109027002907`*^9}, {3.882511287302967*^9, 
   3.8825113059872093`*^9}, {3.882511339497182*^9, 3.882511339910779*^9}, {
   3.88251152256118*^9, 3.882511671500869*^9}, {3.8825117322360687`*^9, 
   3.882511733118477*^9}, {3.882512049009955*^9, 3.882512058948752*^9}, {
   3.882512455869274*^9, 3.882512464682325*^9}, {3.882515612085742*^9, 
   3.8825156165675907`*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"80526f23-1cc5-427a-93ac-83640ae10c18"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Hair" -> "Black", "Eye" -> "Blue", "Count" -> 20, "Frequency" -> 
        Rational[5, 148]|>, <|
       "Hair" -> "Black", "Eye" -> "Brown", "Count" -> 68, "Frequency" -> 
        Rational[17, 148]|>, <|
       "Hair" -> "Black", "Eye" -> "Green", "Count" -> 5, "Frequency" -> 
        Rational[5, 592]|>, <|
       "Hair" -> "Black", "Eye" -> "Hazel", "Count" -> 15, "Frequency" -> 
        Rational[15, 592]|>, <|
       "Hair" -> "Blond", "Eye" -> "Blue", "Count" -> 94, "Frequency" -> 
        Rational[47, 296]|>, <|
       "Hair" -> "Blond", "Eye" -> "Brown", "Count" -> 7, "Frequency" -> 
        Rational[7, 592]|>, <|
       "Hair" -> "Blond", "Eye" -> "Green", "Count" -> 16, "Frequency" -> 
        Rational[1, 37]|>, <|
       "Hair" -> "Blond", "Eye" -> "Hazel", "Count" -> 10, "Frequency" -> 
        Rational[5, 296]|>, <|
       "Hair" -> "Brown", "Eye" -> "Blue", "Count" -> 84, "Frequency" -> 
        Rational[21, 148]|>, <|
       "Hair" -> "Brown", "Eye" -> "Brown", "Count" -> 119, "Frequency" -> 
        Rational[119, 592]|>, <|
       "Hair" -> "Brown", "Eye" -> "Green", "Count" -> 29, "Frequency" -> 
        Rational[29, 592]|>, <|
       "Hair" -> "Brown", "Eye" -> "Hazel", "Count" -> 54, "Frequency" -> 
        Rational[27, 296]|>, <|
       "Hair" -> "Red", "Eye" -> "Blue", "Count" -> 17, "Frequency" -> 
        Rational[17, 592]|>, <|
       "Hair" -> "Red", "Eye" -> "Brown", "Count" -> 26, "Frequency" -> 
        Rational[13, 296]|>, <|
       "Hair" -> "Red", "Eye" -> "Green", "Count" -> 14, "Frequency" -> 
        Rational[7, 296]|>, <|
       "Hair" -> "Red", "Eye" -> "Hazel", "Count" -> 14, "Frequency" -> 
        Rational[7, 296]|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Hair"} -> 1, {All, "Eye"} -> 
        1, {All, "Count"} -> 1, {All, "Frequency"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Hair" -> TypeSystem`PackageScope`AtomShape[52.5], "Eye" -> 
            TypeSystem`PackageScope`AtomShape[52.5], "Count" -> 
            TypeSystem`PackageScope`AtomShape[34], "Frequency" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 4, {All}]], 16, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Hair", "Eye", "Count", "Frequency"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["Black", "Blond", "Brown", "Red"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["Blue", "Brown", "Green", "Hazel"]], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real]}], 16], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Hair"} -> 1, {All, "Eye"} -> 
        1, {All, "Count"} -> 1, {All, "Frequency"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Hair" -> TypeSystem`PackageScope`AtomShape[52.5], "Eye" -> 
            TypeSystem`PackageScope`AtomShape[52.5], "Count" -> 
            TypeSystem`PackageScope`AtomShape[34], "Frequency" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 4, {All}]], 16, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Hair", "Eye", "Count", "Frequency"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["Black", "Blond", "Brown", "Red"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["Blue", "Brown", "Green", "Hazel"]], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real]}], 16], "Path" -> {}, "DisplayedRowCount" -> 
     16, "DisplayedColumnCount" -> 4, "DataRowCount" -> 16, "DataColumnCount" -> 
     4, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Hair", 
                  Style[
                  "Hair", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Hair"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Hair"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Eye", 
                  Style[
                  "Eye", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Eye"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Eye"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Count", 
                  Style[
                  "Count", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Count"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Count"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Frequency", 
                  Style[
                  "Frequency", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Frequency"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Frequency"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["Black", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Blue", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0337838"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Frequency"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Black", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["68"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.114865"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Frequency"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Black", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Green", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00844595"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Frequency"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Black", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Hazel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0253378"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Frequency"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Blond", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Blue", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["94"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.158784"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Frequency"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Blond", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0118243"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Frequency"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Blond", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Green", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1/37"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Frequency"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Blond", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Hazel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0168919"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Frequency"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Blue", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["84"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.141892"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Frequency"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["119"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.201014"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Frequency"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Green", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["29"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0489865"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Frequency"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Hazel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["54"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0912162"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Frequency"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Blue", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0287162"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Frequency"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0439189"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Frequency"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Green", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0236486"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Frequency"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Hazel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0236486"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Frequency"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{275., {296.91754150390625`, 304.08245849609375`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{275., {296.91754150390625`, 304.08245849609375`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.882512469079464*^9, 3.8825147414704742`*^9, 
  3.882515617139996*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"ba825d0b-321f-4b94-b403-558ded217d3f"]
}, Open  ]],

Cell["To find total counts of each hair-color:", "Text",
 CellChangeTimes->{{3.8825127144873466`*^9, 3.882512717180524*^9}, {
  3.882512748740674*^9, 
  3.882512756684163*^9}},ExpressionUUID->"e753f2a2-a82c-41af-a3bc-\
4f78d59b5931"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hairfrequencydataset", "=", 
  RowBox[{"dataset", "[", 
   RowBox[{
    RowBox[{"GroupBy", "[", "\"\<Hair\>\"", "]"}], ",", "Total", ",", 
    "\"\<Count\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8825141529581327`*^9, 3.88251416211014*^9}, {
  3.8825146879085817`*^9, 3.8825147205428047`*^9}, {3.8825147570631647`*^9, 
  3.882514967321227*^9}, {3.8825151025814943`*^9, 3.882515103916727*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"e7f55f50-1f84-4cb5-80ed-388c9db3728d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Black" -> 108, "Blond" -> 127, "Brown" -> 286, "Red" -> 71|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[52.5], 
         TypeSystem`PackageScope`AtomShape[34]]], 4, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["Black", "Blond", "Brown", "Red"]], 
       TypeSystem`Atom[Integer], 4], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[52.5], 
         TypeSystem`PackageScope`AtomShape[34]]], 4, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["Black", "Blond", "Brown", "Red"]], 
       TypeSystem`Atom[Integer], 4], "Path" -> {}, "DisplayedRowCount" -> 4, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 4, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Black", 
                  Style[
                  "Black", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Black"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["108"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Blond", 
                  Style[
                  "Blond", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Blond"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blond"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["127"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blond"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Brown", 
                  Style[
                  "Brown", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Brown"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["286"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Red", 
                  Style[
                  "Red", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Red"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Red"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["71"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Red"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{109., {75.91754150390625, 83.08245849609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{109., {75.91754150390625, 83.08245849609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.882514153819379*^9, 3.882514162703589*^9}, {
   3.88251470018646*^9, 3.8825149677576723`*^9}, 3.882515104283229*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"744d3f91-1ae6-4cbb-9fdf-34b6f8f1baeb"]
}, Closed]],

Cell[TextData[{
 "Like we added the Frequency column above for ",
 StyleBox["all",
  FontSlant->"Italic"],
 " rows, do the same but for the grouped data:"
}], "Text",
 CellChangeTimes->{{3.882512844644556*^9, 
  3.882512867666123*^9}},ExpressionUUID->"1f260011-8a63-4fe9-8731-\
e015384b3a1f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hairproportions", "=", 
  RowBox[{"hairfrequencydataset", "[", 
   RowBox[{"All", ",", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{"\"\<Frequency\>\"", "->", 
       RowBox[{"#1", "/", "counttotal"}]}], "|>"}], "&"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.882515118445244*^9, 3.882515176742341*^9}, {
  3.88251523974627*^9, 3.882515242731539*^9}, {3.8825154367844687`*^9, 
  3.882515440946681*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"94daf48a-e60c-4c59-af81-91f917d4bbe5"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Black" -> <|"Frequency" -> Rational[27, 148]|>, 
       "Blond" -> <|"Frequency" -> Rational[127, 592]|>, 
       "Brown" -> <|"Frequency" -> Rational[143, 296]|>, 
       "Red" -> <|"Frequency" -> Rational[71, 592]|>|>, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[16]} -> 1, {All, "Frequency"} -> 
        1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[56.00000000000001], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Frequency" -> TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 1, {All}]]], 4, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"Frequency"}, {
         TypeSystem`Atom[Real]}], 4], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[16]} -> 1, {All, "Frequency"} -> 
        1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[56.00000000000001], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Frequency" -> TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 1, {All}]]], 4, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"Frequency"}, {
         TypeSystem`Atom[Real]}], 4], "Path" -> {}, "DisplayedRowCount" -> 4, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 4, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Frequency", 
                  Style[
                  "Frequency", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Frequency"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Frequency"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Black", 
                  Style[
                  "Black", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Black"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.182432"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Black"], 
                 Key["Frequency"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Blond", 
                  Style[
                  "Blond", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Blond"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blond"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.214527"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blond"], 
                 Key["Frequency"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Brown", 
                  Style[
                  "Brown", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Brown"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.483108"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"], 
                 Key["Frequency"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Red", 
                  Style[
                  "Red", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Red"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Red"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.119932"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Red"], 
                 Key["Frequency"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{155., {92.91754150390625, 100.08245849609375`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{155., {92.91754150390625, 100.08245849609375`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.882515167742959*^9, 3.882515243163224*^9, 
  3.8825154427948303`*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"1d4faf71-1fe6-491a-b8c5-3977481d66f6"]
}, Open  ]],

Cell["Same operations now for eye colors:", "Text",
 CellChangeTimes->{{3.8825152744894*^9, 
  3.882515287915635*^9}},ExpressionUUID->"4d3e3a0c-a065-44e6-bf8b-\
3e9fc0292e80"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"eyefrequencydataset", "=", 
  RowBox[{"dataset", "[", 
   RowBox[{
    RowBox[{"GroupBy", "[", "\"\<Eye\>\"", "]"}], ",", "Total", ",", 
    "\"\<Count\>\""}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"eyeproportions", "=", 
  RowBox[{"eyefrequencydataset", "[", 
   RowBox[{"All", ",", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{"\"\<Frequency\>\"", "->", 
       RowBox[{"#1", "/", "counttotal"}]}], "|>"}], "&"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.882515293685761*^9, 3.882515305308619*^9}, {
  3.8825154454516373`*^9, 3.882515448258979*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"42c2463c-0c3e-4f79-9957-09c670a15aff"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Blue" -> 215, "Brown" -> 220, "Green" -> 64, "Hazel" -> 93|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[52.5], 
         TypeSystem`PackageScope`AtomShape[34]]], 4, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["Blue", "Brown", "Green", "Hazel"]], 
       TypeSystem`Atom[Integer], 4], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[52.5], 
         TypeSystem`PackageScope`AtomShape[34]]], 4, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["Blue", "Brown", "Green", "Hazel"]], 
       TypeSystem`Atom[Integer], 4], "Path" -> {}, "DisplayedRowCount" -> 4, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 4, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Blue", 
                  Style[
                  "Blue", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Blue"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blue"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["215"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blue"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Brown", 
                  Style[
                  "Brown", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Brown"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["220"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Green", 
                  Style[
                  "Green", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Green"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Green"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["64"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Green"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Hazel", 
                  Style[
                  "Hazel", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Hazel"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hazel"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{52.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["93"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hazel"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{109., {75.91754150390625, 83.08245849609375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{109., {75.91754150390625, 83.08245849609375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8825153107036543`*^9, 3.88251544878159*^9, 
  3.882516302391705*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"c3608a3b-de4e-46ce-83ea-e28aa6d0976f"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Blue" -> <|"Frequency" -> Rational[215, 592]|>, 
       "Brown" -> <|"Frequency" -> Rational[55, 148]|>, 
       "Green" -> <|"Frequency" -> Rational[4, 37]|>, 
       "Hazel" -> <|"Frequency" -> Rational[93, 592]|>|>, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[18]} -> 1, {All, "Frequency"} -> 
        1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[56.00000000000001], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Frequency" -> TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 1, {All}]]], 4, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"Frequency"}, {
         TypeSystem`Atom[Real]}], 4], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[18]} -> 1, {All, "Frequency"} -> 
        1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[56.00000000000001], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Frequency" -> TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 1, {All}]]], 4, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"Frequency"}, {
         TypeSystem`Atom[Real]}], 4], "Path" -> {}, "DisplayedRowCount" -> 4, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 4, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Frequency", 
                  Style[
                  "Frequency", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Frequency"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Frequency"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Blue", 
                  Style[
                  "Blue", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Blue"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blue"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.363176"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blue"], 
                 Key["Frequency"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Brown", 
                  Style[
                  "Brown", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Brown"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.371622"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Brown"], 
                 Key["Frequency"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Green", 
                  Style[
                  "Green", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Green"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Green"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4/37"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Green"], 
                 Key["Frequency"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Hazel", 
                  Style[
                  "Hazel", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Hazel"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hazel"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.157095"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hazel"], 
                 Key["Frequency"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{155., {92.91754150390625, 100.08245849609375`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{155., {92.91754150390625, 100.08245849609375`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8825153107036543`*^9, 3.88251544878159*^9, 
  3.882516302472888*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"a87ed0d3-4c33-47c4-8aa7-3567f4053717"]
}, Closed]],

Cell[TextData[{
 "Calculate ",
 StyleBox["conditional probability",
  FontSlant->"Italic"],
 " of Hair, given Blue eye color (table 4.2):"
}], "Text",
 CellChangeTimes->{{3.882515533563501*^9, 
  3.882515584884397*^9}},ExpressionUUID->"33dd606c-4e78-4972-9eb7-\
287a3bbbd76c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"haireyeproportion", "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"#Eye", "==", "\"\<Blue\>\""}], "&"}], "]"}], "]"}], "[", 
  RowBox[{"All", ",", 
   RowBox[{
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<Hair\>\"", "->", "#Hair"}], ",", 
      RowBox[{"\"\<Frequency\>\"", "->", 
       RowBox[{"N", "[", 
        RowBox[{"#Frequency", "/", 
         RowBox[{"eyeproportions", "[", 
          RowBox[{"\"\<Blue\>\"", ",", "\"\<Frequency\>\""}], "]"}]}], 
        "]"}]}]}], "|>"}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.88251580557934*^9, 3.8825159052073183`*^9}, {
  3.88251613214049*^9, 3.882516193190484*^9}, {3.882516251233135*^9, 
  3.8825163959939013`*^9}, {3.882516433700202*^9, 3.882516503548523*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"ed6e4d09-1bc0-42f9-8653-239bc215d262"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Hair" -> "Black", "Frequency" -> 0.09302325581395349|>, <|
       "Hair" -> "Blond", "Frequency" -> 0.4372093023255814|>, <|
       "Hair" -> "Brown", "Frequency" -> 0.39069767441860465`|>, <|
       "Hair" -> "Red", "Frequency" -> 0.07906976744186046|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Hair"} -> 
        1, {All, "Frequency"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Hair" -> TypeSystem`PackageScope`AtomShape[56.00000000000001], 
            "Frequency" -> TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 2, {All}]], 4, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Hair", "Frequency"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real]}], 4], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Hair"} -> 
        1, {All, "Frequency"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Hair" -> TypeSystem`PackageScope`AtomShape[56.00000000000001], 
            "Frequency" -> TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 2, {All}]], 4, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Hair", "Frequency"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real]}], 4], "Path" -> {}, "DisplayedRowCount" -> 4, 
     "DisplayedColumnCount" -> 2, "DataRowCount" -> 4, "DataColumnCount" -> 2,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Hair", 
                  Style[
                  "Hair", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Hair"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Hair"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Frequency", 
                  Style[
                  "Frequency", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Frequency"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Frequency"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["Black", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0930233"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Frequency"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Blond", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.437209"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Frequency"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.390698"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Frequency"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0790698"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Frequency"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{155., {92.91754150390625, 100.08245849609375`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{155., {92.91754150390625, 100.08245849609375`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.882516171394618*^9, 3.882516193615033*^9}, {
   3.8825162963861713`*^9, 3.882516362193487*^9}, {3.88251642635752*^9, 
   3.8825164713939333`*^9}, 3.882516504693335*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"e974caa1-d83c-4826-9d2c-c12ef3c9d2e4"]
}, Closed]],

Cell["\<\
Calculate conditional probability of hair colors given brown eyes:\
\>", "Text",
 CellChangeTimes->{{3.882516533534603*^9, 
  3.8825165634301233`*^9}},ExpressionUUID->"5527eb96-c9e6-408f-a8eb-\
ad8db8a4eaa5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"haireyeproportion", "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"#Eye", "==", "\"\<Brown\>\""}], "&"}], "]"}], "]"}], "[", 
  RowBox[{"All", ",", 
   RowBox[{
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<Hair\>\"", "->", "#Hair"}], ",", 
      RowBox[{"\"\<Frequency\>\"", "->", 
       RowBox[{"N", "[", 
        RowBox[{"#Frequency", "/", 
         RowBox[{"eyeproportions", "[", 
          RowBox[{"\"\<Brown\>\"", ",", "\"\<Frequency\>\""}], "]"}]}], 
        "]"}]}]}], "|>"}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.882516569913747*^9, 3.882516573505682*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"0da2d4c0-a56b-4c0e-9f32-621c48f716f1"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Hair" -> "Black", "Frequency" -> 0.3090909090909091|>, <|
       "Hair" -> "Blond", "Frequency" -> 0.031818181818181815`|>, <|
       "Hair" -> "Brown", "Frequency" -> 0.5409090909090909|>, <|
       "Hair" -> "Red", "Frequency" -> 0.11818181818181818`|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Hair"} -> 
        1, {All, "Frequency"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Hair" -> TypeSystem`PackageScope`AtomShape[56.00000000000001], 
            "Frequency" -> TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 2, {All}]], 4, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Hair", "Frequency"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real]}], 4], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Hair"} -> 
        1, {All, "Frequency"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Hair" -> TypeSystem`PackageScope`AtomShape[56.00000000000001], 
            "Frequency" -> TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 2, {All}]], 4, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Hair", "Frequency"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real]}], 4], "Path" -> {}, "DisplayedRowCount" -> 4, 
     "DisplayedColumnCount" -> 2, "DataRowCount" -> 4, "DataColumnCount" -> 2,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Hair", 
                  Style[
                  "Hair", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Hair"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Hair"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Frequency", 
                  Style[
                  "Frequency", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Frequency"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Frequency"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["Black", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.309091"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Frequency"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Blond", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0318182"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Frequency"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.540909"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Frequency"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Hair"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.118182"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Frequency"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{155., {92.91754150390625, 100.08245849609375`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{155., {92.91754150390625, 100.08245849609375`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.882516573839015*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"ffd0b7f2-28f5-4ebc-a72b-e5b738cff618"]
}, Closed]],

Cell[TextData[{
 "Calculate conditional probability of ",
 StyleBox["eye colors",
  FontSlant->"Italic"],
 " given brown hair:"
}], "Text",
 CellChangeTimes->{{3.882516592961232*^9, 
  3.882516626581608*^9}},ExpressionUUID->"5cce6576-a938-4617-92d9-\
23917c7f29a2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"haireyeproportion", "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"#Hair", "==", "\"\<Brown\>\""}], "&"}], "]"}], "]"}], "[", 
  RowBox[{"All", ",", 
   RowBox[{
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<Eye\>\"", "->", "#Eye"}], ",", 
      RowBox[{"\"\<Frequency\>\"", "->", 
       RowBox[{"N", "[", 
        RowBox[{"#Frequency", "/", 
         RowBox[{"hairproportions", "[", 
          RowBox[{"\"\<Brown\>\"", ",", "\"\<Frequency\>\""}], "]"}]}], 
        "]"}]}]}], "|>"}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8825166404470243`*^9, 3.8825166629641*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"25788d51-37ef-453b-89f3-17dc5ca1b874"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Eye" -> "Blue", "Frequency" -> 0.2937062937062937|>, <|
       "Eye" -> "Brown", "Frequency" -> 0.4160839160839161|>, <|
       "Eye" -> "Green", "Frequency" -> 0.10139860139860139`|>, <|
       "Eye" -> "Hazel", "Frequency" -> 0.1888111888111888|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Eye"} -> 
        1, {All, "Frequency"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Eye" -> TypeSystem`PackageScope`AtomShape[56.00000000000001], 
            "Frequency" -> TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 2, {All}]], 4, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Eye", "Frequency"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real]}], 4], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Eye"} -> 
        1, {All, "Frequency"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Eye" -> TypeSystem`PackageScope`AtomShape[56.00000000000001], 
            "Frequency" -> TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 2, {All}]], 4, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Eye", "Frequency"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real]}], 4], "Path" -> {}, "DisplayedRowCount" -> 4, 
     "DisplayedColumnCount" -> 2, "DataRowCount" -> 4, "DataColumnCount" -> 2,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Eye", 
                  Style[
                  "Eye", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Eye"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Eye"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Frequency", 
                  Style[
                  "Frequency", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Frequency"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Frequency"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["Blue", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.293706"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Frequency"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Brown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.416084"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Frequency"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Green", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.101399"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Frequency"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Hazel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Eye"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.188811"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Frequency"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{155., {92.91754150390625, 100.08245849609375`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{155., {92.91754150390625, 100.08245849609375`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.882516667553423*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"75e18220-5f08-4be7-a1d8-f45890a69930"]
}, Closed]],

Cell["\<\
Let\[CloseCurlyQuote]s now try to understand, verbally, what the exercise was \
about.

We were given raw counts for hair+eye colour combos. Just like one of the \
section in the chapter, we wanted to get to finding out conditional \
probabilities.

To get to conditional probabilities, we needed some basic information derived \
first:\
\>", "Text",
 CellChangeTimes->{{3.882590069032526*^9, 
  3.882590183804429*^9}},ExpressionUUID->"4abcc6c3-e39d-4ffa-8813-\
cd6a987c926d"],

Cell["Proportions of each hair+eye colour combo", "ItemNumbered",
 CellChangeTimes->{{3.882590204623972*^9, 
  3.882590224233581*^9}},ExpressionUUID->"d06c0df4-7dba-4f9a-84a4-\
1d48babfe686"],

Cell["Proportions of each hair colour", "ItemNumbered",
 CellChangeTimes->{{3.882590204623972*^9, 
  3.8825902344951277`*^9}},ExpressionUUID->"9e476f2f-3916-401d-859b-\
ea673364217b"],

Cell["Proportions of each eye colour", "ItemNumbered",
 CellChangeTimes->{{3.882590204623972*^9, 
  3.882590240776504*^9}},ExpressionUUID->"1f8854ad-1b78-426a-8166-\
2a8a5b45297a"],

Cell[TextData[{
 "When we calculate hair+eye proportions, we are calculating ",
 StyleBox["joint probabilities.",
  FontSlant->"Italic"],
 " For example, the probability of finding someone with ",
 StyleBox["both",
  FontSlant->"Italic"],
 " Brown eyes and Black hair is 0.11 i.e. 11% and so on.\n\nWhen we calculate \
the proportions of only hair or only eye colours, we are measuring \
probability of finding, for example, a person with black hair; a person with \
blue eyes and so on. For example, the probability of finding a person with \
Black hair is 0.18 / 18%; a person with Brown eyes is 0.37 / 37%"
}], "Text",
 CellChangeTimes->{{3.882590543576702*^9, 3.88259062377387*^9}, {
  3.882590673121237*^9, 3.882590817525394*^9}, {3.882590893794388*^9, 
  3.882590894254568*^9}},ExpressionUUID->"77ceff58-95e6-48f8-aeb6-\
dcd7c97dc307"],

Cell[TextData[{
 "Finally, we can use the derived information to calculate conditional \
probabilities. To calculate the probability of a person having Hazel eyes, \
given we know that the person has Blond hair we need to divide ",
 StyleBox["independent probability",
  FontSlant->"Italic"],
 " by ",
 StyleBox["marginal probability",
  FontSlant->"Italic"],
 ". So, for the specific case, the calculation is: 0.0168919/0.214527 = 0.078 \
(~7%)"
}], "Text",
 CellChangeTimes->{{3.882590821101472*^9, 3.882590845735052*^9}, {
  3.882590901625661*^9, 3.882590968803956*^9}, {3.882591004939575*^9, 
  3.882591071352685*^9}, {3.8825911071862698`*^9, 3.882591108526319*^9}, {
  3.882591381142075*^9, 3.8825913833603354`*^9}, {3.882591523834092*^9, 
  3.882591550796386*^9}, {3.8825916139974318`*^9, 3.882591641807157*^9}, {
  3.882591817342078*^9, 3.88259181806887*^9}, {3.882591863386487*^9, 
  3.8825918649874907`*^9}, {3.882592073385413*^9, 
  3.882592099918665*^9}},ExpressionUUID->"d908f31d-8e1b-49b3-8743-\
0447a31c2320"],

Cell["\<\
Thus ends a successful Exercise 4.1! Notice how the entire exercise was about \
calculating proportions in various ways and it did not feel the way it did \
when reading the section of the book.\
\>", "Text",
 CellChangeTimes->{{3.882516685774086*^9, 3.882516706566945*^9}, {
  3.882590039034752*^9, 3.882590039980548*^9}, {3.8825921383373537`*^9, 
  3.882592188149106*^9}},ExpressionUUID->"8ee6bd78-a2e6-4209-bba6-\
066660248d35"]
}, Closed]],

Cell[CellGroupData[{

Cell["Exercise 4.2", "Subsection",
 CellChangeTimes->{{3.882592218890686*^9, 
  3.88259222106322*^9}},ExpressionUUID->"1f61a4bd-9ecf-4e49-b42a-\
f01954bcebb4"],

Cell["\<\
Modify the coin flipping program in Section 4.5 to simulate a biased coin \
that has p(H)=0.8. Change the height of the reference line in the plot to \
match p(H). Comment your code.\
\>", "Text",
 CellChangeTimes->{{3.882592248080002*^9, 
  3.88259228944936*^9}},ExpressionUUID->"f42faffc-f26a-4023-b541-\
1d00b486aa92"],

Cell["\<\
Okay, this is more involved since it is mainly about R code. We will have to \
first write code to simulate coin flips, then make the coin flips biased.\
\>", "Text",
 CellChangeTimes->{{3.8825922948369503`*^9, 
  3.882592337879116*^9}},ExpressionUUID->"a53d5940-752a-4e10-9f1d-\
6eb46ba3bf03"],

Cell[TextData[{
 "Alright, let\[CloseCurlyQuote]s think about this. The R code uses `sample` \
function that takes ",
 StyleBox["probability",
  FontSlant->"Italic"],
 " values with with to take the samples. We need something similar in \
Mathematica. But what is our real goal? We want to flip a coin - [H,T]. And \
when it is flipped we want to specify how biased the coin is. Having flipped \
the coin N times, we want to plot the ",
 StyleBox["running proportion of H",
  FontSlant->"Italic"],
 " and know the end proportion.\n\nFirst, we have ",
 Cell[BoxData[
 "RandomVariate"], "InlineCode",ExpressionUUID->
  "ef289273-6b17-48d2-92de-5aacffaae8dd"],
 " function that can take some distribution. The one we might find useful is ",
 Cell[BoxData[
 "DiscreteUniformDistribution"], "InlineCode",ExpressionUUID->
  "113b2f5b-8a13-4209-b45a-a80d2871919b"],
 ". Let\[CloseCurlyQuote]s try.",
 StyleBox["  ",
  FontSize->14,
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.8830956205620604`*^9, 3.8830957108150454`*^9}, {
  3.8830957517888727`*^9, 
  3.883095845475236*^9}},ExpressionUUID->"f1b1e2de-305a-4056-903a-\
04f3c7da8a6a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RandomVariate", "[", 
   RowBox[{
    RowBox[{"DiscreteUniformDistribution", "[", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], "]"}], ",", "10"}], "]"}], " ", "//", 
  " ", "Short"}]], "Input",
 CellChangeTimes->{{3.883095849289845*^9, 3.8830959030018578`*^9}, {
   3.883096445015964*^9, 3.883096446471348*^9}, {3.8830967111545486`*^9, 
   3.883096715000106*^9}, {3.8830967636538897`*^9, 3.8830967763239613`*^9}, 
   3.883102164255804*^9},
 CellLabel->"In[98]:=",ExpressionUUID->"692da5ae-e1c3-4e75-8586-6d560d6b3508"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
   "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", 
    ",", "1", ",", "1"}], "}"}],
  Short]], "Input",
 CellChangeTimes->{{3.8830977019546337`*^9, 
  3.8830977037588654`*^9}},ExpressionUUID->"507b60d1-fa8a-415f-b6fb-\
40e2a2ee650b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"RandomVariate", "[", 
   RowBox[{
    RowBox[{"DiscreteUniformDistribution", "[", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], "]"}], ",", "500"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.883097356786434*^9, 3.8830973764172077`*^9}, {
  3.883097412102089*^9, 3.8830974330727367`*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"48bf49c1-5459-437d-bee1-f313bc2bc1a7"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.6719999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.6719999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-0.5, 0}, {0.5, 266.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{32.577612089671746`, 
           236.70541433146514`}, {-128.58628660507526`, 115.72128254052308`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 266]& ,
        TagBoxNote->"266"],
       StyleBox["266", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[266, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.5, 0}, {1.5, 234.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{236.08041433146514`, 
           440.2082165732585}, {-99.27109031688298, 115.72128254052308`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 234]& ,
        TagBoxNote->"234"],
       StyleBox["234", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[234, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.54, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-0.5, 1.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8830973614518013`*^9, 3.8830973768081627`*^9}, {
  3.883097427910304*^9, 3.8830974336349792`*^9}},
 CellLabel->
  "Out[112]=",ExpressionUUID->"d4b8b187-7094-41f8-a44e-dc71394f2a92"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"tosses", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"DiscreteUniformDistribution", "[", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], "]"}], ",", "500"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.883097731231209*^9, 3.883097744457046*^9}, {
  3.883097803824299*^9, 3.883097859284402*^9}, {3.883097949097809*^9, 
  3.883097955536022*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"7e1ba02f-34c9-4eba-9763-b370a5477cd5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  FractionBox[
   RowBox[{"Count", "[", 
    RowBox[{"tosses", ",", "1"}], "]"}], "500"], "]"}]], "Input",
 CellChangeTimes->{{3.883097963811309*^9, 3.883097982080248*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"e37574bb-009e-49d9-9407-92e70cc9b49f"],

Cell[BoxData["0.456`"], "Output",
 CellChangeTimes->{{3.883097971118421*^9, 3.8830979828440857`*^9}},
 CellLabel->
  "Out[127]=",ExpressionUUID->"2778728b-2bc4-4ae7-8c90-8b5d0500a7df"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  FractionBox[
   RowBox[{"Count", "[", 
    RowBox[{"tosses", ",", "0"}], "]"}], "500"], "]"}]], "Input",
 CellChangeTimes->{{3.883097963811309*^9, 3.883097996869293*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"1113fdb0-5095-4a3c-8b26-d2d272a72eb0"],

Cell[BoxData["0.544`"], "Output",
 CellChangeTimes->{3.88309799717271*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"e030b881-c2cb-4b1f-a8d0-05e91df7bb02"]
}, Open  ]],

Cell["\<\
There, we got the end proportions of the fair die after 500 tosses.\
\>", "Text",
 CellChangeTimes->{{3.883098000429845*^9, 
  3.883098017557632*^9}},ExpressionUUID->"a865f4fd-1e14-4b21-8be5-\
69f58e765a81"],

Cell[BoxData[
 RowBox[{
  RowBox[{"manytosses", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"DiscreteUniformDistribution", "[", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], "]"}], ",", "50000"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.883098273403489*^9, 3.883098348388942*^9}, {
  3.883098501390381*^9, 3.883098501808065*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"6fe8dd29-9ec4-47a2-9079-3f1fb3fc93b2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Accumulate", "[", 
   FractionBox["manytosses", 
    RowBox[{"Length", "[", "manytosses", "]"}]], "]"}], "]"}]], "Input",
 CellLabel->
  "In[136]:=",ExpressionUUID->"48e5c2a1-de0e-4d5b-8452-f9102a7c96df"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     NCache[
      Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
    PointBox[CompressedData["
1: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
Ec+vcHeifPXy1S/fHQ1rVuD5FfYma1fIqv+NetDTAQetwPMsLCvk9pWTr/3l
PzhyBZ5vF+HzrxCXx+LvPpsOJ6zA8yysXyGxuTlvNdTAhhV4voVN5IYV4ql9
e0veP7CL3LICz8OL8flXiKNeuaHC3WRNUn97J+F5GdYmyQuPXXp4ZhUcRBZy
ZBKep2FdkvzRfIdX6F9wQhKer5fg85MNZFOSFM146vSI5+AGsisJz+dwS5I8
1jG/8aoKuD0Jz+dwN1mzUk4tzczuOA97r8TzeQI+/0o58N+MvlscHLQSz+ew
kCNXSt6huL7/Ili3Es/vcAJZv1LmbVudMWklbCCbVuL5Hm5YKY9EZf3xSCXs
IreQ28ndK/F+AGuS5brbymff+ynsnYznefXzJ8vJH3Z+MvxP9fOThRyZjOf5
pfj8yeKwHQj2ugNOSMbzPawnG5JlnfuGDJvIDcl43oddyRI57qdBvy2DW8jt
yXj+h7vJmlUy8t8LK9pLYW+ylhy0Cs//sJAjV0nPh54/fHFI/fzkBLJ+Fd4P
1M9PNq2SQ5nDIz7sVj//KrwvLMPnJ7esEqNyOx4Ot5O7yZrV/e1N1q7G+wgc
RBZyJFlHTiDryYbVssB3wkhrGGxajfcZuIHsIreslse+f2Fb0WL186/G+436
+VfLDdbXejOM6udf09/ea/B+o37+NfJ9/PK5qw+qn58s5Mg1eP9RPz85gaxf
I28+tOnowi7186/B+9JyfP41svFi4aOvDIMb1uD9CXaRW8jt5O418uIBm2WK
wJqU/vZOwfsXrE2RezL23igL4CCykCPJuhS8v8EJZH2K/D3lyOoH82ED2URu
ILvILSl4H1Q/P7mbrFnb395k7Vo5fPOpn0buVz//Wrxfqp+fHLlWlLdHn071
85MTyHqyYS3eV9XPv1bcy3toIj4/2bUW77Nwy1qRBTfd89djcDu5m6xZ19/e
6/D+C2vXydAH787tnAcHrcP7KyzkSLKOnEDWkw1k0zrp+Gvcv99sVz8/2bUO
78/q5ye3k7vJmvX97b1e9uwPj/v0XfXzk4PIsh7v5+rnXy8Zm2Z9ue9H9fOv
x/u4+vnJerKBbFovMyPiJzhvWIHPT3aRW9bjfR5uXy/33bSutuIRuJus0eP9
HvYke+ul75ftk/Ma7KvH+z+s1cvnpsr1qVvhAD3e/+EgvVS+/tbZ5W/DIXrs
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
Kanxv1YWuReAGv9rMV9Jjf9kM9lSK+GXde3v/qXGf7KNbCc7ajG/SY3/5IZa
GfnIhzf0XlLjfy3mN6nxv1YuLbn7sXEDKhH/azHPCW6slRO2zXGJ18J7azHf
Cd5H3l8rb/7wv4JdXrCrFvOf4IPkplrZqowLGQIfqsU8KLiZfLhW3O1RboGP
1GJeFHy0VtzpT35wC/kY+Xgt5kHBJ2rl1o+WPVd3J9xKPkluq8X8KPgUuZ18
mtxRKz3/Hk/+3yj4DLmTfLYW86ngrlo5Ou4R6z2B8Dlydy3mUcHnyT21Yluy
48t5D8IXyL21mF8FXyRfIl8ma+ySavtHYxkHDyB72DEPCx5I9iQPsssrP7zS
d8uEveyYjwUPtssjw10va5+EvclDyT7kYWRf8nA75mXBfuQRdhniThiDteSR
dszXgv3t4s4Wew4eRQ6wY74WPNouh5TbbSQcSB5DDiKPtWM+FxxsF5PSLnAG
PI4cQh5PDiVPIAt5IjmMPMmOeWBwuF3c6e4vw5PtmAcGR9jF3T1VB0+xY/4X
HEmeRo6yywPuP3h4hh3zweBo8iy7XPfDF4eGLIRj7JgXBs+2i/v1MQHWkeeQ
Y8nzyXF2zAuDF5Dj7fL+NCVBH15sxzwxOMEuRVuVBubwMnIiOYmcTF5NTiGv
s2N+Gay3y7KmWSmD9HCqHfPM4DS7RPy7rzZ8E5xux3wzOMMuo8bd8XV6Jpxp
x3wzOMsumiUbPD7aDmfbMd8MNtjlW3d7ZDjXjvlmcD65kGy0y9vu8kK42I55
aHApuZxsIpvtcmU7H7bYMU8NttrlDXfBJGyzY14abLdLmHuACuywY34a7CQ3
kHfZZUTTUZ/xO+HddsxbU+O/XXovBU1M3q3Gfzvmr6nx3y7HHs5bsuddNf6T
95NddsxrU+M/uYl8iNxMPkw+Qj5KbrFL/eI/S3v2q/GffNyOeXBq/Ce32mVz
zUuHxzap8d+O+XBq/CefsstrfU9nCZ+o8d+O+XBq/LfLY7f63b3zqBr/yWfs
mAenxn/yWXKXXdzjH75U4z+5m3zejvlxavwnXyD3ki+SL5Ev98Vrpd3DN2r8
r8M8OjX+kz3IA8medXJYSdc4pcb/OsyzU+M/eXCdWC5ZTtb8qMZ/8tA6zLNT
43+drHtYqVhS438d5tup8b9OZi5+42H/c2r8J/uRR9Rh/p0a/8kjyf7kUeSA
Onmo5tM5c/5Q438d5uep8b9OlOHVpl41/tdhfp4a/+tEyYY49a8a/+swP8+M
+E8eRw6pk4NTlQZm8HhyKHlCHebvwVInpZnKhhs8sQ7z+OAw8iRyeJ24u3Hc
AE+uw3w+OKJO3OOshsJTyJHkaeQo8ow6zPuDo+vkPqV9ly88ixxDnl2H+X+w
rk6uUdJlb4fn1GEeIBxLnk+Oq5PvlWmII+EFdZgfCMfXiXJa0XIPvJicQF5W
h3mDcCI5iZxcJ3m+SkIovJqcQl5H1tdhniGcWieL3Q2R4TRyOjmDnEnOqsP8
QzibbKiT8MzmhsxH4Fxyfh3mI8KFZCO5uE5Gfjj6VHMoXFqHeYlweZ1c+ifr
+msnwqY6zE+EzWRLnXwd/FvI08/AVrKNbK/D/EXYUSdvLlJ+IbCzDvMY4Qby
LvLuOnGHu6nwnjrMb4QbyXvrxN0Odga8j7yf7KrDfEf4ILmJfKhOrhQswc11
mP8IH66T4e6BEPCROsx3hI/WSc+W0Gf3zodb6jCfET5WJ0cPlif1LoSPk0/U
YX4j3Eo+SW4jnyK3k0+TO8hn6qRWeT1eCneSz5K76jBfEj5XJxuD536RmAR3
12FeJHye3EO+0Bd/3RtacC/5IvkS+XId5k/CGkd/DyB7OETZrfhdDw8kezow
jxIeRPYiDyZ7O2TI91tmPpAODyX7kIc5MO8S9nVI1y1KwTk8nOxHHkHWkkc6
MD8T9iePcsghZfvdAAeQRzswbxMOdMiVcQjwGHKQA/M34bEOuVJ+r8Z/8jgH
5nOq8d8hL/6TGDrfpMZ/B+ZvqvHfIQ8Ef/2GpVqN/2RxYD6nGv8dojQTPm1X
4z95kgPzONX47xD38X+DGv8dmM+pxn+H7D/17++z31bjPznSgXmcavwnRznE
qFQD7VXjPzmaPIscQ55N1pHnkGMdmA+qxn+HLHN/QDX+kxc4MC9Ujf/kxeQE
8jKHKN26bv1Ijf8OzBtV4z852SH3HEzvewNS478D80jV+O+Qq5TpH5+r8d+B
eaRq/CenOuRbZfzScTX+k9MdmE+qxn9ypkPc7ZBOqvHfgXmlavwnG8i5DnGn
M36vxn8H5puq8d8hC9wJQWr8Jxc7MP9Ujf8OCXM3XFTjP9lENpMtDsxLVeO/
Q0a4N3jU+O/AvFQ1/jukbzEPfbZHjf8OzE9V4z+5wSFfHrj4xOa/1fjvwDxV
Nf6T95AbHVJ/MabvDq/Gfwfmr1Yh/pP3O0RpLnO1B+wiHyQ3kQ+Rmx2Y7wof
Jh8hHyW3kI855LX4O5ufvA4+7sB8WPiEQ0KrN/65fjDc6sC8WPgkuc0hw9wJ
6fApcrsD82Xh0w5xt3P0hTvIZxyYPwt39sVLpXxjBHyW3OXAPFr4HLm7Lx5m
eNUl3wWfd2AeLdzTF+8OLG7dEwBfIPc6MK8Wvki+RL5M1tT39wCyR73MvNhy
zZ/3wwPJnuRB9ZiHC3vVy0Puf+DB9Zh/C3vXi7I7vDQEHlqPebiwT710Wv7a
tvNxeBjZlzyc7EceQdaSR5L96zF/Fx5VLwe/UwoY4QDy6HrM54UD66V0mDKQ
Bx5Tj3m9cBB5LDm4XpJeUCbEwuPqMd8XDiGPr5epSjifBoeSJ5CFPLEe84Hh
sHq5T2kH/hI8qR7zgeFw8uR6cZfrvgJHkKfUY54wHFkv349VNlDgafWYJwxH
1cvehdf9bXodnlGP+cJwdL3kWxaO+j4enlWPecFwTL24X++XwbPrMR8Y1tW7
u928vBKeU495wXAseX69uLtLpsBx9ZgnDC8gx9fLv5t7vv16A7y4HvOF4YR6
+do147phm+Fl9ZgPDCeSk+pFmU4alQUn12N+MLyanFIv7u32HHhdPeYJw3py
ar3Md49bgdPI6eQMcmY95hPDWfUi7vYqcDbZUI/5xXBuvQx3NwCD8+sxzxgu
JBvrpedmZUAxXFyPecdwKbmcbKqXz6cMfOaTOthcj/nHsKVeapXj9TdhK9lG
ttdjXjLsqJeNrsOVT++BneQG8i7ybvIecmM95jHDe+vllb8DP9/4nhr/yfvJ
LvJBclM95jmr8Z/cTD5cLyFjt1864FLjfz3mOavxv16GLvz9Xs0hNf7XY56z
Gv/74k/V9JcmfKrG/7744i5oh0/0xRclXa8Fbq3HfGf4ZF98Ucb5fQW3kU/V
Y/4z3N4Xb5T2cifh0/WY7wx39N3/N7d5PdIOnyF3ks+Su+oxHxo+1xcfXBPG
r/gJ7iafr8f8aLinLx703f3eOgtfIPeSL9Zj3jR8qV46HlQ6+sCXyRon5k/D
A8ge5IFkT/Igp+xfMO/gA3/CXk7Ms4YHk72dYqxSCjjgoWQfJ+ZZw8PIvuTh
TlnmbqgP+zkx/9qC+E/WkkeS/cmjyAFOed6dUAGPdmKeNhxIHuOUe6acWxkw
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
MrZjTt02cEWX2PGc7eBK5Mou2VzZnGCGq7hM2YsmFlyVXM0l40abAe1wdZe8
WpY1Yo8ecA1yTZe0sh9w4Frk2i45dt4UDsF1XFLU1PEOgOu6ZL25/jcIrkeu
T25AbkhuRG5MbuISu709FG5KbuaSUZVNwyPcnNyC3JLcyiVmmOnBUXBrchty
W3I7cnuXNB1tfmFwB3JHcieXHFrW7lTECXBnlxS0B3LgLi5Zfd4UGsJdyf+4
JPabAQnvTIO7kbuTe5B7umRY7Cwa4XAvcm+XPMp+qVzaOXAfl9hxA/Pgvi6x
9Q4L4X4usZ+7F8P9XbJ8mfkPPMAl0e0BYHggeRB5sEsG2cJkeIhL7r3eeWvI
OngoeRh5uEvMaeSkG+ER5JEuMbcZPZvhUeTRLjFtKo23wWPIY8njyOPJE1xi
2vk+7IAnkie5JPJo04gGTyb/S55CnuqSfnZBCE8jT3fJLVP35IJnkGeSZ5Fn
u6SmHXgBz3GJXb754LnkeeT55AW63om9dN8uP7yQvEjXK9lrXKm9B16s65VK
31+92AcvIS8lL9P1ix2wDS93ybVRZuIivELXH3aDB16p6wuPuTAPr9L1hR24
Ba/W9YMZZ3gWXkNeS15HXq/rB1NneAHeoOsFc1z/ErxR89tsR1yFN7mkYvtH
ZzPdgDe7JGDU4if7b8FbNL/tBxZ4q+azxxQQwds0n8+ZgZ3wds3j1y0rlnsK
7yDv1PyNFafFrefwLvJuzd/sYX1HvYIDNH/NOOO3sMMlKUzd73s4kOwkuzRv
zXW9T7Bb89Rs13+BPZqntjAQDtI8PffgS7FfsFfz8/XCeJf/wMGan7GqZh0c
aXu4fZqX2b+UThIVDiH7yaHkMPIel4yvtLWhKzq8l7zPJa/btejeMBa8n3xA
83ZUrHHv4sAHyYfIh8lHNJ+XmgOz8FHNZ1sQDB8jH9c8NXUHSeAT5P/IJzVf
zef15PApzUvzX58KPk0+o/mXrWCMnWngs+Rz5PMuaVbpfrpa6eELmn/tFhR9
nhG+qPlnAxq+RL6s+bfUXNCBr5Cvar7ZAQbwNc2zc83mds0DXyff0Hx7FWNL
1PzwTfItzTsznqggfNsl+0xdVBH4DvmuS/Ka43PF4HuafybeS8L3Nd/shgX8
gPxQ885eGIYfaZ65zUAm+DH5iebZuXmtf1eCn5KfkZ+TX2jevao4cFVV+CX5
leZXLDNhAH7tksXZzA09+A35Lfkd+b3mVSWzIwN/IH8kfyJ/Jn8hf9W8M+MR
G8DfNL9MnWMj+Dv5B/kn+Rf5t+afLciB/5AjuP/fEd1it2uaw5HIkd1ibsMs
bgVHcYu5/V20LRzVLX9i5mt6sT0cjRzdLb2ymcZzOAY5pluuVTQ3ouBYbqna
zrwRwrHJcchx3eIaaQ5AwPHcksEWCsLx3WLHJ/eDE7jF1hcPhBO6xV7fGwwn
IicmJyEnJSdzyyXz+WMYnJycwi0Vs6UsGXsknNItARVNgzScyi1p2pkbHXBq
t0wbaVascBq3fF5iCnjhtG7p5J69PdtUOJ1bzp4tv//wdDg9OQM5o1vKvXp7
pfMsOBM5s1t2xFz/OvJcOItbUphxA/PhrG6ZbK7/L4KzkbOTc5BzuuW9+dy/
BM5Fzk3O4xb7x7MczkvOR87vlpNLTME/XIBc0C0l3ceG7FkDF3LL5rPDZ7VZ
Dxd2S5JXuTb+3AgXIRd1y/iYN0NWbIGLkYuTS5BLkku55XXWWedKbYdLu6WV
rn6u7YTLuMXslg4LgMuSy5HLu8WOQ3LCQq7gFlvH5IYrusUe//PClciV3TLa
LId8cBVyVbc8f9m538JQuJpbmsVMNqXwXri6Ww5lPbrq/H64hlsKVhzm7n8I
rukWM005wVG4Frm2W2LbghK4jluG2YGHcF1yPXJ9cgNyQ7c8cpXRJQbcyC2N
zHjDc3BjchO37DP1kxfhpuRm5ObkFuSW5Fbk1m7Ja64DXIbbuGW52T65Brcl
tyO3d0v0is5xMW/CHcgd3TLIHpCAO7nl3ghT6Ad3Jnchd3VLXTuAGv7HLaGu
ITcmP4a7uSXn2ezvszyDu7tl8curMQ69gHuQe5J7kXuT+5D7kvu5JXLM6ek7
vYb7u6WfGbf8Dh7gFltH/QEeqHlpD0zCg8iDNS/N55uv8BDNyyV/5o75AQ91
y3yXY0va3/AwzcczHfaERtgR7uGahy8TXWoVGR6heaj/a79HhUeSR2n+6dvD
8hjwaPIY8ljNxwomcOBx5PGal/aCBzxB83KEKeSHJ5InueWHGZ+QGJ5M/tct
3Ux9QFJ4Cnmq5qE53pACnkaervlo/vhTwTPIMzUvY5gv5vAszcusAacLZoBn
k+eQ55Lnkedr3lYwL7TwAvJCzd825gIsvIi8WPPYDvCBl5CXkpeRl5NXuOXc
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
RHKkYDG7XWO2wZGDxXwdTrsTjkKOGizmdGLobjhasJjbUq0C4ejBsvHom97f
XXCMYEloxrkFwTHJsYJljKmH88Gxg+WFOW7uh+OQ45LjBYt9/dwDxycnICcM
FjPNNul+OBE5cbAUGmAmUsNJgmXN7KNxGh+Bk5KTkZMHS9wdwzJ/OAanCJYR
R3PqEx9OSU4VLE8eXK9f8DScmpyGnJacjpyenIGckZyJnJmcJVgaR5j5z9mz
cNZg2Z/GfMCCswWLHRd7Gc4eLLbu9iqcg5yTnIucm5yHnJecj5w/WOz1wRtw
gWCx2/u34ILB8mC78830u3AhcmFyEXJRcjFy8WCpf7RTtFwP4BLkkuRS5NLk
MsES9iCJ/uLhssGSK8KRwt2ewuXI5YNlSRpzYAYWcoVgiWIL/uCKwdLfDtSG
K5ErB8vt/tNnP3wPVyFXDZbaZlz8J7gauTq5RrD4TH3+V7gmuRa5NrkOuW6w
ZDP1At/hesGywBwH+AXXJzcgNwwW+38jOMLdKFiK2w1auDG5CblpsPS2B4jh
ZuTm5Bb6fNxuCjbgluRWwWJ2i8tFhVvr89IOoIPbkNsGizk9cis63I7cntyB
3FGfvw96nskTE+4ULOb09KhYcGd93v5JY458hLtLsGSaPbh/6rhwV32+pjn9
s0c8+J9gmbM929SQ+HA3cndyD33+lhibOFZCuCe5V7D8PHJldYtEcG99Pjcx
Df5wn2Dp/mCq52sSuC+5nz6fzbjfZHD/YLHjdZLDA/R5bQ8IwAPJg8iDg8XW
KaWCh+jz3BaOwUPJw8jDg8UeV0wDjyCP1Oev+RySDh5FHh0sdvmYHh5DHqvP
6webVhzKAI8Llhn9f2dLkgkeT55AnkieRJ5M/lfz4E9TZ6fM8JRg+ToroKwr
CzyVPE3zIk2M45GywdPJM4Kly/b2jRtmh2fq872E7866HPCsYDl/JGHPdznh
2fq8b9Ljs+SG55DnkucFS/kHB8bPzQPPJy8IliH9TUM8vJC8iLw4WHb+Gbg0
f354CXkpeZnmxSxzgBJeTl5BXhksKW1hAbyKvJq8RvPDFtDCa8nryOuD5d8S
ZsAXvEHz5ki+BmFF4Y3BYsc1Foc3kTeTt5C3aj6Z8RQl4G3B0sHUS5aEt5N3
aF6ZOo1S8E7yLvLuYDltrquUgQPIDnIg2al5aI73lIVdZDfZEyylzfZeOTiI
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
1CeMhROGij2+Mw5ORE4cKn3M43YCnISclJwsVMxtq7kT4eShcqO+mcgGpwiV
hPZfAJwyVKrbA8VwqlAZawux4NShYtpg006H04TKy+RmoC+cNlTM9IGwmXA6
cnpyhlBpUWTVqjiz4YyhYqZ3tZ4DZyJnDpUj5rjxXDgLOSs5W6jY15l5cHZy
jlApbC9UwTnJuUKlx49mTZcvhHOT84TK2mkOc0Im3HlD5UrymL1LLoHzkfOH
StzNHb5OXQoXIBckFyIXJhcJlcpFQiZeXQYXDRU7rnkFXCxUAs04opVw8VB5
auqdV8ElQsXWRa2BS5JLkUuTy4RKE1sQCpcllyOXDxW7HbkOllA5kNx84Ycr
kCuSK4XK101jbjfeCFcOlfxFrnTfuAmuQq4aKl0O5P/0YTNcjVw9VFbWnzqu
0la4BrlmqFy4bT4YwbVCxfzbvL8drk2uQ64bKqKr90I74XqhYnaLx++C64fK
ruSVSp7bDTcgNyQ3CpXw69Nw41BJZT9Pwk1CxbRL7HXCTcnNQmVK/U1d47vh
5uQW5JbkVuTWobLntjlQArcJlY+9TCES3DZUcttCe7gduT25A7ljqHSwA03h
TqGyNLlpNIU7h4odn+mHu5C7kv8hdwuVqGacRhjcPVRs3eYeuEeoDAj/Awx3
T3Ivcu9Q2WaOH+2H+5D7kvtp/pn4OAD31/z78d/r4wfhAZp/07KMSHkYHkge
RB6s+Zh8dNTuR+Ah5KHkYeThmqebLs0NPgqPII8kjyKPJo/RvCxsbtDDY0Ml
+4F/tzQ7AY/TvLQLMHi85uVtc8EHnqB52csUUsITNS/tQB94Enmy5qU5jnwW
/pc8hTxV89K8vp2Hp5Gna35uej9k0gV4BnkmeRZ5tuZtYdv4Ge45oZLowIZZ
mS/DczVv7YYJPE/z1l6Qhudr3urbbKLr8ALNWzNO/Qa8UPPUnB66CS8iL9Z8
NfXst+El5KXkZZq3pp7tDrycvIK8kryKvFrz2FxfuguvCZVfZnv2HrxW89Z+
gIHXkddr3tpCF3iD5m0vU9gNbyRv0rz9bgY8wps1L6eNzDP6KbxF8zL5Re/J
Z/BW8jbNz015KqV5AW/X/CxsJhLDOzQ/999q4X8F79Q8tAc84F2ad+Z681t4
t+ad+dz5Dg4gOzTfvpef8u09HKj5NnVpohofYSfZpfmW/N2qpZ9gN9mj+bap
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
alH2mZhH7vFcMXb4Tvlh35crwT4r1pTbubfRuJLsyjJbdWWZo7qyzMX8albs
4N5S7PD84+O65i3DPg/zqt/RCwPLssNp/H9B9s9CW2WZj3nmNwSyw8P8gY3s
C0JbZVmourJ8rrqyfIH5uNhfgB7tsD+evjL7IsxDdzzEs+zKshjzz22Xqcqu
LF9iHrrxV40d/r7frf3Vn2Nfgnn4j1tQsMMl/QsZ7Esx//wBy+zKskx1Zfkq
1sxZ3Pbh8NrssNttlViH/WvMw52pscJgh93btH0M+3LMN3c6S312ZVmB+eaO
E2rIrizfqA7/7raTvsD+LeZf9IXKaIdf9Bc0sK+MNXbxm2dMU3ZlWaU6vKW8
O1GNfTXm2Y4i9/9oxq4sazDPmrlPaHZlWas63Pn44SwTWrCvC23hT/uVW/BT
S/b1mGf/uAca7MqyAfPNXc/2Cjvsj+trzb4x1gxyr6+0ZVeWTarD/ufqduzf
hbbKsll1ZdmC+bmj3qlV7dnhLM3cDjD2raEt3Oj43/gTzb4N86/fi3ZBZ3Z4
4z/ugT779tAWvjjJHajE/n1oqyw7VIcL+gsn2XeGtsryg+pw+8Wr1hzvwR4T
2ipLRHXYX9/aiz02tFWWOMxTd7xvb3ZliVddWRJUV5ZEzGf3em4fdriSexz7
KnsS5rH/Fzv8hVvN9mdPjjVHJrkDFNnhDP6CbPZdmLeLd8/6ahC7suzG/C1f
uOA/g9nhtTvGrGz4BvuPmL8v+huWol1Z9qgO53XXuw9l3xvawv44+7fY92Ge
uuMvhrEry37VleUn1ZXlZ9WV5UCsibjtQcPZYb9cGMl+EPN28bkxQ0exw73L
100dO5r9EObtjrmfZh3LDv/84o28Pd5mPxzawmmON1mxdhz7kdAWru1/UGA/
GtrCw/wLl+zHYs3KSe6CBXZl+UV12F93M5H9eGgL53bHTb3LfiK0VZZfY6Pb
dSezK8tvqivL76rDk93X6ynsJzGPX8yUoux77MpyCvP5l74fjX2fHS7pH7Cw
/xHaKstp1ZXljOrKclZ1uLs/UIL9z9AWnjPJXRDF/hfmfbZd32/7iB1Osbhg
43SfsJ8LbZXlvOpwjfKjD3b4lP1CaAsPcdflzWC/GNrC/vjGmeyXsB5wr8/M
Zodz+g0R7JdDW2W5ojr8oj9Qiv0q1gf+Qkp2ZbmmOux2H0+ez34d64VFtcsd
WcCuLDewPig/Z2vRz9nhzjuuNRj2Bfvfoa2y3FRdWW6pDrvTYuMXsd8ObeFd
vyzqlONL9n9CW2W5ozr8yF3Hu4T9LtYj/sBHdniQvyCb/V5oC/vH/V+z3w9t
4ePuP245+/9CWzhL+Y1f3FjB/gDriR0ZStf7lh12L9d8vJL9IdYPv7gFCruy
/Ku6svwXay696l5AYIcLRg94jvZHoS3cflLSmX3r2B9jnvvr7tnhBH+9ALvE
mehxHuxwJb89jP2JOBNdHrHDX/zifrBgTxFnjrzqXhBkV5aUcSaDv2CBXVlS
xZn6k87u+mwHu7KkVl1Z0sSZUdncDfDsypI2zqxdNOvUczHs8F/l3BtE7Oni
TN4dL9w5FsuuLOnjTGt3fU88u7JkUB32x4ElsGeMMxG3XTmRXVkyqQ77nyeS
2TPHmXKTHq/pu4tdWbLEGf925G52eP6i9Ykp97BnDW2VJZvqsDuNr81e9uxx
Js2OXr8t3ccO13nRfUNkzxFnhvkNFuzwylfdgU/sOUNbZckVZ/z1egfZleXJ
OJPbHXd5mF1Znooz/nWgI+zKkjvOTHY/3x9lV5Y8qsPfl3M38rI/HdrCN79/
x50IGu3PhLZwqRfdjnT2vKGtsuRTXVnyx5nufoMiu7IUiDNzXnUHRrLDe2+7
C6rZC8aZFJNqjv33FDtcI9vM1C+dZi8U2sJD3PW3Z9gLxxl/HPNZdti/fvsX
e5HQFs7pBxx70Tjj/+ecZ4etPyCZvVic2XL7vyOjL7HD1ya277n7Mnvx0FZZ
SsSZotnWXcl9lV1ZSqoOd16U1j0SivZSoa2ylI4zM8r1TLH1OruylIkzbvWS
5m92ZSkbZx656+5vsitLuTjjr0u4xa4s5ePMIH9hAjvst+fdYa8QZ4675cld
dtidpvPnPfaKcabRomLdnv0fu7JUUl1ZKquuLFVUV5Zn48y4cuPxFZgddrfL
HHrIXjW0VZZqqitL9Thzqal7IMGuLM+pDhf0BxCw14gz7f2FS+zwh7efw5Jg
a7TXjDMJ7nqjFFFb2B8PlpK9Fual2/6dih3u735eScP+PObl97c6LUrLriy1
MS+bug0A7MpSR3U4gz+wiL0u5qG/MJEdHnW77Xu/Z2KvF9rCayeuyVEuC7sJ
bZWlPuZl1jSL3s7KDudd1L303mzsDUJbZWmoOtzaXReYg/2F0FZZGmGeuuNC
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
t7sevsm+ObRVli2Yj5lWjS56m11ZtqquLNswT931Tf+wK8t2zFN3XNoddthv
T7/H/j3mqV8wsivLDszPw/6FuGiHD/RyJ3ix74w3af9+qunL/7LDdd4Zcnjx
f+w/hLbw8Ey7u994xB6Debig0OW6sj3a4TOlxoz4+ImoJRLaKkss5uXWg3Iq
BTvc0v/AxB6H+eiOT03NDvvXwdKwx2P+uZ8/07HDpd5xOxDYEzD/Mp17YUcG
dnjOgjoHMmRiTwxtlSVJdXhfqbldOmdmT8b823r9/LdZ2OGa/gEP+y7MP39A
DzvsVvef5WDfjXnmrivOyQ7747mfZP8xtIWbudevn2LfE9rC/nFcbva9oa2y
7FMd3lpqU/0ST7Pvx7zaknH/iGfY4WJ+gwr7T6GtsvysOtzFH7DHfiC0hd3t
aH0LsB8MbZXlkOrwbnc7cUH2w5hX490NMezKcgTzK5M74YIdHrRglHviE+1H
Q1t4qbs+ohj7Mcwzd9xLCXY4q98Azf5LaAs39gcMsx/HPOtVpV2lMuzKckJ1
eNON6acnlGX/FfNu/J+Dfi7Hriy/Yf5lcjdssCvL75h/C2ZPeqMiO/xRKfeL
N/tJzLctbgHDDj94wb1gxX4q3lT2B/CzK8sfqsP+eLRq7Kcxn9z27ufYleUM
5ov7OleDXVnOYr5k6nTyck12ZfkT82bBhgG1nmeHR5dybwCz/xXawmu3uB9Y
2M9hnrzgXrBmh/P5C2bYz2Me9BpceHd9dnjajcTVuRuyX8Dnubte8AV2ZbmI
z3f3tm4jdmW5hM979zpXE3a4j/s5tCn75dBWWa6orixXVYcXbHEPQNivhbbK
ch3z5AX3iwe7stxQHU7rL6Rj/zu0VZabmD+9pqWd3YIdHn7jzMw/W7LfwvwZ
X6vAsy+zw2cyzvp20ivst0NbOPeCK1UPtWb/J7SFW7rrktuy34k3U9zx5O3Y
Yf96dnv2u5g/7vFjR3ZluYd51Gv5tR6d2OEeNx6NXteZ/T7my/gOqR53YYf3
ZVz/Sctu7P/DfFmQLu+i7uxwTf9vyP4g3gz1G1DZ4eUv+ANko/1haAufPDSw
6e992P+Nj16P8Sq7svyH+eKOT+nHDvvtNP3ZH4W28FY3Ll5jfxzaKmNAm2vz
iz8xcCC7sjyhurKkSDDF/MBnh7v4F3jYUyYY9+tFxzfY4d2H3qvwzRD2VKGt
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
WI+4t4Pj2eHYOe4HVfbDoS3sTkPsmMR+JLRVlqNYv/gLyNjhvv4JAfux0FZZ
fsF6xb2+/SM7fNA9Ht7Dfjy0hdNeeZzv/F72E6EtXHdMx2+q7Wf/FeuTtBue
nfITu7L8hvXKHPcAmR0+W9QdKMT+e2gL5/EXnLKfDG2V5RTWJ/6NYXZl+QPr
jZ8GXc1xlB3e2TVxVO9j7KexXnDXU/zCrixnsH5wx4WcYFeWs1hPuO1wv7Ir
y59YX7iP89/YleUv1ZXlnOrKcl51eH9Rd2Ai+4XQFvb/406xX8T6wp+Qzg4P
/en9Q6dOs18KbeEVXd0vKOyXQ1tluYL1x+Wal8b/ya4sV7H+GDNz+P6/2JXl
mupwM/8Hkv16aAv767susN/A+sEdN3aRHfbb5S+z/431gPt6eYVdWW6qriy3
sH746Wt3AnS0wzO7uje22G+HtsryD9YHl9vjGyg7/Hj0us7z/2a/E9oqy13V
4Wr+CwX7vdBWWe5jfeBfIGSHlxV1Fxyw/w/zfkP293+5ww5nc9eF3mN/ENoq
y0PVYX+86H32f0NbZfkP6wX3utr/2GH/c/VD9kehrbI8Vl0ZAzbsyvKE6sqS
IslcHu2+AbArS0rVlSVVkinsfxBlhzv4AxnYUyeZj4u6C7t2RruypFEdTtxQ
4Y1lT7CnDW3hh/Xe+9+tFOzpQlu48k9/TG6Qij19khnQ1d2Qzq4sGZKMvy49
DTt81B0vno49Y5LJ5B8IsytLJtWVJbPqypJFdWXJqjrsH/9nYM8W2ipLdtXh
Mf4CVvYcoa2y5Ewy6zY0bzskMzt8vt5Xf8RkYc8V2irLk0km30//DsySjR1u
07Xd3W7Z2Z9KMtMur5m4Jgc7HDvanTjJnjvJ3EvjNrSxw+WjBzBGe54k09df
EM8O++NqnmZ/OskcdNvjnmGH/XjLy/5MaKsseZNM3a5v/V46PzvsTusYU4A9
X2irLPmTjDutbHdBdvhsGveCAXuB0BbO4w9sZi+YZFq529SKssPu9ui0xdkL
hbbwznqnVrUvwV44tFWWIqorS1HVlaWY6rC/Lqwke/HQVllKJJnS7ni2UuzK
UjLJ9HSvF5Rhh/3X/bLspUJbZSmtOrw/jXuBkr1MkknpL4Bgh2sVdTvk2Msm
maEblqY5XIldWcolmRX1Hs4oUoUdPrm/Tf63nmUvn2RydV39TVxVdmWpoLqy
VFQdbn45VdXs1dkrJRl/Xepz7PA2d7xqDfbKSca/XliTXVmqJJni7uf759nh
LhsiVxfVZn82ycysl2f09TrsylJVdWWplmR27x+asm49dmWprjr8uMuPH39k
2J9LMtUvF37mZH12eLB/wMpeI8ksS+MOPGKH3f/Zexux1wxt4Wzuuvcm7LVC
W9gft96U/fnQVllqqw6Pd28nvMheB/PWbUdozq4sdVVXlnqqK4tRHXan5XR6
ib1+aAsXvlxXvm3B3gDz2m9IY4c/TuMONGRvGNrC7vbBea+wvxDaKksjzOci
S8pfaM2uLI0xrzf8b1v1tuzwgHr+hJJobxLawov3r/z5aHv2pqEt7K8r6cj+
Iuan/wfADvvtfp3Zm2He+QOO2eF1s199v0839uaYZ0Vicm7qzq4sL2G+bXhq
cYqe7MrSAvOunruBhV1ZWiaZ6ft3bV7Smx2O7eKeCLG3wvy75BZc7HB5/8If
+8uYf/6CBXZleQXz0B1P9xo7fNBt5x/I3jq0VZY2mIfu6/AgdrhuvQ+zFXid
vW2SGbH/r4Wvv8GuLO1UV5b2qsOrurg32Nk7hLbw2UvuBzX2jpiX/kABdmXp
pLqydFYdbuUvWGLvEtoqS1fM39mL2z4czq4s3VSHdxa5/0ezkezdQ1vYX1c6
ir1HaKssPVVXll6qK0tvzFt3vOxodmXpozrc071OOZa9b2irLK+qDvvHGW+z
9wtt4f2X3ANS9v6hrbIMUF1ZXsN89wc4scO1ohdYRvtAzPPZO2vtsuzwiiJP
Jj81iX1QaAufWv/6K/3eZR8c2sK56iX/vnky++uY1/sLDEg9lR3218e/x/4G
5rU7Dv59dmUZgnntjkeYxq4sQzG//YXf7HCX2ScKzfqQ/U3M4yJVVp/9iF1Z
3lJdWYaprizDk8yP66c/V+UTdmUZgXle98/4iZ+yK8tI1ZVllOpw9f3Ptzw4
g3001gP+fzC7sozB+uCS3+Ae7fCJUe4AZPaxmP9p3BtZ7LC/fuYz9rcxz91x
QvPZ4e/cdsgF7OMwX904/ZwdLry/Y9UvvmAfH9rCHfwCi/0dzNdL7gU7dtj9
uvfBEvYJmJep3Ym97LDb3VrmK3Yb2irLRNWVZZLqyvKu6rB722zs1+yTMX/X
J6bcs5wd9texfcM+JbRVlqmqK8t7qivL+5jv7jjEb9lh/7rESvZpmO/+gAN2
ZZmuOuw+HDqsYf8gtFWWD7EeSO1usGZXlo+STP7ZlQ7fXccOtyniduCzf4z5
v/4MJhq7snyC9UDdWiPObWJXlk+xPtg3U6ptZofL+weC7DNCW2WZifWCPwCJ
HY4e18s+K7SFD/rXH9lnh7bKMifJpPOPF9jhukXciZrsczH/1z9yO4ijXVnm
qa4sn2F9UNf9jWKHz+5bd17i2OdjvvsNTOxwK3/AIfsCzOdR7sJodnhn6hz4
CGdfGNrCt9118LvYP8d8dMfj72ZXli8w/9xxDHvYlWUR5p/bLrGXHd6/z/2L
fTHml9+QzQ7X8gcUs38Z2sJ+d8sB9iWYX6krPshwiF1ZlqoOn5r13pTOh9mX
YZ4VOZ1t5RF2ZflKdWX5WnVlWa66sqxQXVm+wXxdX+Pz/x1lV5ZvMW/ruhPK
2JVlperKskp1ZVmtOrzNXcdznH1NaKssazHP3fFRJ9jh4v4CBvZ1oa2yrE8y
Xd1y4nd2ZdmgurJsxDxP/dLpYyfZlWWT6sryHeb9rK8GlfiDHX5c+L+7I06z
b8a8Xt9uUtIZdmXZorqybFUdHlzX3cDHvg3zfZ/7QYcdPtHZ7ZBh3x7awtn8
hU/s34e2yrIjyTRx1+1dZFeWnVgfuOMZL7HD37nXRy6z/4D1gfv54io7XHj9
WwNmXGOPCW3hDnX33j59nT0S2sIf73MPxNhjQ1s4sbM7MYg9LrSFH150F0iy
xyeZKqPKFy74DzuMxerqN+6wJ4S28OJZp56LucueiHnsrpu9z64sSaorSzLm
tzuu+X/ssH9d9AH7Lsxnv0GJHXZPi5r/x747tIXdbrSFj9h/DG3h/KPcEzf2
PZjHqZfNrPXED9EOT5/1MP/0FFHL3tAWdqdhnkjJvg/zd93qqqVTs8Pu9p7R
adj3Y776DcnsyvKT6srys+rKckB1ZTmoOrzQXVeQnv1QaAv74yMysB8ObZXl
COa7286RkV1ZjqoO+388mdmPYZ7PypOqfRZ2ZfkF873wm598nZVdWY6rriwn
sB5Y9+Mzd7Kxw3miC5Bo/xXrAf/CGDs8tbO7UIH9t9BWWX5XHd55sWzTZ59i
P4n1wkh3Awe7spxSXVn+wHrCXQ+Uhx3u6Y67eob9NNYPbntpXnZlOYP1hFsO
5WOHU/ofcNjPYv3gX3Bnh9/0FySx/4n1wcWmFR4XZleWv1SHT41csr1lUfZz
oS2cK7W7AYH9fGgLN5/V+sC14uwXMF8L+1+Aoh3e5q7rK8V+MbSF/fGSpdkv
YV76A4PYleUy5qG/gJFdWa5g3l18Ndfe8uzKclV1+MeRMYufqch+DfMwVe6y
AyuxK8t1zDd3umtldtjdhpD+WfYbmG/rCuEbJDvsbmv9phr736GtstxUHc7m
Dyhkv4V55i9gZleW25hv7njnmuzwd+510Frs/2C+uccRtdmV5Y7qynIX82/W
h59PqcMOdyjsTsRmv4f5tq7OpmKGXVnuq64s/1NdWR4kmaQ6bgXOriwPMS/3
ugOH2eEqnZu0y/kC+7+YjxcXn+7diB1ePPL+oI2N2f/DvHPXyzdlhzO56xRe
ZH+EeeeOd2jGriyPVYfH+IHHLslmvfuf04JdWZ5QXVlSJJvze92FCexw/s59
n/+jFXvKZIO1TnKFV9jh6SOfbP1Oa/ZUoS0cm+qNk/vbsKdONvdmJg/I345d
WdIkG7f6GNyeXVnSJhv/a10HdmVJpzq80F031Ik9fbLxx1V1ZofTue2aXdgz
JBu/3OjKDo8YWaVGs+7sGZONO514fg92+OzMP1te6smeKdm429Rq9GaHW/kH
COyZk83UOu7AFXZ4515/IWC0Z0k2tzu5HZHsypI12fjr9QawK0u2ZNPTHT85
kF1ZsquuLDlUV5acqsP+9Y5B7LlCW2V5Mtnsdz9PDGaHUxXuhD8i7E8lm1p+
gwE7/KY/cI89d2irLHlUh1fsdRcasz8d2sKnOrkT6tifSTa5LuYcM3M4O9x8
5OBUZ0ew5w1tlSVfspmYKumTyqPYlSV/stnmrt8dza4sBVRXloKqwzfc8dFj
2Aslm+LRDabRriyFVYe7+gOC2YuEtvDMvROaRsazFw1t4R87uRsI2YuFtspS
PNk8vlCpR3fLDlcf6XZ8sJdINu6f5n+T2GG3Gm8xmb1ksvm1kBsQ7HA2/4IP
e6lk08Qf2M+uLKWTjb/OYRq7spRJNt+54x+msytL2WTjtx98yA4Xdv/4P2Iv
l2zc7TM/fsyuLOWTjbs9MM+n7HBSIfeFj71CaAs/XOteCGavGNoqSyXVlaWy
6spSJdlU8RcEscMD9m7P1WEO+7PJZnGnHF8un8sOH70wsOzdeexVk00md93S
fHZlqaY63NAd97SAvXqy8dsjF7Iry3OqK0sNzDO3PPqCHT6/1h2owl4T88xf
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
Nb4+uwe26OwebgMG9L/4+pxQ7tjR2X/M2BpzdDz6dd+WneqN9M3zTkT/m6/P
cjzIJHRlusHXa9kOYzK6Mt1Unf2TLCeZin6Lr+fy4zkNXZn+4euze8GKzm7h
NsRCv+3bKtMd1ZXprursSQllxTr6Pb4ezzjOdzDobLl7uf01+n2+3q77cv/b
c9DZ8vZ36lz0B3w9DVY8fWYeujI9VJ3tjiObj/6vb6tMj1RXpv/4eu0WcKEr
02O+frsNNdGV6YnqbDcuLEZ/ytfbGfdn9fwWXZmeqc52p9MtQX/O19d1369J
vhRdmV7w9bbq8wptvkdXppd8fQ222LtqGboyveLrZ2v5gURnP7gqC8zRKcaz
VaYEMaao24Acne2OL12NnjDGzJXtO39AZ7vPVdaiJ/Jt2a/J48916K/FmCpV
s+UssB6dPSA4gC9R6IljzKrWcsOPrkxJYowMR69vQlempDEmkzugBF2ZksWY
9xL+/vvGzejKlDzGjJlRnP+T0dlbc8sObugpYswdd9w2ujKljDHx24Ojs9u5
z1PRU8WYWe71Hjo7eFU+gEdPHWPIHfCGrkxpVFemtKorU7oYI/92I/eiK1P6
GNOH76bj9qGz5el3rv3oGXxbZXo9xvy59mm7PgfQ2W7160H0jDFGvoZLFUBX
pkyqs0e6F6TomWOMOy4khM6+KdtThNGzxBi3/CWCzv5Afj3EoWeNMXIa9t+H
0NkH1mapXfkIerYYwzcLcROOorPLBgNtTh5Dz+7bKlOOGNPDLUhCZ397VTaQ
RM8ZY/74VA54R2enSlhsfOZT6LliTG05HuxPdGXKrTrbbad1Gv0N35b9kyw3
PYueJ8b8Jbfn59DZueL/Asb3N2NMC7eAGF2Z8saYSVdlw2l09t5P71z86jJ6
Pt9WmfLHmP8S1Otz6Qq6MhVQnV1yxpLHZa6hF/Rt2R/lfjJ29F/ohXxbZSqs
ujIViTEL1jZNe+Q6ujIVVV2ZiqmuTMVVZx+V40lvoJeIMW770Jvo7BruAzD0
kjHGPd67ja5MpVRXptIxZi3/dHW4g86W6e7Hu+hlfFtlKqu6MpWLMdlm7Dr3
4h66MpWPMbI6qOEDdGWqoLoyvRVjZHX5wofoylRRdWWqFGN2VYmxt/5FZ8vu
JdX+Q6/M1z/3gTs62x1H/gS9im+rTFVVZ8+V7cifoVfj66N83vocnf2avN58
gf62b8uukrtck2yv0Kvz9XLt5NOf0O74zl5V5crHWxPEm2r4tuxzAXnhiW74
eug23EFXppp8PXQHwKIrUy3V2WM+lS8g0Wv7tuytCeSJGXod31aZ3lGdfWf6
f2tmJ0evG2MKynEjKdDZbruLVOjv+rbsWbI8KDV6Pd+W7X59p0Gv79uyyW2o
iN6Ar5fugHl0dp9PZcd69Pd8W2V6n6+XCeQLMXRlaqg6+8/pGXkCR2/k27LT
5+6Tc0Nm9Ma+rTI14evr2gMrKSs6e6T7C4belK+vcpxYdnRlaqY6+6Zs55UD
vTlff2U5bi50ZWqhOvsDGX9yo7f0bZWplerK1Fp1ZfpAdWVqw/cHCWRHb3S2
rM4r8Sb6h76tMrWNMc9zyUSFzpavn2Pzobfj+wN3A4zOlt1GexVEb+/bsv+Q
3f0LoXfg+4WrdXakKILOri3HrRZF7+jbst32o8XQO/m2bPc5TXH0zr6tMnVR
XZm68v2FPE4tia5MH6muTN34fmTtq0/nlUJXpo/5fsQ9EENXpu58fxKQD8rR
lekTvh9p5Q4Ui+/K1IPvP650/u6P8ujK1JPvPz7dXrzgW+jK1Et1ZeqtujL1
UV2Z+saYbgle3/q/iujK1E91ZeqvujIN4PuT6b1qH6iEzj4qx9lXQR/I9yey
nXtVdHYN98IR/VPfVpkG8f2I28AHnb22lRzgiv4/vp+4MnL8UoPOzvbpiQz3
a6IPjjFNEpReXLM2ujJ9pjr7y+kTisysgz6Er/+55MRqdGUayvcDP1Q2pd9F
ZxeNX1AV34f5tso0XHV2J7fhIfoIvh+Q41reQ1emz1Vnu+1O3kcfyfcHsrqh
IboyjVJdmazq7KpyOWyMPtq3ZcvXUe2boI/xbZVprOrK9IXq7FW5Xs5f2xR9
nG+rTF/y/cwP8hcGnZ3JLQhHH8/3J24DanRlmqA6e0wr+RNCn+jbKtMk1ZVp
Mt+/XNnavMoH6Gy+WTg/sQ36FL5/kePlPkRXpqmqs932Zu3Qp/H9iyzvbo/O
duNyB/Tpvi2b3Adb6DP4/sUdwIGuTDP5fqWVrAhDV6avYsyyK8crJ/kInf3n
wJIHWnZDn+XbKtPXqivTbL5fSTC+yfKP0dnvTj9/+mF39Dm+rTLNVZ09Mlel
7nV6oM/j+xc5XrYnOvumbM/aC/0bvj9xB5ahsz+Qx8990ef7tsq0QHX29Cv3
3zjaD32hb6tMi1RXpsWqK9O3fD8y8L0f3hyArkxL+P6Elr01YCC6Mn2nujIt
5fuZ6c/37vkUXZm+V53dI1fLhun+h76M729+kBeW6Mq0nO93KsuGO+jsVO6A
VvQVfH/TSk6wQ2cPk+3qh6Ov5PsR+Tx6BDr7L3mdPhJ9lW+rTKtVZ8vuIVNG
oa/xbZXpB74fyTWw3BmLzpaHVcXGoK/1bdl7K8sGgujr+H4jRg6kR1emH1VX
pvV8v9Dq907Zv0Rnd7tSXE7ciu8/8fV9oOxggc4+SvIGEH0DX9/luJrJ6Owa
7j8QfSNfv92CbXT2WrlcTkffFGMux8zbMWcGujL9zNfzVvfqXpuJrkybVWc3
uVL/aIVZ6L/w9XygnOiDrkxbVFemraor0zbV2btIvoBH3+7bsh9Maz4o/1z0
Hb6tMu1UnV3U3eCi7/Jt2Z3cB2Xov/q2yrRbdWXaozp7rhzXtwB9b4yJk+3l
FqIr0z6+f5Dl9ovQ2VXlccO36L/x9X3g7tpNl6CzV5GcyIK+37dln5vW/8O7
S9EP+LbsTO4BJfpB35b9nvuAGz2Gr8eV5cAudPa2mKPjS65CD/i2yhTk63XL
Yq+PXI3OLijH7a5BD/H1WLZ3XYvOniWfq61DD/u2yhSrujJF+Potrwt+RFem
OL6euxeE6Mp0SHX2W/Eb3sT3w3w9dweaorOXxdzp83QT+hHfVpmO8vW6Zb0n
9TejK9Mxvn5fWfLFN7+gs98d+CTt31vQf/dt2SOp2YJK29CP+7bK9Ifq7J+n
rSk4YTv6Cb6eu+3s0ZXppOrKdCrG5HWfj6Oz41/vo//p2yrTab4ex6RqcXA3
Optvbs5n2ot+xrdVprOqK9M51dnPL+/q2W0f+nm+/g7M/Ojn39DZPajf6NcO
oF/wbZXpIl+Pp7n/gPjO/iOnLChHv+TbslO7DYvRL/P1ubJ8MYSuTFf4ei3H
9YTR2W67llj0q76tMl3j67Ms74tDZ7vL7SH0v3xbdgua0v3wYfTrvq0y/a26
Mt1QXZluqs6eNE1u0NBv+bZsudvodwz9H9+W/Viefv6Oftu3VaY7fP2vLDv2
oivTXdWV6R7fL8TUzdPhBDpbvvZadxL9vm/LPnr5v7denEJ/wPcPcvzfaXRl
esj3E7L93Rl0ZfqX7y/cAzh0ZXqkOts9jjiP/p9vy768Rg4QQ3/M9xeV5cR1
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
qivTT6qz3e3oJ+gbfFt2arfgHH0jz/duww10dm23QTH6poDp6A64Q1emn3m+
n9p+6bBe6Gx3fGVv9M2+LdsdfxHtv/i27FjZrrMP+hae72W7j77oyrSV53v5
3CnalWkbz/uyXKgfujJtV12ZdqiuTDsDprI83uqPzm5xcPehrTDt4vk+tZxQ
jM6e3EJOJEH/1bdlr1iwP89P0b7bt2XvvdT/WutP0ffwPF5EFhigK9Nenr/7
yxNndGXax/O427ANnV3SHeCA/lvANHAHGqOzu00dxpc89P2+LVt2Q7gd7Qd4
3s5x7PU5Q9CV6SDP113kgoDOPrq62LdXYYrh+fruiY+mDkNnJ68kT9jQA74t
O78cFx7tQZ6X5TiuEejKFFKd7bb//hw9zPOybP8GW2WK5XlZPr8eia5MEZ6H
Zbn4KHRlilOd7V6nRvsh31aZDvM8LX8dLDr75RbZMBb9CM/H7gAtdGU6yvNx
3Zureo5BZzeZOrdvhrHox3i+/b12+e2wVabfeb7NcfdJ5y/Q2Uu7yAN29OM8
366uN24DbJXpD55X7z5s0OZLdGU6ETAPK36XLsF4dGU6yfPrqIZ/rIp2trtd
nIB+yrdly9XkcbT/6dsq02meb1s0K7RkIroyneH5dsHLW+9OQmfLaow7MJ0N
mE1F5AMkdGU6pzo7To5DnYJ+3rdVpguqs93xJdF+kedTd6AqujJd4nlTtr+Z
hs6uKp8TwnTZt1WmKzx/yvK06ejKdFV1tnv8NAP9Gs+PXbYtPw5bZfpLdbbs
Lv35TPTrvq0y/a26Mt3g+fNu+jIFvkJnn6/466NYmG7y/Dmy585Bs9DZchpg
zq/Rb/m27NKpf3t3f7T/49sq022eN1vIFQJdme6ozu7ufoGi3+X58ZIsyENX
pnsBs7iIfACOrkz3VVemB6qzt/V3G5DG94e+rTL9qzr79y1yABL6I9+Wfefl
kPUffoP+n2+rTI9VZ6esKzuCoT/heXfqkSprYMvmX97UbAH6U99WmZ7xvOsG
UHT2EDmebyH6c553ZTv/Rehst/0iTC98W3ZItktYjP7St2Vflc8lvkV/5duy
3XKDaKegZ8t2P15L0BP4tsqUMGgqtpjyoOJ36MqUSHVlei1omrkH6ujKlDho
+rgPQNCVKUnQTCwiG/igs5f1lw3d0ZMGjXzdPXIZujIlC5o/X86eXXA5ujIl
V12ZUqiuTCmD5tE7cqIgujKlUl2ZUgdN+qm38wxega5MaVRny+6luVaipw2a
em4BALoypQuarnK7vAqdPXL1txUzrUZP79uy3WlJ0Z7Bt1Wm11VXpoyqszdX
fLzvozXomXxb9uGRyyak+gE9c9DcPNCk0c+wZbvjmNeiZwmavHLc0jp0ttuu
GqasQeO2s/oRnT3IbRCJns23ZU+X5ajr0bP7tmz3eOwn9BxBc+DlxuH3Ycu+
+E7HmvM3oOf0bdnPp6RMWmsjei7fVplyq87O4n4hor/h2ypTHtXZ5XLIjuHo
b/q27EZdZIcj9LxB02P1zlwXYatM+VRXpvxB88XdTy5P2IzOXsJ/20r/gl4g
aHbwNHYStmx5G2K3oBcMmvvyem4rOju1G6DQC/m27MJuwTt6Yd9WmYoETW23
YQs6u6Pb4Bu9aNAMcwcmoitTsaCZvSXfwsw70dnxx0+iFw+aWHecBzo7fntP
9BK+LTt+exL0kkGT233+g65MpYKmsltOg65MpYMm/scDnd3v7rhgi73oZYJm
ckX3BUd8V6ayQbNipDxxR2fvPTAp+/u/oZcLmrOpKl54AFv24+byQhu9fNC8
7j4wRFemCqor01uqK1NF1ZWpUtCUdBvgobMbuANS0CsHTTd3wDM6226RWyT0
Kr4t293OB9Cr+rbKVC1otrwjTyjRlentoDk65Z1jp6Kd/c+xe/NGh9Cr+7bs
5DkWdygSRq/h27Lzd2mQ/0i0m6Bxx3PHorPd8V0R9JpBM1i2Y4etMtVSXZlq
q65MdYLGbccWh852n6MfQn8naAKy+hi2ylRXdWV6V3Vlqhc0l+Xx12F0tnxd
mPYIen3flp3NbaCM3iBoKrgD1tCV6b2gadJ/w9Ikx9CV6X3V2bI73o/R3tC3
ZY9/mbxkq9/RGwXN0nd+efACtsrUWHX2rikyEKE38W3ZcvpKwz/Qm/q27IfZ
d9T5N9qbBU3aLt1TLDqBrkzNg8a9LjuJrkwtgkZO074V7ezOFeUEbvSWvq0y
tQqaESPlBCV0ZWqtOnvugf3XLkf7B0GzKZU80ERXpjaqs+Oay4py9A99W7Y7
XjXa2waNO57mLDo7jzvgF72db8uuKtsNRXv7oHGft51HV6YOqrMHyvKdC+gd
fVv2VPl1Eu2dfFv2qinyQha9s2+rTF1UV6auqrN/O1asW7ZL6B8FzfnsJ4vu
hS37aWe5I0Dv5tuy5e4g3RX0j4NGntZthS37/YoTa3a6it49aGT1Z7Jr6Gz5
emA9TJ/4tuzFqWTBG3oP35a9rblsMIDe07dlu9vv6+i9gkZ2O2r0Nzo7ZRH5
jYveO2hkd8rFN9CVqU/Q1Nwyt3zdm+jK1Fd1dvuXtZ/+E+39gmaI+wFDZ7vj
8v5B7x807vgD2LJDsj3hbfQBvi37qmx/cAd9IM+Pslwftsr0qersnPK47y76
IN9Wmf6nOrtixRWFit9DH8zz4shmfAlEZ/dxN9zon/m27Imp5AMV9CE8LzaX
Da3QlWmo6uzd8+VAAfRhvq0yDed58KIcIIquTCN43issX3Sjs9P3lxVf6J/z
PLfl5+wZ/kNXppGqK9MonvdedrqwLdqVyarO7uoeYKKP5vlvyrZeyZ+gs785
1q3MBpjG+LbszfxP/+Ap+lie1/hul56hK9MXqrPlafKqaB/n2yrTl0GT9G7m
ek2eo7PzyvHAMI33bZVpgurKNFF1ZZrE86QcB/UCXZkmq65MU3j+dC800dmD
3AfO6FN9W2WaxvOnfD76Cl2ZpvM8Kst9aG98V6YZqivTTNXZB+XXZbR/xfNr
YTnRBJ39vJ/seIg+i+fLLUfoHGyV6WvVlWm26so0h+fTl58fHJcIXZnmqs5u
5Bagoc/zbdk9pvzR9Hi0f+PbKtN8nl+PjcnyeWJ09pLspc7mT4K+gOfXzqeX
xsKW/ceq8Z8MSoq+0Ldl35flzcnQF/m27NQyTkX7Yt9Wmb5VnV3Y/UCjL+H5
1i2wR2d3dBsKoX/n2yrTUp533Qbw6OzZ8+UATfTvg2bDxb9nb4StMi1TXZmW
q65MK1RXppU8X8vxnanRlWmV6mx3/Eka9NU8b8t2p7BVpjWqK9MPqrNzu4EC
fS3P4/L5EGyVaR3P5/K4NB26Mv2oujKt53mef9vUS4/OnszT+V2YfvJtlWkD
z/edH0+YlwFdmTaqzpbVWeZ19E2+LfvsnSYZr0f7z0Hz+K0Xp6ZnRFemzTyv
uweQ6OyS8R+8xvdffFtl2qI6u4HbYBN9q2+rTNtUZ3dzByShb/dtlWlH0Nj5
ckA6ujLtVJ29UF7/ZkXfFTRbCm+qWTAbOltOu4mD6VffVpl2q65Me4Lmn19S
Rv6XHV2Z9gZNcvdCGJ2d/x05UQF9X9DIaeB9cqIr029B01aON8+Frkz7g2aw
HG8X7Wy3vXxu9ANB47bvewOdHZDPz2E66NsqU4zq7MuynCoPesC3ZbvLxZvo
QZ733YYp6MoUUp1dwW0gjh72bdlN3IGQ6LG+rTJFVFemuKDpNf+zhUvzobPH
X8zXpUF+9EM8/xc+XOg+bNm7+o3455sC6Id9W/bJX+QvHPoRnvdfyAJ6dGU6
qroyHQuatO+Mrj6zELoy/R40bjl4YXRlOh40dWU8jXZl+kN1dufsssMX+gnf
VplOqs6W1ZOli6KfChr5OukkbNmb7ky6MKoY+p88/78lAwm6Mp0OGtlN6FC0
sxO7DQLRz/D87w6EQWe77ZFhOuvbKtM5nv9le6FS6Mp0nud/+XysNDp7qjxO
hukCz+f95A4enS2nraYui36R5/MX9zpshq0yXeL5vM7i/O3LobMzTWlw47Xy
6JeDpsyxR+vXwlaZrvC8nl1OSERXpquqs7t3lh3Q0a/x/L7qGS17C529+M7K
g+9VRP+L5/O35IqIrkzXVVemv1VXphs878vr3kro7Lv7ZQNp9Ju+LTulOyAQ
/RbP+80Tf/9VFXR2zfkbPqlSFf0f35bd/mL7kpei/TbP94VTPJxYDZ09q98v
28q8jX7Ht2W74x2j/S7P93K8QnV0tttOsgb6Pd+W7bYziPb7vi07pyzPMugP
fFtlesjzvPz6rYmuTP/yfN+595uBaFemR6qz5ev7frXQ/+N5/478AaAr02PV
lemJ6sr0VHW22x0r2p/5tsr0PGh2fy4rAtGV6YXqyvQyaE7vlwMy0NmPUsqB
yeivfFu2nG7RoS46hTxbZUoQMsXnxzVK8i46u97FYRl/hCmhb8vuKsvN66En
Chk37sKWPf8X+SAO/bWQ2fyiWLGGDdCVKbHq7MN1ZIUXepKQuTn5i18Wvoeu
TElVV6ZkqitTctXZSY+VHlHnffQUIZM3+9mat2DLdsdhN0RP6dsqUyrVlSm1
6sqUJmTccWGN0NmD3ANH9LS+rTKlCxm3vVdjdLb7fK0JenrfVpkyqM4+KI/X
o/31kLmYUla4oCtTxpB53qxGv6LN0JUpk+rsLPNvlj8a7ZlDptzFuU+HNkdn
NypcZ8+bLdCz+LbsHvEvOON71pAZx3+6A1qis5fwtJStFXq2kHFvO2DLltU7
n7RGzx4y9+Vz9Q/QlSlHyKSW19PRrkw5Q0Z2x+jYBl2ZcqnOrrOq2aakH6Ln
DpmObgETOnuY2+AJ/Y2Qkd28X8FWmfKorkxvqs7esF8O3EXP69sqUz7V2bEp
ZYdg9Pwh445zha0yFVCd7Y5f6YBeMGRyy3atHdHZbrsRmAqFjFv+1gmd3V8u
h53RC4fM5Bfd/rsCW2UqEjIr6mTYNaULujIVDZm9k38dU74rOvvs0Z71zsBU
zLdlP84mOxKgF/dtlamE6spUUnVlKhUyr3eWNy7o7FLuhg+9dMg0cB+AoStT
GdWVqazq7G5uA1H0cr6tMpUPGfu5HHCFzl4oy9U/Qa/g2yrTWyGzRcbVHujs
o83ciUvxvWLI8HCToGdPdGWqpDo7+cUjB9P3Qq8cMvndAzN0ZaoSMjXcB/jo
7LY8zSfvg17Vt2UPluPqo72ab8t2x9H1RX/bt1Wm6iHjtv/vh65MNVRXJhMy
AdnuLtrZ7vO5/ug1Q8a9HoCtMtUKmezuBR86u4LbEAe9tm/LbuI2zEev49sq
0zsh08sdUIrOHr//7TnVB6HX9W2V6d2QWZryRttr0c6W01Wn/Q+9nm/LPvVN
rb8qDEav79sqUwPVlem9kHl44fbas9GuTO+HTFq34Aid7T7HH4Le0Ldl15XX
+dHeyLdld37x7W8jhqI3Dhm+WZmYfxg6e+7kx41iYWri2ypTU9XZm44uyzho
OHoz31aZmodMXLamf+YYgc7+u5P8C6K3CJnEbkE1OjuP23ARvWXIVI0/kCi+
s932w6PQW4XMQNkex6IrU+uQmSrL46Kd7S6fo9E/8G2VqU3I7P+mYyTBGHRl
+jBkzl+QGxp0tlzdm45Fb+vbKlO7kJGnXU+iXZnah0yZX9JdWfIFujJ1UJ39
/oudq+uNQ+8YMvK10V3YKlOnkJHdBOZ9ia5MnUNm8dG9T2uMR1emLqorU9eQ
kY+t/op2ZfpIdbZb7j8BvZtvq0wfq86+K+P/RPTuIZPSbbiNrkyfhExBdwAk
OltOeys5Gb2Hb8tuv/+zLn9Ee0/fVpl6hYyctjxyCroy9VadPavZ4X8KTEXv
EzLrvxmxKQJbdkiOn5yG3te3VaZ+IeOO15iOrkz9Q8Zt9xjtyjQgZHLK53Uz
0NkV5fH8TPSBIdOsjuyIh87uO7lsjo++Qv80ZCYePcc/IejsZdkmr9gE06CQ
2d1JFvSgs0+vlA3e0P8XMo9uy4Ev6Mo0mOdVd2A2ujJ9pjq7+OfXxzyN9iE8
v+7/ut7Suehs97n7PPShvq0yDVNdmYarrkwjeD6W5QvRzp7/jfwP/XOefy/I
AmF0tjzN/Rumkb4tW1aPzFiAPorn1V8a/FRpITo774tH/7sAk/Vt2bI7xoRF
6KN9W3YbOV57MfoY31aZxqrOHiTHnUX7F74t222f/S36OJ4vZXueJejsg7I8
EKYveZ6Uy+l36Gw5HTH3UvTxvq0yTQiZrJ8n7nEw2pVpourscvs3lOz7Pfok
ni9TdniYaRk6u0ezFNt3wTSZ58tv5IEHOnvJBfkgGX2Kb8veUShtys3RPpXn
zb47Drdbic6+L9vlrUKf5tsq03TVlWmG6so0U3Vl+kp1tlt+H+2zeH6V8Xs1
ujJ9rTq7zuTefz2L9tk83x7Nuu77NejsYe6FC/oc35Y9u5PsMII+17dVpnk8
n66UAyXQlekbnldvywHE6Gy+uZt4A6b5IZNIjkv9EV2ZFqjOzi3Hp6xHX8jz
qmw/Clu2+zzwJ/RFPK+6BTbo7MkXZMM79MW+LVtWR9mN6N/yfNpX3uigs89u
/mLEYZiW8Lz4vHStIT+jK9N3PD/WOZs0z2Z0dqnJEyMxMC3l+e9ohVn9fkFX
pu9VZ3dzC2jRl/H8J6ctwZa9UD5v34q+nOc7eX2+DV2ZVqjOdv+4aF8ZMrdH
1KjQYTs6O/n+m08T70Bf5duy5WOzddG+2rdl13AXPPQ1PN+5D1jQ2YMvLEy/
fBf6DzyvuePh0ZVprerKtC5k1rnj6tDZAbf9OvqPvq0yrVddmX5SnR2/3Q36
Bp733HJCdGXayPOfu5yjsyu4ARx9k2+rTD/zvOc+KEZXps2qs3u5DevRf+F5
b6UcCIvOXno70Yw/Ydri2yrTVp7/KsiO0ujKtE119qkR8kUf+nbfVpl2qM5+
+Fuyi0eifSfPf/zbfmgMOttt5xdA38XzndvABF2ZflWd3VnG8yD6bp7/Cn28
K2sInT1Pvs6GaY9vq0x7VWdv2vxrvU/C6Pt4vnveM026WHT237XliyL033i+
m/wbT0zo7DxuAQL6fp7v3AZs6OzW7oAk9AM8z7kD69GV6SDPd/L522F0ZYrh
eU4ejx9BZ+8fISeeoQd4fvutgOzYG9/ZT1PIFxfoQd+WncktOEUP+bbKFFad
XcZt8Ioe69sqU4TnuQt/nK12HF2Z4nieKzT2+yvRrkyHQmZs31I9pvyBrkyH
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
W/ag4XIiJfoZ35Y9fd+/siNYfD/L85YcpzwDXZnOqa5M51VXpguqK9NFnudk
e+VoV6ZLqrPd55gz0S/7tsp0hec9eb0Y7cp0lec794E8OrucO2AL/RrPd/xP
vw9bdk++W57/Nfpfvq0yXed5r5acwIeuTH/z/Dfxp4t/RztbVuPOnIN+w7dl
n8iSvE/lueg3fVtluqU6+34HeSGL/g/Pc26DHXRluq26Mt1RnV3EHTiKfpfn
QVnOA1u2+/U2H/0ez3/7MqQtvACdPSe5nECGft+3VaYHqrM3NJEdS9Af+rbs
2LlZOr2xCP1f31aZHqmuTP+FzfVzssALnZ3IbbCI/pjnS3fgOTq78s+Bwb/C
9MS3ZbeU45qWoD/leVK2i/oOne2Wx8L0zLdVpuc8X8rt/lJ09r4s8hce/QXP
jx3kjSq6Mr1Unf14uduQOb6/8m2V+QLkd2VKEGsy/lN02fNoV6aEqrNLlT/R
Y9ly9ESxpsHwsaXeX4HO7rav1L8PYHot1oxOfmb7gpXo7IVyXOMq9MS+Ldtt
dxntSXxb9jH53GQ1elLfln1bHretQU/m27Llp/FStCf3bZUpRayRaW7SD+jK
lDLWmGcz85Zdi65MqVRXptSxpm2t6tdPRTtbVp+PXoeexrdVprSqs+VryiI/
oqfzbdnrssgDNfT0vi1bdh8csh49g2/LdsdV/4T+eqx5Jdtdw1aZMsaa7PK5
6QZ0ZcqkujJlVp3tXtduRM8Sa5rse//0btgqU1bV2b2TP1nSfRN6Nt+WPb7J
8o/T/oyePdYsnSsvYNHZv56TDXLQc/i2ypQz1pwqICcGoCtTrljzsLd88Yiu
TLljTdqfE9ZutQVdmd6INcWe/ZjsZbQrUx7VlenNWFNXjqPYiq5MeVVXpnyx
xm1XsQ1dmfKrzv5clmNFewHfVpkKxpp58ut+O7oyFVJdmQrHmk0dZENDdDb/
y6+5BVORWHPj1kf9v96Jzk5cXr4oQy/q27LzDJcnDOjFYo18jD75V3R26+SZ
x5fbjV481gx0fwHR2fHHZ6GX8G3Zq912VOglY81+t3wZnR0/XqGXijXyNjTv
b+jKVDrWZH4Wvh2MdmUqE2vK1JIJC12ZyqquTOVUV6byqrPla+VsB9ArxJpP
3A09OntsFvkgC/0t31aZKsYa2f0+XQw6W06D2gpTpVhzXI6fDKCz78p2m0H0
yr6tMlWJNe7znWhXpqqqK1O1WFNIHreG0JXpbdXZtZLLHTB6dd9WmWrEmvbu
ARw6e4j7oBvdxJqvz8mBVejKVFN19voCV8YujqDX8m2VqbbqylQn1oR6z6hf
Nw5dmd5RnX11U7W0t6O9rm/LTvDs+u+zD6G/69sqU71Y447fPoyuTPVVZ7vt
xaO9gW/Lbu5e6KG/59uy+7oNbNDf923ZEzvIAZnoDX1b9rLl9wd/cQy9UazZ
c2txteK/o7NPl3sv4e8wNfZt2Y+G/Rcz/Dh6E9+WnWHf91Pz/YHe1Ldll0gu
OxCiN/Ntlam56ux6bkEZeotY09VtsIeuTC1jzSh3oDe6MrWKNfNl+45T6Gy3
nO1P9Na+LdtdPqL9g1hz62niHZ1Po7Nlt4DkZ9Db+LbsvO4PBP3DWFPdLShH
Z7dxGxSjt/VtlaldrJHT0VZFO1tO821yHr19rPnh1o68j2HLdsd1XUDvEGvc
9lsX0dkvZHk4TB19W3ZWdwOL3inWlIv/wCq+sxu5AxLQO/u27J7nBkyadgW9
i2/LHlcgd5O3rqJ3jTVLeocynYMte+emwafHXUP/yLdln3ia97sSf6F3izX3
ax76+DhslenjWOOO27yOrkzdY00R94E0ujJ9EmvquAOQ0Nnu8esN9B6+LXvY
8uK1c95E7xlr5tw6mWw/bNkbyo2L63ULvZdvy44dVubr1/9B7x1rru8922YH
bNmJ3Asu9D6xJrfbEAWdXdkdEIneN9a0lOOs76Kz+8v22/fQ+/m2ytRfdWUa
oLoyDYw17nPdaFemT1VXpkGqK9P/VGevlNe199EH+7bK9Fms2fe0xvgn0c6W
3dq+e4A+hOfdCbJAB52d0W0whz6U51l3ADS6Mg1TXZmG8/zbYVFX8wid3W15
/SLXYRrh27JH3/r39vT/0D/n+bece6MV39nuuA+YRvq27GOy/cYT9FG+rTJZ
nn9ledVTdLb7dQ3TaN9Wmcaozs4/99WMkc/Qx/q2bHPuh1YFn6N/wfNtgQ9y
xsFWmcaprkxfqq5M43n+7S0nsKAr04RY89Wmn1bmeomuTBN5/n3ars+BaGcH
asoNFvok35Z9eYJ8gPVbfJ/s2yrTFNWVaSrPy3JcWLQr0zSef2W7rwToyjSd
52FZHp8Qnd1UxleYZvB8eyvD8baJ0Nk8nMxP9Br6TN+WvXSYfIGL/hXPs3vl
gRU6+1Qy+aAafRbPq43lgCN0Zfqa59W5OT9rkBSdXexcoNp9mGbzPCnHcSZD
Z7vtPpOjz+F5UD7/gi17njxeToE+l+e7mvKCCZ0tp+tcgGmeb6tM3/D8d0gO
HERXpvmqK9MCng+zFOtZOjW6Mi3kebHDiVIno51dbfnYf0elQV/k27Jb3yq1
o1Ba9MU8P5Y7Yw/Blu2O006H/i3Pi7J9dnp0ZVqiOnu/fJ4c7d/5tmz3+jUD
+lLflv1sTuX2mV9H/57nyXNX8/4KW3aZAl9d75YRfRnPe72r/5g6Ezr7k003
Pt0M03Lflj32qfwD0FfwfFdTFtiiK9NKnvcmyAat6OzjhxZMapEVfRXPc3J8
CGzZbjuPbOiref6S5U3Z0ZVpjersWnJ5ifYffFt2+3JPPl6QA30tz2PuhgJd
mdbx/LVXPjhCZ69PJhuyo//I81Fj2YETnX1tTqval2Ba79sq00+qK9MGnpfO
JeQ7EnS2fK1dJg/6Rp5/5Dgu2LKby/ZZb6Jv8m3ZfeMfQMT3n3m+kfEJtsq0
WXVl+kV1ZdrC89IEOfAHnb3n0Nb+efKjb+X5KLPsSIiuTNtUZz9qLytW0bf7
tsq0g+en5bv4NyS6Mu1UnV3iVo/xu6N9l2+rTL/yPFUuc8PuhdCVaTfPU+4F
Droy7eF5ym0Qgs5222sWQd/r27Ld52ZF0ff5tsr0W6w5Io+Xo12Z9quuTAd4
Pjv7xp2WxdDZSQvICkL0gzyP9ZafGHRlilFdmQI8v23KbxqWQFemIM9rbgEH
OnuQ2xAMPeTbKlNYdWWKjTUzJsgBxujKFFFdmeJUZ/9w6HirW9F+iOdFOV68
NLoyHVad7bYXL4N+hOdH+Xwctuys8jq9LPpR35Zdzv0P/RjPj24BKboy/a66
Mh3n+dJtsIquTH+orkwnVFemkzyvJqv0RdEK6Mp0iufXxlfqH4129s45M9IO
ewv9T55Xz1Y7/mZFdGU6rboyneF5Nr+cGIjOlt1qB1RCP+vbsou4Gxr0czy/
ug+M0JXpPM+vbgN5dGW6EGuGy+1CVXT2nEP3q22F6aJvq0yXVGdvyPxtwk7V
0C/zvNv+vUDSt9GV6Yrq7OvL/pu6Ptqv8jx86/vmraujs3O7Bxbo12JNFfeB
Mjq7pTtwBv0v35btjleL9us8X8r2ZDXRlelv1dkrZTl4LfQbvq0y3VSdvU/G
/Wi/5dsq0z88r+ZPMnp2bXT2414b675dB/22b8vO6F5ooN/hedRtYILObuAO
DES/G2s+ntC1/RnYskcfSpvvi3fR7/H8mXnn9WL10NnuOFKY7vu2yvRAdfYx
2R60PvpDnj/l87gG6Mr0r+ps93g72h/FmgJuAzB0Ng4gju//8Twoq8Fhy5av
P3s2RH/s27K/mhM6nb4R+hPfVpme8nx4dvB326JdmZ7xfJg/X/fOjdGV6bnq
bDktJHkT9Be+rTK95HlQjhePdmV6pboyX2CM2468KTrbfS7fDD2Bb6tMCSOm
qbyej3ZlSqQ6u7f86zdHfy1ixmc+FfcfbNlL24/7+tsW6Ikj5tdlZT58tyU6
+9RNuSFATxIxD8vKBx/oypQ0YtK5DdHR2cX2Xup/DaZkEVM3meyAj852x4u0
QU/u27I/l+1hoj2Fb6tMKSNmniyv+xCd7W4v2qKniphDvWQAR1em1KorU5qI
ubFRPvhFZyd2B7Kgp42YPDXvdY2FrTKli5hqExYVGdQBXZnSq65MGSKm9aH6
d3J0RFem11VnD8wsX4yhZ4yYqe3liQK6MmWKmNVyfFhndGXKHDFu+7ZoZ7vl
5l3Qs/i27GfyeKArelbfVpmyqa5M2SMm895XrTZGuzLliBj5OvrDj9CVKWfE
yO49Cbqhsz+Z89qq1TDl8m2VKXfEjD37U5+mH6Oz5TSeJzC9ETHbe8kCBnT2
8Y2ygRd6Ht+W7Y5bjfY3fVtlyqs6221v2gM9X8QUks/FeqIrU37V2bXk8X60
F4iY9pnlxHZ0ZSqoujIVUp09tL3sOIte2Ldlf72sV8Hz0V4kYtbflAWk6OxQ
WdkAFL2ob6tMxVRnXxva/7M/or14xCTYm/Ptkf3QlalExORMFkxYsD+6MpWM
GHecerQrU6mIaS7bmw9AZ7vP7weil44Y97odtspURnX2cvm/51P0shGzZ6Ns
+I3OPv1kZM+dMJXzbZWpfMQ8MsVKf/Q/dGWqoLoyvaU6O8OEE/+mHIxeMWJK
HBq7YxNslalSRA7HGt32M3T2R3w3lGgIemXfVpmqqM4e5R44oFf1bZWpWsS4
40yGorPddjwwve3bKlP1iDkiyweHoStTjYi5JbdPw9HZsnvWPZiMb8uW3Uq/
GYFe07dVploRU31OdR5p0dlyutXfMNWOmEHuBQC6MtVRXZneUZ09o5dsKIJe
17dl/7BRDmhDfzdiDj5Z0GSCRWe749BGo9eLmBey3R1s2W65/xj0+r4t2z1e
GYvewLdlN27/pPihaH8vYnq6F/boyvS+6srUMGLG3ZQNytDZS8rKCYXojXxb
ZWqsOnvnUNkhDL1JxJzY0yp55vHoytRUdfb9pIkO7Yr2Zr4tO03j9V93m4De
PGKKyPGqE9GVqUXEuO1lo12ZWkaM+1xuEroytVKdPTx+g9D43tq3Zc/ZmGrA
2mj/IGI2PNn6Vosp6OxYt2MSepuIuT4+/b7vp6Kz5b/2vWnoH/q2ytRWdbZM
Gw+ivZ1vy67iLljo7SOmpfvAA12ZOkSMOy4+2pWpY8S47dhnorNXyufqX6F3
iph9sjwAtmz3f/8s9M6+LftJI3mDjd7Ft1WmrhGTcc4Qcyra2aXcQIv+kW/L
buA+yETv5tsq08eqK1P3iPnYHSCCzh69sUjrIXPRP4mYhU+O58wzD5291Yy5
FANTD99WmXpGzDE5PuUbdLbbPmg+ei/fVpl6R4xbDhjt7ALuBQF6H9+WHb+B
BHrfiGnrDihDV6Z+ETO4bKUGHRahs78aeiVtksXo/SNm3Z4Zx9fBVpkGqK5M
AyMmkPTtBS2/RVemTyPmSiN34kd8Z7+aPbvg8iXog3j+dC/k0ZXpfzxvug3B
0NlN3YGn6IN5npTHH9+js8c/uZ/wFkyf+bbKNER19vfm28CsZehDef7kn96q
y9GVaZjqyjSc51Webi9HuzKNUJ0tb58mr0D/3LdVppGqs9O5BX/oo3xbdjG3
ISi69W2VaTTPxzdX9RyzCl2ZxqiuTGN5fpbjVFejsz+X7Xdh+oLnY/k8cA06
270u+gF9HM+7jZK8G4StMn3J8+9s+YWOrkzjVVemCaqzE7sPKtAn8rzsNgBH
V6ZJqivTZNWVaQrP073kCRk6u/XGrvnSrUef6tuyBz5J+/eWaJ/m2yrTdNXZ
08zOHzv+hD6D52k5fn4DOtttTw/TTJ6fZTuBjejK9BXPw7I8ItqVaRbPw+7A
D3Rl+lp1ZZrN8/LNA00a/YyuTHNUV6a5qivTPNXZDcu6JxTx/Rvflv3J0Nxn
Fm1Gn+/bssfuCX33zi/oC3geT/pZ939gq0wLVWdvb5SvxOwt6It8W2VarLoy
fcvz/Wx5QI+uTEt4fj8jG1Sgs91xNNvQv/Nt2YVke6Ht6Et9W7ZbLhnt3/u2
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
zIu92FyZ2sLb4zgI5sUezjuOwXz11FbsxF5srpI8nPefm3mxh6sNP/l+z7XM
10htxU7sxeZqyYsdHLZdFvuKebG5Jtt2jw8EmIeHxgvMzMOTXw8LppiHP97d
edR7tLk222ZWO71Vmw3Mw7/1/6TMf7SDC4d1WRuZF5uaqa3YiT0cx1ttYv66
bNsgHE+lrdjBHeILEubFplZqC/ePA2iYh8deEBZCMi82tVNbsRN7eG6vB4ZM
yGL++my7Zl7ZRnWymYd/Ory6yM+0E3uxqZPaih38X91+GSNzmIfLDj//5Rq5
zNfNttes++qubbQVOziur9zMPHxfHIjHfL3UVuzgEeF6Ce3h+LhpK/P10e9W
q1yr4tfMw1v75/z3Je3g8Nvl4W3Mw6E7Pucb5huktmIn9nCV5mEDDvM3pLZw
o3gAlXm4SxzIy7zYNExt4XBb+RPawZPCOvDvmIcXhnHc3zNv0c+G65a0hfeG
110/MC/2YnNjait2cIHhdZ48lp8Xm5tSW7hC/ABhHr4+XqBhXmwapbZw27jg
gHm47+u/jp/6M/Mwmrf2jXYwf3NqK3ZiD79VrdH5v+XnG6M/7X/g55d2Mi92
Yi82TdC/fjr1nbq7mBc7OK77oD1cOjagzDdNbcVO7OHq8UIr883Qz+YtZMrL
ix3c84JwY495sWmOfrdX6NiZFzuxh6fOu6NkNm1uSW3hRYePb358H/NiD+fU
nTvlwl+Zb4H+9+n2Xb+iLVwkvrBgHr44DhRhXmxuTW3FTuzFpiX62bgwknm4
YxgHtp95sYfjcdXfmb8ttYUnhK+ftBN7sbkd/S0+TbscYF7s4PC0qvBB5uHw
dnw+bVqhP20WDnAwD5eLA+GYF3u4ZlwIzfwdqa3YiT0cpo+1PMx869QWfqBX
mFjNPBzXef7JPBzHcR5hvk1qK3ZiD68I12vy823Rj4bHR38xL3bw4a/CgU7m
xaZdaguXiAN4mRd7sWmP/vXOx1998W/m4cavX3L3tf8wD3fdnXXRt7QXmzuz
7eBqYaIu82IHv9o/nGhnHv7w0y3hEy4v3wH9a1iXfYx5sYP3hXHix5mHC8UB
/8zfldrC8XXbCebFXmw6prZiB9e94NpW5U4yD7fv9WOZz2jTCf3tvBe/7WPW
5uXFDh59uPbMM0/Jsxebzuhn64YTuMyLHbz66dAQMi82d6e2Yif2YtMF/fJX
4UIt82In9mJzj+Thf0qGhUjMi73YdE1txU7sxaab5OEyd04acmch5uG4/oT2
cBzPcSrz3VNbuHc4TlSYebEXmx6pLTw8/Pjm58VebHqin//0j7teP415OJzG
blKEebEXm17o35uFfwLm4QPjwkJK5sUeDtP7GhRl/t5sW/mCVrV201bs4Bt7
Hftv9BnMi03v1FbsxB4O2yprFmO+T2ordmIPx3Vw+fn7Ult4YhgvVpx5sReb
+7Pt/HD8uATzcPz6TzuxF5sHsu2ukmHhNfOwufPDHhefyTxc/vUuYaREXl5s
Hsy2+Jd94NFSzMOtqy3++LyzmBd7sXkotRU7+KH+PZ78PD8vNg+ntmIn9vDI
T0va+0sz3zfbvnlKOJDKPLwqrIOlndjD28P41TLM90tt4Xi96RzmxR4uFR4X
0uYR9Pu9yu3oUJZ5uOm8Ne+Yc5mHux9+5KF3aS82j6Lfj7/gmRc7sReb/tl2
8tPhwgrzYgd//FVYQMC82DyW2oodnFUyTMRhHv6tfThBwPyA1Fbs4LiO/Xzm
xWZgagvHce8VmIcbhOvTtBebQdm2Q3h9eAHzYif2YvO45MVO7OH+sWFm/onU
VuzEHg63n7/Pzz+Z2oodPLdZWPDEvNg8ldqKndiLzeBsG6Z1XlmJebETe7EZ
InmxE3s4bBvYkp8fmtqKHXysQnhDyjxctletry65mPlhqa3YiT18zbwdYzbm
5122bXl4bJvHLmFe7MRebJ6WvNiJPXxffKHB/PDUVuzgEU/HgS15ebF5JrWF
43G6ysyLvdiMSG3hZeHX62XMw1vbh41czIvNs9n20PTXjnSvwrzYwcV237ys
6OXMi81zqa3YwVWqHXIf5ufF5vls26j/9CYdqzIvdmIvNiOzbZd44IN5+Ik4
wI55eFKzsACdebF5IbUVO7GH4zrA/PyobBvH113JvNjBe8Px/+rMwwVC+0qb
F1NbuMK8k/1fu4p5sReb0dn2+sPv1bE1mBc7uG08gMy82IzJtn3jwF/m4VFf
LRxV+xrmxR5+u+TdrX6kzdjUVuzEXmzGSV7sxF5sxkse/gyf9s9fy7zYw+Hp
YvWazE9IbcUOjuuUaS82L2Xb0mEc73XMi53Yi83EbFs9fsAwD8fH77SDe8WF
D8zDrtmqIRWuZ/7l1Fbs4LgthPZiMynbhm2BD9VhHs6p8EXG2XWZF3t4f89+
YcRHXv6V1Fbs4CLzzu/Ysx7zYvNqagtfHB9IMA83jBekmYfj+oEGzL+WbeM4
gBuYhyeE1920g+e1r3ysdUPm4bXTcz77lzaTs+2OXUOfn2WZh09ccUXLW25k
XuzFZkq2LRdfeDAvdmIP14wDY5ifmtqKndiLzbRs2you6GQefqDZdz320Q5+
btzIyyfczDwc1x01Zn56ait28IowDoj28LZwPK4J869n2/jrpinzYgeXiAck
mBebGaktXDUOgGMebhwXmDMPd/3qV3xDZf6N1BYejG+jg25hXuzhV9s32nFB
C+ZnprZiJ/ZwPL2Rn5+VbcPp9IdvZR7eF9YRtmQejuPxaC82b2bbeN3gNubF
Dq4X2s3bmReb2dm2fbN4YyIvD4dtk3e3Yh4O2+ML3cG82LyVbd+tcGLKPNqK
ndjDq3vO7dq2NfNvp7ZiJ/bwD++FH0jm38m2//4RLhgxD5eJCwaYh+N6ZNrD
cdxuO+bfTW3FDu4drhO2Zx4eHh6302ZOtp0+vdjYl+5kHl6ya0mbuh2Yhzdf
ERpE5mE02z++cBfzc1NbsYOLxgVIzMOVT7n//m9o815qC9/YLGyEZh7uPO7z
I1U6My8281JbsRN7sXk/2w7a+vCyrPw8PDGM77+bebEXm/mpLRyv83dhHo6v
y2kvNgtSW3j3H2HgCfOwiQssmYfDX20VbRZm29Ad9O7GvNiJvdh8IHm4dcmw
0ZZ5+KH2YWId82LzYWoLh9sNXXowD8/etaVO4Z7Mw6uuiAcM8vIfpbZwXE/U
i3k4jheivdh8nNqKHVwqHGe7l3mx+SS1FTuxF5tFkhc7uFr4ddibebjpuB+/
/ZM2i1NbsYO7b31x5rQ+zMNDK4SJXcwvSW3hyT3DiR3mxV5slqa28MfvhQOX
zIu92Hya2oodnPVHGDDLPPxbnX1DdtJmWWordmIPF356UqMXH2R+ebaN6x8f
Yh5uEMYZ0g7uEK4HPMy82KxIbeHYXvVlHh63K/xAMg/PvSKcQGB+ZWordmIv
Nquy7ZpHw4B/5sUO/mnp0X7raC82PtseM7NrPfIo82IHl23W6ti5/ZkXm89S
W/iaccc+87QTe7H5PLUVO7jl1nef7/MY82KzOtveF9Y9D2Be7OA4bpj2cLw+
OpD5L9Dvh8f/g5iHt+K3zQLaiT0cuu87H2d+Dfr1r7ocOEFbuErJMz55+wnm
4XD76LYnmYfD7f+/aPNltn0yPsBmHp50RRgwwrzYi83a1FbsxF5svpK82MFh
u8P+/Dwc1yUMYX4d+vMwXmEo82IHFwjHF2gvNuvRj48r9+7oYczDdbaueaim
Yx5uW+HRa7+jvdhsQP8dDyQwL3bwqPfCADfm4bf/CAutmd+Y2ood/FmdcCOf
ebHZlNrC37nMkhePYB4+uvapLetpD5cO65ieZT4jtRU7OI47eo55OB5vpE1m
agv3igcumRd72MWBs8xnpbZiJ/Yw/uYGLc3PZ6e28KKlVzfo9gLzcI4JN5aZ
h/c3DU9EmM9B/zqu1tgOLzIvdvAlW3e0MaOZhxvGPzDM56a2YgfH9Y5jmIfj
eEbabE5t4QnhusBY5uF5oR0bx7zYbEE/7P535HfawjvXvrbslfHMiz18okTo
yJjfiv62/aEme2gL14xfqJkXe7hVvIDL/NepLfxAXJDDvNiLzTb0t4/OuvvZ
l5mH4/rnScyLvdh8g/42jEOmLRyvR77CvNjD8XHwq8xvz7Ylt56ss5G2cNX4
gI55uHEcEMK82Hyb2sJd4wJD5sVebL5Df/vHwlYPTGEefrXO3eeUnso8/KE7
/btPaS8232fbjLWfzOw+jXl4X4kwsZl5OI77p73Y/JDawnGcw+vMw/XigDDm
xeZH9K9xoTPzYif28COPrmp0xxvM/4R+dukDp/9DW/hdc27mGzOZF3t4ddMv
Xm42i/mf0Y+O7dfxIG3hf7ecHybE5uXhMvFAH/NwjTgglfkdqa3YwXF90VvM
i81O9KdhfNHbzMPxOCHt4Pjr8R3mxWZXtl26Nuf56u8yL3ZiD28uMQxfQZjf
jX61XfgXzDxcNF4QYF7s4cpx4Dnze9CvXhH+iZkXO7GHw3b4CvOY35vaip3Y
w48vHXngi/z8L+g/wzrD95mH4zjB+czD8ToB7eHdoR1bwPw+9JfxAiHzcPm4
QIV5uNZ7N9zZ6QPmxeZX9It//Hp+wQ+ZFzv4oTqv7phLe7H5Df2ia/Ru64+Y
Fzuxh2evPfDQv7T5H/rHEtOunfUx82IHx3XInzAPx3HFtNmPfi0uiGMerhYe
by5mXuzF5vfUVuzEXmwOSF7s4KaPhhM6zMM9lr61ZfwS5g+mtvBQ03rq9UuZ
hyc3PdH1J9rDH4+dW3nkp8wfSm3FTuzhrC3hBRrzf6S28G/nhwFazIu92BxG
PxcXBjMvdmIPX/RepwaXrWD+T/R7YZ0BbeE4nmAl83B8/b2KebE5ktqKndiL
zV/oD8P0ofw8PLfE0nIPe+bFXmyOprZiB4fp9WU+Y15s/k5txQ4O251W5Ofh
YztX3N/rc+b/SW3hslfcX6P4aubhax4NG92YF5t/s+1tSz9f1vkL5sUOvs+E
N2zMw3nriZj/L7WF88Y5MS/28LJ4/JH5Y6ktvDV+fDEPH+qx8e4WXzEPF3/v
8YsP0+Z4ait2cJU/Ltk3ZR3zYnMC/WGdsLGJebETe7iLG/LYr7Q5mdqKndiL
8QXcPrn28rovbWAenlQifCFjXuzF5pQcG5ZX/kxbOK5L3MS82MN7w/jGDOYL
pLZwvC5BOzi2e5nMw3WW/jizShbzBXNsWxM22DAP920abqwzD48aGx7AMC82
hXLs2+G3H23h0L32zWUeDm+Dym5mXmxOTW3hv+dOOn0V7eDSYZ30FubFpnBq
C8dxx1uZh+N1RtqLzWmpLdwrPD7+mnmxF5siqa3Yib3YnJ5jXXwBxbzYwWG7
2Pu0F5uiqa3YwYunhQW6zMM5O4/WOk6bM1JbsRN7sSkmeXh/1dnHZm9nHi7y
aKvPb/2WebEpntrClyw99vyftIMbmjktp33HvNiUSG3hjk3blb75e+bFHo7r
I2hTMrWFJ4RxCT8wL/ZwfF38I/Nnprbw2h6Fq+6kndjDO+d+eGDUT8yXSm3F
Dj5xqMsn1/zMvNicldrC5eqc8dR22ok9XNMttsN3MF86tYVbxb9h5sUefiAe
wGf+7NQWfq5dGBDOPDxrWp87K+1mXmzK5NgVYf0TbcVO7OE4/moP8+fk2Hgc
ci/zcMnw8U07uKr58to+vzAPN45f6Jgvm9qKndjD3eKFQObPTW3FDh4cF6ww
D4e3waf9xny5HBtO2y6grdiJvdicJ3k4Y24mvhEyD+879NTUE7SH4zrI/cyX
z7FxPOXvzIud2MP14gMb5s/PsbH9PsA8/EhcmMa82MNjpj3bYD9tKuTYd3de
XXDSIebh1VXDiXzmxV5sLsixPzwSPpGYFzv43yW12o4+zDxcxuwsV/NP5ivm
hIdRP35LW7ETe7G5UPLwrXEgE/NiLzaVcmzvuICWeThe76QdHB93H2VebC5K
bcUOXjr3f8su+pt5sbk4x24+9NrT62krdmIPH7g+/EQwf0mOLeoOFTvvX+bh
yvGAC/PwjXFgJ/Nw53Z/3V3qGPOXprZiJ/ZiUznHPj5t1sVL8/NiJ/bwxJ23
7et6nPnLcmxcV3GCebGD4/gH2sO7w+v5k8xXSW3h+L83X+XlxV5sLs+x5eOB
7zxbuHYc6M282ItN1RzbekuhO47SFg6ny2cUYF7s4XCbtUlB5q9IbcUOnj33
9Fm/015squXYVYc+6f1KIebFTuzF5socG6aj33Aq82IH/xXWa9FebKqntnCp
eGGPeTgedzuNeTh+HaDNVTm2x7RVpz9bhHmxg4fufCCz2unMi02NHDu56rmT
NtNW7OCPH/mi4+CizMNZS/pdeMkZzF+dY387ef6eDbQVO7hw3oX/vDx8UVyY
xvw1ObZBWA9JWziO1yzBPByvP5RkHh4XHifQ5tocO/dQTsvuZzIvdmIvNjUl
L3ZiD6+5fljpoqWYvy61FTuxh38eFl6oMF8rtRU7sYePfRkGGDFfO8eWjQtV
mRc7+Jp2NarOob3YXJ9jb5v23YFWZzMvdvB9O0d+8jft4bh+ugzzdVJbsYPj
OO9zmIeXheuotKmb2oodHF8PlGVebOqltnB4m9LwXObFHi4eF9wzXz+1hats
uaHCuHLMw+G2d63zmBebBjk2TB/6gbbwk3MbPfxceebFHg7T/Kufz/wN6J+v
n/bPFtrCG4eFA6jMw3vD+osLmIfj+AnaNER/HF53V2QerhP+313IPNx251tT
v6C92NjUFu5btXW3BysxL/Zic2OOffGRE5XPvoh5+O0l4QOaefizk+3xFY95
GL+cHz/jEuZvSm3FTuzhv8csaPBRfr5RaguX3tKpYKdLmYfj+qvKzIvNzamt
2Im92DSWPBzHR+XnxV5smqS2Ygf3Csf/LmNebJqmtmIHx683+XmxaZbawlOv
Dw9YmIcXDwsX+JmHc74MC9CYb57awvuLr6wxuSrzcJF29/9lr2AevmTaOct/
oc0tqa3YiT3ccOfnT4+vxnwL9MdVwxMf5sVO7OGBYV0nbW5NbcVO7OEJYdxl
deZbprZiB8frBlcxD8fHJ7S5LbUVO7EXm9vRb4/ZePGwGsyLHXxi8+P7Kl/N
PBymiWXQplVqC1/XI2xEYF7sxeYO9Ndzh9S94FrmxQ6O2/JoD4fluA/VZL41
+ulhYWAi82IHrwjrsmkPx/HjtZhvk9rC8TpqbebFXmzaot8Or3toK3Zw1Z0/
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
wm+EdfWLmBd7sVmE/j6Ml6ctHK+/LmYe/iO8nlvCvNgsTm3h4rFhZV7s4Srx
wibzS1JbuFFceMQ8fE+Ylkl7sVma2ood/GS/MCGDeThshzpnOfOfprZw2J67
knZiLzbLUluxgzc2HnzZvSuYh/eOrrK/+Erml6e2cFwnQzv4gjgwg3m4TlxI
yfyK1BaOP+60g/sefHZd28+Yh1+sHW64M78ytRU7sYffHhreaDC/Cv3+mlHn
3bqaebETe/j7YrV/Okwbn2P/bhMOADAPl44DrpiHq8eF3czDt8T1bMx/hv49
jqtiXuzEHs47rsv85+jvY/vAvNjBixvHJ6B5eThndOPcb2izOrUVO3h/bjgA
yDx8ehwAy/wXqS18SfdbLsmmHdxwzl/7Ht/IPBx+e164ifk16OfD0xLaip3Y
w3EdbgbzX6J/D+NSM5mHvwrXgWgH7wyP97KYF5u16NenhAH6zIud2MNhWuti
2nyV2oqd2IvNOsnD111+6vddcpiHW/X7YFbhXObhsL15Pm3Wp7bw8ydOr95+
M/PwrMZhAwDz8IrRoUFifkNqK3ZiLzYb0Z+HdfdbmRc7sRebTejfw3j5/LzY
ib3YZEhe7MRebDIlL3ZiD5cM15O/Zj4rx8bXjduYhxsfXDXpf7SDu9V+sNPL
3zAPDx56bqX625nPRr+/5os9O2krdvBHxcIDZubFJie1hTPahBs/zIs9vG9K
WKjIfG5qCxfaMeD48O+Zhy+8/KJw5DovD9cL62hosxn9fhjP8SPz8KPhONNP
zIu92GxJbcUOHhN+HeXnxWYr+vfR4YU28/Dq3DAwi3n4x/PCjQHm4X+7hW8c
zH+d2sLh28WZu5iHw9PLJbQXm22prdjBt9Z+4cauu5mHw2nUInuY/wb9eVhH
R1uxE3ux2Y5+PIwP28u82MFLw/Fk2ovNt6ktHNuNX5gXe7H5LrUVO7GHw/aW
2/Yx/31qC59xefjEYF7s4bBN/fVfmf8B/friV2s2+Y15+O4Tjf7dTzuxF5sf
U1v48fgDzLzYi81P6OdHhwsNzMPzc8NAe+bh9WH97e/Mw7vD+M4DzP+c2oqd
2IvNDvTz4fpTfl7s4PPD49mDzMO1a799WbVDzO9E/z20NT7imRc7sYcfig0K
87tSW/iFYvECZ14ent0mLBRiXmx2o7+eUrBQ/z+Zh7f/vGDdeUeYh/+qEibG
MS82e9Av9wsn5JiH4/j4o8zDzcL1a9qLzV70x/GBLvPw0DjQgXmxhyfnhoWD
zP+S2sKf4K/e4V/mxR7Owrdr8x/z+1JbODx9f5d2Yi82v6a28GkHz2nW6hjz
Yi82v6G/rh1O/DAvdmIPh9udM44z/7/UVuzgDvGFMvNisx/9dhwAxbzYiT08
Low/Ocn876mt2Im92ByQPByPW5l1eXn4y/DrlvZiczC1hX+u8sSAsacwL/bw
sb5hAyXzh9BvL842P9AWvvbEkC+fLcg8fFs8MMc8fF8coMn8H+ifc4eXHXIq
82In9mJzWPLwG+dd9f0lhZmH4/o+2ovNn+i3wzix05iH/wjHs4swDxcP7RLt
4SrxB4r5I+iX4wF/5uF74gBv5sVebP5Cf9xmQtEeZzAvdvCkKQ2yihZjXmyO
prbwBz/vm/Qh7cRebP5Gf1zllU4dizMvdmIvNv9IHt7b96ZKBUowL/ZwXLdL
m39TW7GDL4gNDPNwnXihkfn/0G/HhT7Mw+Gnt1kp5sVebI6ltmIHv4ju+WB+
XmyOox/v9vfI185iXuzgcHrKlmYe/v5Aq7N/oc0J9N+1jn8z7mzmxU7s4dLx
ASjzJ1NbsRN7uHoc8MC8ybW3xAWFzMNxnHpZ5uF4vZz28LTwevpc5k9JbeHF
VT66sXI55sVebAqktnBO33tOy8jPw/sXnbFpwHnMw6fHF9TMF8y1l8QBUMzD
DeNCY+bhTrnLww3cvLzYFMq1A88LT/yYFzuxF5tTJS928IRuZfr2vIB5OK7T
qch84Vz7VRhHQ1uxg3eG41kXMg/HX6+VmD8t15aLAx+ZFzv4umIVS7W5iHm4
VZswYZ/5Irn2gSmDps26mHmxE3uxOT3XPv/zxd1vuYR5eFaVrMv+oJ3Ywyv6
Dt4/+VLmi+babYvCHwDm4T/Duj/aib3YnJFrS8YB18yLndiLTbFcG49zV2Ee
bhLaM9qJvdgUT23FDu52XpggzjwcThPWqMp8iVwbbg9toy380YFRPw27gnk4
o1b4wss8HKaZZtKmZK49NS4YYV7sxB6+sFj9oxdUZ/7MXBvXA9NW7MRebErl
2jj+9CrmxU7s4UfDdbAazJ+V2sJjwuNY2sHv9g3fUJmHVy+KDwTz8qVTW7ET
e/jH42HgAPNn59p/bw4L95iHy4y+5ddCNZkXe/jq3L8WzKNNmdRW7OBbz3tz
QNvrmId7d7u93jHanJPaip3Yi03ZXIsvz2Z2Lebh18N49drMiz28NFwnp825
qS0cXx9fz7zYwwe/CAuDmS+X2oqd2MNnFLvr+1/z8+fl2sptTn3zpbrMwzdO
+aBP3XrMi73YlE9t4bt/vrv6jvy82IvN+akt/HiVsHGdebGHJ/YNEy6Zr5Br
5y8KB9KYFzuxh9cfDwMgmb8g18Z1Lw2Zh+M4G9rB54fjb5Z5samYa2uHj4cb
mYfj7TzawWG6RN+bmIdfOBD+gzB/YWoLh+m/q2gn9mJTKdeGbRm9b2Ze7MRe
bC7Ktd9+sQ7/RpgXO/ivMwbiR5h5GB9mL3RpwvzFqS0c1wE2ZV7s4WZhvB1t
LkltxU7sxebSXNsjHAdvxjwc20faiT08ZVG4UMd85dRW7MQe/uR4WKDB/GWp
rdiJvdhUybVZN4cTasyLndjDv704YtG0Fsxfntr+n6s7DdR6Wt84vppIpkrI
kCaENCpjcsuYSkIqlRJKISElFUsDSWhQQklCQkqRKVnIFEna+wkNQhSSMUk6
zrXWvvaLdZ13nxff//F3au/n/j2/dS9491WNh53Zlr04wHUOXnf6Ftods8pO
vfzu3R9ox17s4c5PN19+yvns4YHpgRv7+rlN7MUBTutl27M/NrfB6fjaBezF
AX4vPt6mXYPcBn+9Z3xDhr04wP9eeNr1x1zIvmFugw98+Kdmn9EePu7rB/8Z
chF7+Pyjzgy1L2bfaJX1TV8wsodHL4oLk9jDj+2KF/yyF7vGuQ2O3xYE2sNp
fXwn9mLXZBVG9na9KndmD+8dv46mvTjAcXtLjy7sm+Y2sRcH+MynL1y4+6Xs
j1tlPdILWuzhW9OCSfbiAMfbSf+jXbNV9sLScsue6sZe7OGP94w3VrEXu+a5
TezFQeyOX2WbLowbQdjDZR+ueMijl7EXB/iweJ1MD/YnrLK0Doc2OL1O15M9
PCAtZGYP37Prqu0baXdiboOfOrPqG+N6sRcHsTtplb11z5IRza5gL/biAK/7
rN+5a2l3cm6D/z4objBgLw5id8oq2+/y+I0Je7EXB7hR+kDJvkVug89LB8LY
w+n6vD7s4bQ+j3an5jZ4Wnx9/2r28MtxfO3LHv7swiGnvE27lrlN7MUBxvBU
pl8/9qflNrEXB3iPr1e+V+Ua9pbb4MPTAy724iB2p2PeTgsB2MNd04VY7MVB
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
H9/a5IH9fmYvDvDmt9Z1eZ12V+Y2sRcHsbsK82/6wpA9fFhaqMNeHMSuN+bh
dGEqe7GHO8br3X9lDw+I69d/Y98H82w8Tk2b2MOz49fJv7MXu6tzG/z2P6fd
tYP2cNzWN/MP9nDcbt36T/Z9cxtcLS0MZC8OYtcvt4k93ChdyM4ejrev21/s
r8H8+2TrozfTJvbwHVu2bb1/O3uxuxbz8HHxGzv2Yi8OYncd5ud4fUxpL/bi
AK+K61t2sO+f2+Ct8XW1f9iLA5x+fdLu+twGH/7gf+Nv28ketvXPXnLkv+zh
rkd0PvQT2g3IbfCga+MNOuzhiQvnz67xP/bw3H+6Xfcu7W7APHx6+oBY0sPf
jokHqj4q6eH/4nVsdBC7GzHvxnVuZUpscHrdvCx7cYA7xPGTdjflNvjaLVWL
u5ZjD2NYebhcefZiNxDz6a3xRDB7sRcHeMlb8QEP+5sxn1aMB7rZiz0cp/nH
d2MvdoNyGxy/TTpvd/Zw/fUftPidDnC6XrYi+8GYN+O61z3Yiz08PB73ooPY
3ZLb4KnxcW8l9uIAx23tJ+3Jfgjm0zFxgQx7+McV8QJN9nCFA+v3a7w3e7jW
ZasbfU67W4usxZMjt92+D3u405ZGr9fblz1843Fr/Qo6wOm6+Mrsh2I+jOvU
q7CHl8bj0LSH09epVdmL3bDcJvbwzikndT9gP/ZiNzy3wQes/67OEtqLA9zk
iImbr6rG/jbMl9e2fH7v/dmLvTiI3e3Sw1cv/PGml0p7eOQ/8R+QPfzo6fGF
XfY+t4k9/OqYuCCYPVy84pGxF1dnf0duE3txELsRmE/jdS6lvdiLg9iNlB5O
61UOYg/Xi6+LHcwebhV/ndFuVG6Dux+3o/cjh7CHb0kfQNiL3ejcBj/wVjzQ
xB6eVzFeWMBe7O7MbXD8dvTkw9iLA/z9lEvO+IZ2d2H+XF8Wn0DYw/H0eZNa
7MVB7MbkNrGH0/VvpT18UVznVpv93bkN7p8euLCH07hLB7Ebi/lzTLxwiT0c
VrwyoNbh7MUBXnNA3MjJ/h7Mo93jG8ns4apPvoGf0OzhBlv63vUmHeBzjzug
XZ967MflNrGHr0hfyLAXu3sxf6aFKezFXhzgtM71aPb35TY4HT87hj28Mj6O
pgO8ZV3NXzrWZ39/boN3PyK+8cheHMRufG6D61wb/0Szh1suPNzaNWAPd0kv
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
Pbyo6+srj76GvdjdmNvgOAz2YdqLg9jdVLG/x1z00o9FD98V1+Vey14c4DTe
lXb9chs8Ln6+VPTiIHY3V6xRfNx6HXuxFwex61+xGZ3jCQ32Yg+363NZlaVF
L3a35Da4POLo5U36sIcvnLHzB/fQAf5z8S+Tv6adr9itVeILQvZiLw7wNmmg
Dvtbc5vYw4+1iwtU2YvdbblN7OH49P9/fdmL3e0VezWOq6cNPi5+Pk17cYDT
6+Qb2A/IbWIvDmJ3R8XOX//4O/2KHl4VpwcWPdwvHVBiD1dLAwvZ31mxuI1y
Hm1w3E6/503s4Zfmj9/hWjrAtvrGNe/R7q6KfVQnvpFjD58d1+PQXhzE7u7c
BqfxJkUvDmJ3T26Dr08HitnDm6cBz+zhB+fe0nYm7e6t2J6rTjtw+/7s4ee2
a1jzItqLA9yyadwoxH5gboPf7xq/WGcPn35zfMLPXuzuq9i3Y+IFKnuxFwex
GyS92IsDfHX6QIr94NwGp/V4tIcHxfFrdBC7IbkN3jUe176VvTjA6Xabdvfn
Nrhpn3t+fLbo4Vkjzvtwk9vYi90DuQ0+eUaTKafRHv5mcXzgxR6+LH2Qzf7B
3AbHpw8n385eHOC72w1u+STthuY2sRcHsXuoYvH0199FD6d1tQPYiwN8SBwX
S7thuU3sxQFOn4cV/cO5TezFQeweqVj7+Hj9DvZiLw5iN1x6uLJnfIHGXhzE
bkTFLkoDcNiLPfzXRXFhKXv4toE7NhlOu0dzG7zt8z/V/pn24gCPnv/WP63u
Yj8yt4m9OIjdKOnFXhzgA1c/8vXQon8st4m9OMDT61wRlhf96NwGH3/ksU+0
vJu9OMBpHD/tHs9tcPc0gJA9/Gt8HX8Pe7EbU7Gb5446aCBtcPVVV9f6hvbi
IHZjcxs8YrsT/jz0XvbiIHbjchtcv+keC+4senEQuydym9jDL3f9a3ql6MVu
fMVap38A7OGPx8QD3ezFQeyezG3wOWlANHtxELunKvbj8g5tDriPPZzWH9Ee
rhrH3dBB7J7ObWIPp+OCg9jDe8XLE9pNyG3w8yP6vfQh7eEj0gUpe7GbWLEP
FscPuNiLPdwlLcxgD8e34XWHsJ+U28ReHMTumYpd0y5+scFe7OH4tdW7RS92
k3Ob2IuD2D1bsTiNYOf72Yu9OIjdc9LDu8X1kUUPp/F9RS92z1esWXpgyR5+
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
qOFF59IGd2sfJ2qzh1f2iTeS2Itd74r1Swea2cP/PRsHELMXB/j2ZZ2XbtSZ
fZ+K7fTnXi+fRhv8eP1/75tOe/jg1ktucKewF7tLc5vYw6/GdQ1FL3Z9K9Y5
jr8oejgdByl6+NJ0IYs9/OdPcaEC+8sqNqLeJ4t/pw2u2/KpZ07swl4cxO7y
3AY/1PPmex4oenEQuytyG7z/0B7X/lz04gDPmdLijHZd2ferWPw0OZE2OD59
XUN7cRC7Kyt2UbpAzl7s4TT+iQ5id1XFhsXjpkUPbx0/3nVnD8fpbXfRAW46
7/MrvqJd/9wGx20hLU9jLw5id3XF4na7UbSJvTjAS5rGFzTsr8ltYg+fmwbo
sIfXXBknHLK/tmI3jPt6XoU2OK03PIO9OMAT4nhG2g2oWON4HYQ2OD0O6sFe
HODW7evhjwT76yr2bp94wIS92IuD2A2s2JlpoB17sYdXPRsXRrOHr1122ez3
aDeoYhv/eczkRj3Zw3fX33noANqLA7x767W93qbd9blN7OG0Xvks9vCRcZwz
7W6oWLqeSpvYi4PYDa5Y9zTAlr3Yw1/+tNsHl9NB7IbkNrEXB/jKenGjI3tf
MdcyTuxiL/bwHT3jiR72cPynOZd2Q3Ob2MNP4NvPtueyhw9JvzDYD8ttcDy9
M5v24iB2N+Y2sYdPSQsK2IvdTblN7OG03qLo4b5x/EbR35zbxB7+Kx5H6cUe
Tn98aDc8t4k9XG/ef92eLXqxG1GxKV8sPbzm+ezFXhzgFukBBftbKja3abyg
zV7sxQE+KS1cYn9rboOXX9l8QVfawxeP2+jxJ+gA/zpz+ch/in5kBf/Knu7b
+UL2Yi8OYndbxerE8VxFD6fjqkUvDvC+6YUO+9tzm9jDs/rEgTTs4XZpwSH7
O3Kb2MNLn31hTvuL2cPnLbvtwUm0G1WxH/8496YfaYMH1z/somMuYQ9v3jpu
TGIP33t+nEjBfnTF9koHNNjDaZwk7cVB7O6sWJu0sJm92IuD2I2p2Hvx8VYf
9nDPettOHE17+LvDv71hJR3g6/DT4dBL2d+V2+D4dOA22sP3TOnTeAUdxO7u
iu2RDpiyF3s43h4ZTgexuye3wUdt9cPi5UUPp3XLl7EXu7EVOy2Od6YN/ipe
H6U9nF5PXc5e7MblNniDebscNZj28Ogv4g9w9mI3vmK7pAs07OGpTeMNVvbw
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
6wef0ua5is3TgSbWwz98EBt0sh6+/Pc3L/+I9mLzfMXW33pCv10WsB6+58Ah
nYbTDt4hjp+gPfx0bDfxNutfqNh0PIK28Dtvx39YD5+QDnizXmxeLNvCcbV7
CO3goR2PuPitaj0cT5dvs5D1L5Vt4dFXrt3vfNqJvdi8XLEtHli07dxqvdjB
sftjk3dZLzazK3a/b4d/eQ5txU7sxeaVin0rjp+q1sOpXdZ7rBd7+Mt4nJI2
vmLT1zFt4X/HP9F700WsF3uxebVsK3bwLbNHdDitWg83XXZ841nV+jkVO6Vu
u782fJ/1Yif2YvNaxe61S5yYyXqxE3t4Tq+44MT6uWVb+Mh0IZ/1Yi82r1fs
0jvjgDTWi53Yi80bFbtu3CbrxQ7+M7XnZL3YvFm2FTuxh29I11FY/1bZVuzg
dcshrIcf6Prsr/9U6+dVbLuBt3zc+yPWwy/fEjfIWC/2cM/U4In18yt28Qdx
wC3r4TN+X37KJNrBq5u9ePAa2ovNgoq9+sDRO3X/hPViJ/bwpnF8Nm3ertj7
Y/vraj2crqsuZj38XNxOob3YvFOxXVNDStbD8fSX/ZT1Yi82C8u2Yif2YvNu
xZ7SMe7gsR6Ot7tXVOvFHo7dmQ74jPXvlW3FDt7wgR/XG0V7sVlUthU7OE4D
+LJaD7f6dvy8jktY/37ZVuzEXmw+kHr4mQbxgDbrxR5e19Cb9R+WbeGFsX3F
56yHT4rHK2gvNh9VbIqnLXzJ7InN2n3BerEXm48rts6yi/8ZQVv4jrq9wsfV
erGHs/SFz/pPyrZiJ/Zis7hip/aKF9xYL3ZiD++fBnqw/tOKnXfn5HN2rLAe
Pm7WsMOH0Q5eHsd10V5sPivbip3Yi82Sir0wtgMLrBc7OB2PpT18a3z8oc3n
FdssLeCwXuzEHn7klthAgPVfVOzeacAZ68VO7MVmqdTDr32w24Cmy1gv9mJT
KduKHdz791rdBlXr4UqzOLGD9aFsC597YLzxy3qxF5uasq3YwX+dEle8WA/f
GMeJVuuXlW3FDk7tUJezXmy+LNvCD8brNbSD0/JPtV5slpdt4XhbrMFXrId7
dbypU057sfmqYmO3tRm0hWP35Xpfsx5eM2mj706kvdh8XbFxOt6TtBU7eLN0
oIf18IQGsUEm678p24odnMadV+vFZkXZFn4+tj+v1ou92HxbthU7sReb76Re
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
smAuHcVuatUZbNNh2oxkH949DSRjX1zAafwMXcLp+FPBvjiK3XNVZ2IP1+3H
I53Dtq38NboQl+IgjmL3fNWZ2ItzcSEuxUEc4X+njGu58cXsv1B1JvbiXFyI
S3GAx3w62J1OR7GbVnUGb/TfXvWXlvfh+1vbgT324Z3TQFX24ZdOmnH1dLqE
D77mltPWvZR9+Atbv0ZHsZte82k8H53Bf9nx6lHsw+nrGJ3DzdJfUPbFpTjA
dw+0N9zswx3SgHj2X6z5aZO7XfY4nYk93H3OpoNXvpx9+KOffjvwCLqAT2w2
a9uH6VIc4N86TVhnhdHsw2ldKu1Cza+dviCwD6frWbSH0+PRK9iHn8Xf1ol0
Adu31z/pEra3az2uZB8e0LfPliUdxW5G1ZnYi3PYbhv8RhfiEr5o/L/fH3AV
++IIr5EeOLL/UtUZbNNEF9Ee3jwtiGMfftLGz9OFuBQHcRS7l2s+XUenM/gt
e109hn1xLi7EJdz/xo+zG+ggjvCCKY+uNJ92r9T8uZ9e9s3u17APN0ovnNmH
x7W2gV3sw1laOMs+/PBJdmOXfbjzNU/1/YIO8BuPXdVph7Hsi92rNZ/Wz9AZ
/JWNm6G9OIfT8a7r2IfTjwu6hK8ZaAM+2RdHsZtZ84hfsdX17Is9PGnyCUOG
0zm8y5zOvd6hC/jln5p23Hwc+3DvZt+udz4d4C87Tf9jNh3hU9K/EPZfqzoT
e3EOL7F1a3QhLsUBTuPt6Ain4883sv96zd9jX5foDLa3o6/QXpzDdhpxw5vY
h3v0tW887IsDbLfjX6QjPCh9YGX/jaozsRfn4kJcigP8+3S7cMe+2L1ZdQbb
9ofnl/fFObzOKndeuPYt7MN32jpUuoTTuFs6iCM81a473cr+rJpPjz/pTOzh
96bMtk+Ay/riQlzCA9MDNfbFUexm1/yif20AAfvw8LSwjX1xLi7gNfff/JwV
b2dfHMRR7ObU/K0n/X3YoXQm9uJcXIhLcYC3uOad3R9Y3he7t2r+qcfub/nv
8r7Yi3M4rXcfzz4818bx0yWcrnfTQRzh9Hr2Dvbn1vx5aeEq+/DKlz902u+0
F+fiQlzCN0y+pPf//o99cRS7t2u+1ZzDd/o/OhN7cQ4/8tN2zX+mC3iPZrZh
mn1xEEexe6fm3+xkE1HZF3txDh+WDqyxLy7FQRzFbl7Nfz3CfkKyD5+dFs6z
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
TvCP39jCevaHNcPNW+53x3Xw/wM9MqcG
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 50000.}, {0, 0.49814}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.883098505000798*^9},
 CellLabel->"Out[136]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
N+Xfy/k1MLC7uDG1qsJ/AZtgIzM=\
\>", "ImageResolution" -> \
72.],ExpressionUUID->"1b886047-d4ad-4c40-b96f-0f1b06640ea3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"Accumulate", "[", 
   RowBox[{"Select", "[", 
    RowBox[{"tosses", ",", 
     RowBox[{
      RowBox[{"#", "==", "1"}], "&"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.883099247346511*^9, 3.883099331774929*^9}},
 CellLabel->
  "In[152]:=",ExpressionUUID->"5357871a-6bca-4e70-a28b-5dc1e21b6bc5"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxdxTlqEFAURuEfK0sLCwuLp4iIhBCHOJtc45CocYrzmJdonMEt3KW8pdyl
vMIFuAQVC/nPgcN3ZPfH1t4+ST///Nd//Vp1Fe5+eAAehIfgYdjgUXgMHocn
4Em4ABfhEjwFT8Mz8CxchufgeXgBXoSX4GV4BV6FK3AVhptQ19yEWnMT6rqb
UDfchLrpJtQtN6HW3YTacBPqtptQd9yEuusm1KabUPfchLrvJtQDN6EeugET
FtQjN2DCgtpyAyYsqMduwIQF9cQNmLCgnroBExbUMzdgwoJ67gZMWFAv3IAJ
C+qlGzBhQb1yAyYsqNduwIQF9cYNmLCg3roBExbUOzdgwoLadgMmLKjuNhiw
w4QDFpxQO26DATtMOGDBCbXrNhiww4QDFpxQ790GA3aYcMCCE+qD22DADhMO
WHBC7bkNBuww4YAFJ9RHt8GAHSYcsOCE+uQ2GLDDhAMWnFCf3QYDdphwwIIT
6ovbYMAOEw5YcEJ9dRsM2GHCAQtOqG9ugwE7TDhgwQn13W0wYIf539/AL6UX

      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 228.}, {0, 228.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.883099263571423*^9, 3.8830993334158697`*^9}},
 CellLabel->
  "Out[152]=",ExpressionUUID->"6363b007-9226-4169-ae80-646e24eeb8f0"]
}, Open  ]],

Cell["\<\
Still no idea how to get \[OpenCurlyDoubleQuote]running proportion\
\[CloseCurlyDoubleQuote]! FoldList works, but does not give access to current \
index of the list. MapIndex does not keep track of previous elements. Looks \
like we will have to write our own function. Not fun, I must say.\
\>", "Text",
 CellChangeTimes->{{3.883100982953307*^9, 3.883101029591935*^9}, {
  3.883101115297909*^9, 
  3.8831011319245462`*^9}},ExpressionUUID->"00d512ee-7603-4b9f-b843-\
e996867d3da7"],

Cell["\<\
Stolen the following code from \
https://mathematica.stackexchange.com/questions/190503/how-to-make-\
foldlistindexed-ie-foldlist-with-an-index-or-iterator\
\>", "Text",
 CellChangeTimes->{{3.8831030786261683`*^9, 
  3.883103091915895*^9}},ExpressionUUID->"8e7ec426-3252-41a5-9003-\
11381873460c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"foldIndexedList", "=", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"f", "=", "#"}]}], "}"}], ",", 
      RowBox[{"FoldList", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"##", ",", 
           RowBox[{"i", "++"}]}], "]"}], "&"}], ",", "##2"}], "]"}]}], "]"}], 
    "&"}]}], ";"}], "\n", 
 RowBox[{"foldIndexedList", "[", 
  RowBox[{"f", ",", "x", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.883101177941678*^9, 3.88310119555925*^9}, 
   3.883101584882186*^9, 3.8831017155522327`*^9},
 CellLabel->
  "In[204]:=",ExpressionUUID->"3f9144f7-38dc-4bf5-a9c1-5280a7e4f73f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "a", ",", "1"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "a", ",", "1"}], "]"}], ",", "b", ",", "2"}], "]"}], 
   ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "a", ",", "1"}], "]"}], ",", "b", ",", "2"}], "]"}],
      ",", "c", ",", "3"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "a", ",", "1"}], "]"}], ",", "b", ",", "2"}], 
        "]"}], ",", "c", ",", "3"}], "]"}], ",", "d", ",", "4"}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8831015875949593`*^9, 3.883102593202116*^9},
 CellLabel->
  "Out[205]=",ExpressionUUID->"adc8994b-9f21-4efb-8a29-4052c5acc9f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fewtosses", "=", 
  RowBox[{"{", 
   RowBox[{
   "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", 
    ",", "0", ",", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.883103674573564*^9, 3.8831036836712427`*^9}},
 CellLabel->
  "In[269]:=",ExpressionUUID->"de85fe1a-4b23-49e8-99a1-1378bc6e5202"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", 
   ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.8831036771836643`*^9, 3.883103684391725*^9}},
 CellLabel->
  "Out[269]=",ExpressionUUID->"e46c7870-721a-48e9-a3c8-bd393271f102"]
}, Open  ]],

Cell[TextData[{
 "This approach ",
 StyleBox["may",
  FontSlant->"Italic"],
 " not be the thing we want. What we want is a list: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "1"], ",", 
     FractionBox["2", "2"], ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["3", "4"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["4", "6"], ",", 
     FractionBox["5", "7"], ",", 
     FractionBox["5", "8"], ",", 
     FractionBox["5", "9"], ",", 
     FractionBox["5", "10"]}], "}"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "568b336c-bf8d-44e2-93a4-51683d130290"],
 " and so on."
}], "Text",
 CellChangeTimes->{{3.883103511921278*^9, 
  3.883103665336193*^9}},ExpressionUUID->"55ec0710-e270-451d-a4f2-\
259bd2564de0"],

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"i", "=", "1"}], ";", 
    RowBox[{"res", "=", 
     RowBox[{"{", "}"}]}]}], ",", 
   RowBox[{"i", "<=", 
    RowBox[{"Length", "[", "tosses", "]"}]}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{"AppendTo", "[", 
    RowBox[{"res", ",", 
     RowBox[{"Last", "@", 
      FractionBox[
       RowBox[{"FoldList", "[", 
        RowBox[{"Plus", ",", "0", ",", 
         RowBox[{"tosses", "[", 
          RowBox[{"[", 
           RowBox[{";;", "i"}], "]"}], "]"}]}], "]"}], "i"]}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8831043130119762`*^9, 3.883104390593011*^9}, {
  3.8831044303676653`*^9, 3.883104435785214*^9}, {3.8831044873392677`*^9, 
  3.883104490650578*^9}, {3.883104540639617*^9, 3.88310457516444*^9}, {
  3.883104642572586*^9, 3.883104671477113*^9}},
 CellLabel->
  "In[293]:=",ExpressionUUID->"99801138-e3e7-4be3-92cf-d76fd5b05389"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", "res", "]"}]], "Input",
 CellChangeTimes->{{3.883104579392715*^9, 3.883104579605057*^9}, {
  3.8831046564374723`*^9, 3.883104658560388*^9}},
 CellLabel->
  "In[294]:=",ExpressionUUID->"91a4f187-1637-49d3-af26-d42c19588c73"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1: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
C0k/CcnV/ustO0mfG685IXtYTPpJ2Gc4X+2zj/ST+OtjSUKH314+yjxI+knQ
P3NKmb+a9JNZfiH9ZPzVrEPfEdNIPxl5uTeCvuxH+skQ/dhbHhRI+sngivuI
sRrST8aWFYMNwhDST0ZVj8z/3TOSfjIWrFN+LfiJ9FPA7c1Sxyukn4K4wOeP
plE8IoXPI0rBHveCbtE/k34KusxpNXhTGemn4HSGmyia1s+Sgltp62q5zvRT
8OOW8V4zaP0cUvnrK0hFl+6nXbufJv1UvF9Tqt+/mfRTsfTkPz0180k/FUJp
ofO+7aSfii8bbZ+59lfST+XHozUV52tSsjyKSD8N+/MqwpL2k34a2ku3vTpS
Qvpp6NBktpPHIdJPw0Qnb+m9taSfxt/v5jRkVE9q7/hp/tPgv6v0sXw46XPP
2xvpS/Dfe5jtLEHEtnDuD32PBJH+VS5vFzPbU8K/30GC/WVTuM5soQT/XK3Y
ejuZvleCKZvF47oKmS2RoHm19fb6QfT9Evb7ALMzJAibuu2HG0rikWBXefZs
VRizcyUom1wvDxxNfBIUp94JjnZjdokEJ+O6blwzlni5773Ri+vMrpPAPKzl
i1OTiF+KBHsjfik/3gRSSHbEfzMmlfilWFX7oCplFfFLUelUlPeZjPil+Nav
anRRMPFLMdj9+MyjlL8kUmwIV94UbyB+KWy3o2DKxxlSXA8a90EbSfxSKHX7
xI9ofXK552/ktRkaS/xSqHJ63Ts2lfilaFsaOi3Oi/ilqO4432c1zX+dFKY0
V98Eb+JP58+/czrExT5bm8uJPx055vINzWn+PdORfa3m2BI18afjafne4J8j
iD8dHjVHXD8fT/zp/PNBko4HB9v4np9M/OloFvT74VRP4k/nn2/mdIS7jewz
ic7T3HTcr/mnlW9n4k/HZ9neJQmfEX86Rixbcu3UEzpv0/Go22tnrSPxp8Ml
Lkz36iWdvzL8d31ktrMMP/X7LqftGzqPZfgl7iuuE78Mnfe8f7psAPHL+N8r
lGFkVVqe12Di554fdfa6C32vRIbEep/uRUOJX9Yg/mV4N+TAouBRxC9D0Zaj
JaYetP4y1Ja0tHXGL8PM4YfiBH2JX4ZB5SH/fE/fa5Uh5mNEp4P9iV+GYc0m
d9pG+9VBzn5fo/WX4+sy5d7HnWj95Yhe+KJvQRPil2OhfHVowXOqT+S44Ca2
Pq5gtlAO73+/SxhooXpFjpP3CtZbqR6TyKG8dj05+i+qn+RwyesXcJK+N0MO
/8udP+v8nuopOX9+c+VoWyjfOH4g8csR6iU812k68cuRUNqteybFt1WO40P3
3xwdQPxyLM1td+1MEvErEGW/wBO/AvETGz+fZCZ+BT8feCqwfWil1wra71Dw
86lQAVWtojL8U72iQJuKoBB/2s8SBXZrkpx76mj9FQgNqlg3REz8CpQXSnaL
/Wn9FfDd8abx0WHEr4BuTtHB8CDiV+Cg7fikeClRYI2qUdsplH+sCv7vdXUK
XLqxIN3gTvxK9nsq8SvRd+muEw7ziF/J36+eSrxrkZ+4g+IbSpTv9M7LofkX
KuH6bSzXiV8JVdfURkto/iVKTJ+23QNUD5qU6F+10KNqIfErMbLIOnU61Utm
JdS3O4aG0/rkKhFminixQkr8StjL67nEr0Rg5Z23AjoPrUo8NKyYulRE/Ep8
N+nRh32UvxxUsFXf7jHEr0KvSe09BlA+Fqjge/NdljPVD54qrD/XuPX1vcSv
4udzoQqXZ7Xb2ZbqTZEKadnBuEfnh0SFoL7Fo/XEY+L0L/zePIrqxQwVP97M
Kv75nqvC9T8OPOy3kvhV/PqrRIWYZjd9lVR/W1X8er9Ohb/+SDTXxRO/ukH+
V/PjRaDGvUz/C8mUPzzVCAgua6OgeIEaH8zbG8+j+ReqsT3vvakFxYtIjfDS
IVwnfjUEGt/FWVRfmtSYcfZKHzXFd4aaXy+Y1Tj8sYXRheI7Vw35spT7WZ/i
X431jfOMP4H41SitnfTtJQ/iV/PvG3Vq/vnooEHXJU8Djnchfg1u/FpZ/J7i
W6BBapj0ZXc6Xz01OJf/cchyyt/QoOXtbxqvnUH8GtivyyOJX4OSg/Wpf3+K
fw2/fjJpGuR/Db52THKt9yN+DbxGfVl6mM7HXA2+Cr2XEEX3PYsGq2w/p80h
fg1/v1o1KN146/VOH+LX8POlgxa9lFFcJ34tv14RaNHmTHe/PZSfPLUob9Fh
1BGaf2ixsiKe68SvhUQXkP56NvFr4bhoU493lG8lWghGPb/kTvWESYu3w3b0
bJ9G/Fp+PjVr+fepXC2+DhQ3vU/7x6Ll369KtPz9Y9Wi3+LK/X603+u0OHRS
P7DgO+LX4ciGkgg/ysfOOkT3qR5TRvWgQIdnfyveD6f7i6eOX99Ch/zyDjk/
0PwLdfjybfILMZ2vIh3WlQbMmEjxLdHhh9pNP43sTfw6jLL9PEnxkqHDzLjT
6txP8a9Dbd4YW2f8OnwfOu9OMe1Hiw79yzY1uUvxUqJDeas3Trdo/q06eD6Z
du9zipc6HS5UHGs0lvajg579fxzx6+GypY/qJe1ngZ5/P/fUY7HruCpfug9A
jyz9TXPhp/ynh19nZbTzMuLX4268b+NEqucleoRXiLlO/Hp+/srQo3h5/sYs
Wh+zHguWdxtes4X49YhwPBzueJj49ahOrOu8gO4rJXq0mWgyrM8jfj3/vlmn
h6yk8MNJyucOBmyZEPIigXicDZBn+1X2+VT/GuA27Jlvd+LxNCCnz3v9a+KB
gR9vQgP+rY9ofoJ4RAbUuJmb7aV4khgQtS5HfSCU+A38/ZphwPmQU+MeU7yY
DXjpX9zjIOXLXAM2mqP2PqB4sRjgYW/Eb8B25/LVi12J34Bj70Ycf0b1Yp0B
dx/kPv1RQPzGBvWfEXPL1hw4TvldYES2uzfXid+IA4/ufX6wJ/EbIew77VRX
+l6hEbUdtr881If4jfx8KDEiJ8HLKYjypcnIP58zjFhySNavB+VLs5F/f8g1
ou5mVoH/p9+3jIj9ZV7FO4qnEiPe3pt+49in+DdCXfaTedFE4jfi54F+JjXN
v8N8JNkv4MQ/H1FRAQsHfYr/+fx86TkfJTnHjC50/8R8FCpPb+nI3Qf+D7Qi
4Y0=
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 500.}, {0, 0.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.883104580587253*^9, {3.88310464840164*^9, 3.883104675741342*^9}},
 CellLabel->
  "Out[294]=",ExpressionUUID->"a704020b-c0ef-427d-a437-8c66db858964"]
}, Open  ]],

Cell["\<\
Well what do we have here! It worked! It is the ugliest way to do things \
because it is not functional, but it got the job done. We will refine this \
somehow.\
\>", "Text",
 CellChangeTimes->{{3.883104682280245*^9, 
  3.883104709210062*^9}},ExpressionUUID->"000cad90-7b48-4659-a980-\
ccb4a7b814ef"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapIndexed", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"FoldList", "[", 
      RowBox[{"Plus", ",", "0", ",", 
       RowBox[{"fewtosses", "[", 
        RowBox[{"[", 
         RowBox[{";;", 
          RowBox[{"First", "[", "#2", "]"}]}], "]"}], "]"}]}], "]"}], 
     RowBox[{"First", "[", "#2", "]"}]], "&"}], ",", "fewtosses"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.883104753587593*^9, 3.883104870444613*^9}, {
   3.883104954618223*^9, 3.8831049786718807`*^9}, {3.883105008768622*^9, 
   3.8831050525269823`*^9}, 3.883105089896407*^9, {3.883105180991081*^9, 
   3.883105182217102*^9}},
 CellLabel->
  "In[306]:=",ExpressionUUID->"935279f7-956e-4e30-8f22-c5e8e5a942e3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["2", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["3", "4"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["3", "5"], ",", 
     FractionBox["4", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["2", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["5", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["3", "8"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["5", "8"], ",", 
     FractionBox["5", "8"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["2", "9"], ",", 
     FractionBox["2", "9"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["4", "9"], ",", 
     FractionBox["4", "9"], ",", 
     FractionBox["5", "9"], ",", 
     FractionBox["5", "9"], ",", 
     FractionBox["5", "9"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "2"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.883104846970669*^9, 3.883104871466178*^9}, 
   3.8831049565276623`*^9, {3.883104988910776*^9, 3.883105053178927*^9}, 
   3.883105090574609*^9, 3.883105182515388*^9},
 CellLabel->
  "Out[306]=",ExpressionUUID->"f97573f3-73fd-456d-b5c2-b14ea458e876"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapIndexed", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"List", "[", 
     RowBox[{"#1", ",", 
      RowBox[{"First", "@", "#2"}]}], "]"}], "&"}], ",", "fewtosses"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8831119787955513`*^9, 3.883112047017118*^9}, {
   3.88311208099682*^9, 3.883112152126417*^9}, 3.883112184354636*^9, {
   3.88311223035577*^9, 3.883112243698429*^9}, {3.8831126805028257`*^9, 
   3.883112702188661*^9}},
 CellLabel->
  "In[346]:=",ExpressionUUID->"253dfdb3-7e4b-4ae2-8a14-e861504c2247"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "10"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.883112238007605*^9, 3.883112244568206*^9}, {
  3.883112681573963*^9, 3.883112702700057*^9}},
 CellLabel->
  "Out[346]=",ExpressionUUID->"f4fae8ca-7e14-436e-8241-85ccff1cd9ab"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"MapIndexed", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"Total", "[", 
       RowBox[{"tosses", "[", 
        RowBox[{"[", 
         RowBox[{";;", 
          RowBox[{"First", "@", "#2"}]}], "]"}], "]"}], "]"}], 
      RowBox[{"First", "@", "#2"}]], "&"}], ",", "tosses"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8831119787955513`*^9, 3.883112047017118*^9}, {
   3.88311208099682*^9, 3.883112152126417*^9}, 3.883112184354636*^9, {
   3.88311223035577*^9, 3.883112285013653*^9}, {3.8831123173925543`*^9, 
   3.883112353725553*^9}, {3.883112396431595*^9, 3.8831124097851753`*^9}, {
   3.883112718132028*^9, 3.8831127810610313`*^9}, {3.8831128630216627`*^9, 
   3.883112895430331*^9}, {3.883112976866107*^9, 3.883113012650866*^9}},
 CellLabel->
  "In[371]:=",ExpressionUUID->"d8c45558-419e-4831-8061-bd8e29557f39"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.883112995302745*^9, 3.883112997278154*^9}},
 CellLabel->
  "In[372]:=",ExpressionUUID->"45050b1c-c8ac-4428-8ab6-481c76d66877"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxdmQdUVEcXx9FoJEb5MNgVXYldULCA3T/YKwuoFAWXsvSyy/bq2qOJilE0
QdG1RMUWLFjQ6FowoogoVQK6auyNGDUhlnxvN3M95zHOOZ7rvPv+7zdz586d
tVtUWqC4sYODw+tGDg62v/9rdWMc+A3//WVl/+6IWfZWzmxnNl7C7NbI+tHW
Cpndnj1fwOzO+L77ZK6fY7aA+VuY7YbOv0q5XsTs7hhkb6XM7okJ7cLl18dX
Mrs39u6xtWpm98XmquXZVctrme3e4Pv741atvTHbs8G4F7rY2y1mD2TfU8Ps
Qej989ZTS1+R3mDGe5PZQ/Db0RRbZ7Y3BuQ/2vZtf3reB2uWuMd0+5KeH9rg
+4c1eN9wjDjownV63wgM2PrL4rdf0fMjG+iNQuSJXa3W62h8NE6dtDUaH4OH
m2TFwx4SDxg/4zUBjl31dWeb3Wbjvvz5MPnCtcyX6zR/fvz5MfnBUNFy56U4
Gh+LlveHrKsUkv/YBuszDrH2RuPjMLTroj+9hpL+eGx+qOE6jY+HdGJNK9UF
8p8Aezi0Y7ZpQoP1mohfHk9P05YyftNEpJSpvJ+MoPmYxPjp+yc1mM/J6DN3
9bk3vWl8Mmpr7I2NT8GzCzO4TuNT4DbkrLrfOxqf2mB+puJ5p4rTkc/p/dP4
eqZpDeJrOjraF5TGp6NJy16KeV3IfwY/fkwz8L71hhZnh5O/P7jF5lacxZPJ
H6HrxVyn+BIyfmZDyI8/kxDeN2PWTvdmtkWIJpmH5/xdXsX8A6C2N2YjAAtP
KEUHXJltCkCIviBYX8D2qyUA9c8D/S+m0f4NZPrkH4hftG+elO9l46ZAbFEs
6vMqlPwD0bxyu2RUc/IPwliNPcKYfxBiEkUvf+hI+kE4rr9yTH+F/IPw4UBb
n0gj+c9soD8Tfrovnvc4QvozMdAekGzcMhMt1tVNCHpI/rPQfmkk18mfs+2N
9Geh+4tvRtxdRf6z0GZAxuQ/GtP8z4Y9PeST/2yszdwX06Mfzf9s/npYZiPM
3JTrtL7B2OVji3BmIxi9suK3Le9J8RCMuO2nDwfcJv/gBvklhPGTfwg6Ht14
f3IM+Yfg0OjBFcsuMtsSAvemiR+mLCD9UNzRtj4w8Q75h+Jx2chL4WMoXkOx
aaOtMdsSir0rtz52ekvxG4bW9gTHbIRhk+ULrtN+CcN6g1POFxfJPww/4mVZ
XmfaX3P4+wtzMKtof/GkAvKfg4Uje1wKWshsyxx8cWFJ1lqQ/1zGT/5z8ax9
wYlVAeQ/F50uJ3Fbkvzn4uKH/B2vIsk/HGWOV0atzCX/cNRe+1DDdeYfjgOO
HWc8OU3+4Qh3WTDXZQH5R2CcvZF/BGb8madVOpJ/BMbmrvJ+GUT+Edhcc7fQ
YzP5z+Pnc8yD5nFPL8d95D+PPz+Weei/4cr99BPkL/qP38RsgQhfqS64cjmW
vU+E95b/cZ3ZIhF8psnavZ9F7xfBflx0ZbZZBN+LTTu0iyE9EVweL7h804PZ
VhGWnZnulfg3rX8kLpy3NWYLIuH28bhC04z0I/n5WxSJbivOXOrQlvQj4X76
br/Td9m4ORJpq/NauOZSvETiYtoG7UAjs62RWPxkUMrKM6QfxV9/QRTq/j7f
aPUY0o+C1bLgs2ZOxB8Fl+B8H/M00o/CybOt6/d1Iv4o9G5auCU4lPij+OeH
lXvf72mvfOpJPxrbuGzf8TLxR/P3C6L554MoGnt+25rvuof2VzRs2e2Ynvij
cehlq2G+x4k/Gg9Uece/+JP4o/n7ySGmAX8Mf74RA0WSMWRHC+KPQerH5oc7
jif+GHTYtPpsfXvij0FATfOC/ULij8Gp62X1ecuIPwbliybcqp9D8SdGD1s5
+D3pi7HL78idP3+l+Rcje5Otkb4YHa6KB2+4Tvpi9E26nHVoJ+mLsUpwQ9vo
N9IX8/enVYyS/gLvzKWkHwt7+RBO+rGo03b6sDWD9GNRFOkk++E86cfieNPW
ExRZpB+Lq0W2RvqxKHwy8FnmR9Ln3n+1fO7VctKPxbXXPo+U+0k/Dpf82h7K
WEL6cUi6MuvG7qOkH8ff36K4BvVOHN5kr/yneAKzzXEIr1RwndmWOEyoPtg4
cgezrXFIW/ti4E491U/xrH5gtiAebrGyx8JFzEY8brn7u5XmMlsUz6/fTPEI
7drx6dho0o+HNLOPaHQG6cejze43/Zomkn48d8Kf8+8/jvQTIB1lO9FJPwH7
vNZ02b2J9BNwdkfQnwIV6Sdgxudrmh3YRvoJKL5qa6SfgJzw5dWZu0k/AdbE
6Ph84rEm4LcFtgKF9BOxItsGRPqJ+Kpb+SGnI6SfyL8viBLR811S+NYTpJ+I
RxlZolOZpJ+IupBbez3SSZ8bz85fv2gj6Sc2qF+T4FI9NX7AVtJPwoueqrUn
C0k/CcnV/ustO0mfG685IXtYTPpJ2Gc4X+2zj/ST+OtjSUKH314+yjxI+knQ
P3NKmb+a9JNZfiH9ZPzVrEPfEdNIPxl5uTeCvuxH+skQ/dhbHhRI+sngivuI
sRrST8aWFYMNwhDST0ZVj8z/3TOSfjIWrFN+LfiJ9FPA7c1Sxyukn4K4wOeP
plE8IoXPI0rBHveCbtE/k34KusxpNXhTGemn4HSGmyia1s+Sgltp62q5zvRT
8OOW8V4zaP0cUvnrK0hFl+6nXbufJv1UvF9Tqt+/mfRTsfTkPz0180k/FUJp
ofO+7aSfii8bbZ+59lfST+XHozUV52tSsjyKSD8N+/MqwpL2k34a2ku3vTpS
Qvpp6NBktpPHIdJPw0Qnb+m9taSfxt/v5jRkVE9q7/hp/tPgv6v0sXw46XPP
2xvpS/Dfe5jtLEHEtnDuD32PBJH+VS5vFzPbU8K/30GC/WVTuM5soQT/XK3Y
ejuZvleCKZvF47oKmS2RoHm19fb6QfT9Evb7ALMzJAibuu2HG0rikWBXefZs
VRizcyUom1wvDxxNfBIUp94JjnZjdokEJ+O6blwzlni5773Ri+vMrpPAPKzl
i1OTiF+KBHsjfik/3gRSSHbEfzMmlfilWFX7oCplFfFLUelUlPeZjPil+Nav
anRRMPFLMdj9+MyjlL8kUmwIV94UbyB+KWy3o2DKxxlSXA8a90EbSfxSKHX7
xI9ofXK552/ktRkaS/xSqHJ63Ts2lfilaFsaOi3Oi/ilqO4432c1zX+dFKY0
V98Eb+JP58+/czrExT5bm8uJPx055vINzWn+PdORfa3m2BI18afjafne4J8j
iD8dHjVHXD8fT/zp/PNBko4HB9v4np9M/OloFvT74VRP4k/nn2/mdIS7jewz
ic7T3HTcr/mnlW9n4k/HZ9neJQmfEX86Rixbcu3UEzpv0/Go22tnrSPxp8Ml
Lkz36iWdvzL8d31ktrMMP/X7LqftGzqPZfgl7iuuE78Mnfe8f7psAPHL+N8r
lGFkVVqe12Di554fdfa6C32vRIbEep/uRUOJX9Yg/mV4N+TAouBRxC9D0Zaj
JaYetP4y1Ja0tHXGL8PM4YfiBH2JX4ZB5SH/fE/fa5Uh5mNEp4P9iV+GYc0m
d9pG+9VBzn5fo/WX4+sy5d7HnWj95Yhe+KJvQRPil2OhfHVowXOqT+S44Ca2
Pq5gtlAO73+/SxhooXpFjpP3CtZbqR6TyKG8dj05+i+qn+RwyesXcJK+N0MO
/8udP+v8nuopOX9+c+VoWyjfOH4g8csR6iU812k68cuRUNqteybFt1WO40P3
3xwdQPxyLM1td+1MEvErEGW/wBO/AvETGz+fZCZ+BT8feCqwfWil1wra71Dw
86lQAVWtojL8U72iQJuKoBB/2s8SBXZrkpx76mj9FQgNqlg3REz8CpQXSnaL
/Wn9FfDd8abx0WHEr4BuTtHB8CDiV+Cg7fikeClRYI2qUdsplH+sCv7vdXUK
XLqxIN3gTvxK9nsq8SvRd+muEw7ziF/J36+eSrxrkZ+4g+IbSpTv9M7LofkX
KuH6bSzXiV8JVdfURkto/iVKTJ+23QNUD5qU6F+10KNqIfErMbLIOnU61Utm
JdS3O4aG0/rkKhFminixQkr8StjL67nEr0Rg5Z23AjoPrUo8NKyYulRE/Ep8
N+nRh32UvxxUsFXf7jHEr0KvSe09BlA+Fqjge/NdljPVD54qrD/XuPX1vcSv
4udzoQqXZ7Xb2ZbqTZEKadnBuEfnh0SFoL7Fo/XEY+L0L/zePIrqxQwVP97M
Kv75nqvC9T8OPOy3kvhV/PqrRIWYZjd9lVR/W1X8er9Ohb/+SDTXxRO/ukH+
V/PjRaDGvUz/C8mUPzzVCAgua6OgeIEaH8zbG8+j+ReqsT3vvakFxYtIjfDS
IVwnfjUEGt/FWVRfmtSYcfZKHzXFd4aaXy+Y1Tj8sYXRheI7Vw35spT7WZ/i
X431jfOMP4H41SitnfTtJQ/iV/PvG3Vq/vnooEHXJU8Djnchfg1u/FpZ/J7i
W6BBapj0ZXc6Xz01OJf/cchyyt/QoOXtbxqvnUH8GtivyyOJX4OSg/Wpf3+K
fw2/fjJpGuR/Db52THKt9yN+DbxGfVl6mM7HXA2+Cr2XEEX3PYsGq2w/p80h
fg1/v1o1KN146/VOH+LX8POlgxa9lFFcJ34tv14RaNHmTHe/PZSfPLUob9Fh
1BGaf2ixsiKe68SvhUQXkP56NvFr4bhoU493lG8lWghGPb/kTvWESYu3w3b0
bJ9G/Fp+PjVr+fepXC2+DhQ3vU/7x6Ll369KtPz9Y9Wi3+LK/X603+u0OHRS
P7DgO+LX4ciGkgg/ysfOOkT3qR5TRvWgQIdnfyveD6f7i6eOX99Ch/zyDjk/
0PwLdfjybfILMZ2vIh3WlQbMmEjxLdHhh9pNP43sTfw6jLL9PEnxkqHDzLjT
6txP8a9Dbd4YW2f8OnwfOu9OMe1Hiw79yzY1uUvxUqJDeas3Trdo/q06eD6Z
du9zipc6HS5UHGs0lvajg579fxzx6+GypY/qJe1ngZ5/P/fUY7HruCpfug9A
jyz9TXPhp/ynh19nZbTzMuLX4268b+NEqucleoRXiLlO/Hp+/srQo3h5/sYs
Wh+zHguWdxtes4X49YhwPBzueJj49ahOrOu8gO4rJXq0mWgyrM8jfj3/vlmn
h6yk8MNJyucOBmyZEPIigXicDZBn+1X2+VT/GuA27Jlvd+LxNCCnz3v9a+KB
gR9vQgP+rY9ofoJ4RAbUuJmb7aV4khgQtS5HfSCU+A38/ZphwPmQU+MeU7yY
DXjpX9zjIOXLXAM2mqP2PqB4sRjgYW/Eb8B25/LVi12J34Bj70Ycf0b1Yp0B
dx/kPv1RQPzGBvWfEXPL1hw4TvldYES2uzfXid+IA4/ufX6wJ/EbIew77VRX
+l6hEbUdtr881If4jfx8KDEiJ8HLKYjypcnIP58zjFhySNavB+VLs5F/f8g1
ou5mVoH/p9+3jIj9ZV7FO4qnEiPe3pt+49in+DdCXfaTedFE4jfi54F+JjXN
v8N8JNkv4MQ/H1FRAQsHfYr/+fx86TkfJTnHjC50/8R8FCpPb+nI3Qf+D7Qi
4Y0=
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 500.}, {0, 0.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8831129976947403`*^9, 3.883113015075946*^9}},
 CellLabel->
  "Out[372]=",ExpressionUUID->"6fe9f7b3-2ada-4e4c-981a-aba7b0b0287e"]
}, Open  ]],

Cell[TextData[{
 "There we go, it is now functional - nice and neat.\n\nNow we need to bias \
the coin such that the probability of Heads is 0.8.\n\n\
There\[CloseCurlyQuote]s ",
 Cell[BoxData[
 "BernoulliDistribution"], "InlineCode",ExpressionUUID->
  "d83fdc55-8e55-49eb-8422-175375c8803f"],
 " which \[OpenCurlyDoubleQuote]represents a Bernoulli distribution with \
probability parameter \[ScriptP]. Also known as the coin toss distribution or \
Bernoulli trial\[CloseCurlyDoubleQuote]. Since it literally says \
\[OpenCurlyDoubleQuote]coin toss\[CloseCurlyDoubleQuote] in there, we should \
try it out."
}], "Text",
 CellChangeTimes->{{3.8831130390122013`*^9, 3.883113085144611*^9}, {
  3.8831137911540127`*^9, 
  3.8831138726256437`*^9}},ExpressionUUID->"5052354a-c71d-47b9-8b3e-\
88514d7db537"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomVariate", "[", 
  RowBox[{
   RowBox[{"BernoulliDistribution", "[", "0.8", "]"}], ",", "10"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8831139233697443`*^9, 3.883113934947855*^9}},
 CellLabel->
  "In[373]:=",ExpressionUUID->"5a3d6054-10dd-475f-a171-a77366c0e171"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.883113935357386*^9},
 CellLabel->
  "Out[373]=",ExpressionUUID->"06e8e58e-72c0-4cc3-ad34-2206fccad2a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"biasedtosses", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"BernoulliDistribution", "[", "0.8", "]"}], ",", "500"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  FractionBox[
   RowBox[{"Count", "[", 
    RowBox[{"biasedtosses", ",", "1"}], "]"}], "500"], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  FractionBox[
   RowBox[{"Count", "[", 
    RowBox[{"biasedtosses", ",", "0"}], "]"}], "500"], "]"}]}], "Input",
 CellChangeTimes->{{3.883113955074422*^9, 3.8831139871158323`*^9}},
 CellLabel->
  "In[374]:=",ExpressionUUID->"e9286853-7cd9-432f-be7a-618e112040cb"],

Cell[BoxData["0.746`"], "Output",
 CellChangeTimes->{3.8831139876414003`*^9},
 CellLabel->
  "Out[375]=",ExpressionUUID->"5a95d7b6-58cd-4795-89e9-5575155d15f6"],

Cell[BoxData["0.254`"], "Output",
 CellChangeTimes->{3.883113987647524*^9},
 CellLabel->
  "Out[376]=",ExpressionUUID->"3124389b-71a3-46eb-8673-5231275a6e75"]
}, Open  ]],

Cell["Yes! Looks good! Let\[CloseCurlyQuote]s plot!", "Text",
 CellChangeTimes->{{3.883113994321312*^9, 3.883113997114921*^9}, {
  3.883114029768401*^9, 
  3.8831140456433573`*^9}},ExpressionUUID->"d35bade6-3e38-47e1-953a-\
5901f09e6197"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"MapIndexed", "[", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"Total", "[", 
        RowBox[{"biasedtosses", "[", 
         RowBox[{"[", 
          RowBox[{";;", 
           RowBox[{"First", "@", "#2"}]}], "]"}], "]"}], "]"}], 
       RowBox[{"First", "@", "#2"}]], "&"}], ",", "biasedtosses"}], "]"}], 
   ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8831140530823793`*^9, 3.8831140902407713`*^9}, {
  3.883114127647519*^9, 3.883114130415532*^9}},
 CellLabel->
  "In[381]:=",ExpressionUUID->"c3480547-3dc7-40de-992c-d5f171df6c93"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1: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
Kro9uiT/ryv9p8L7UvCay73pPxURNQcm/afCJXVpbOBQ+k/FNp9ZIXN70H8q
DtRNTvud8XFQCvUl+lfi9LOMox8YH1clykJeSqyMj4cSSx3lf2gYHyjRqabR
vxLdj9ySn+9G/0p4K1r8HtWH/pV4VeTqU8H5mpUobFZ946J/JVK/mej8biT9
K9FhwcFQaz/6V2KrxDF/4Hf0r8SNAa/X7R5O/0rMTFPXchlD/0rbjTLRvQHf
h+VKVCqG2Dr9q8T3TWcVFsPxcEd+f7iqxO9XDxWMfg+K9vN7Dyrx97GvCpXf
RNk6/atwZ/40hE2ifxXG+g2LyuN8zSpsfD3a1ulfhRtP71qlnK9Fhf059fVb
Od9su/laVQhQ9LV1+lchR/HoYuZA+reNj9dsO8H4lqtQXPT6RTHj66BGzXWn
P/2r8Xhoz3N5jK+rGjflP/T5mevpoYasj2GOlfkHNTosH/TyLPPdVw3/EZfG
POJ+lqjRUl12/DPuZ6kazwpiir9m/pjV4nxPU6NvvnxCe+a7RY12ivkXWvei
fzW+8mv+p5zngVWN+S9b2l6R9K/GhQfyY8Hcn6Vq1P5i+P4RzL9yNWp9NvuU
G/PPQYOPPuhfI46vqwbaB016rhtL/xr8+bVyRIgf/Wsw5PEOazN+T/tqMPbw
3n2/BdO/Rvz9JtXgh4EKj5ax9K8R3x/SNNh59e1LBfPJohHfJ7I1SHLyevsT
7zNWjfh+UaiBun23dkc+fe9rxPeNcg2q1GUlu2fQv1Z8/3DWwuU//w0L+H3r
qhXfRzy0KIxtcXbkD/SvFd9PfLWIbr9jw77F9K/FH2U9xn+ZTv9a7EqrGDWJ
90+zFuvXVTf612JD1Qb/W5/us1psiwnTufA+nq1F8YkObcbwfmzVIjip/jg1
652FWvi5LOl3lvXbUq34Pl+uRZp7VIdvsuhfh6Y1LyD61+Hc0Vcr97Ie6apD
QbpXrUvb6V+HiZ3d60z7VC/Vie/vvjrsyanj0TqN/nXi+5JUh94h7offzKN/
HbpUtfJvwvtAmg7plSGn3Bkviw7yzDrNBzFe2Trx/dmqQ1bnpct9GK9CHd7k
Wf168/5XqsMMhbaiP+tJ5Tq81rXZ2m89/etx37P6Hwb0r8fv825V9VtJ/3rk
SkI9eqyhfz1aXNEubptJ/3q01RmafcV4+ert6lV6cT1bqsdY8/tvnRgvs15c
/03T40GmtLsH88uih6fz2v7OzK9sPebumbLh70/1PD0G6aIST/xE/3roHVN2
LdtB/3ok5NaOCmQ9pFyPgq+3bW61n/4N4vqnswEBsQsvrfqF/g1IuDv18ijW
Bz0MOK2eYKg8Rf8G1FwPj9C/AXnloZoex+nfgNurJs0vJl9qENfrzAbMqnJ6
3p71uDQDGrRtnXiGfIsBw8KU52fxfp9tENejrAZxvAsNKFJd+TGD8S41iP8f
UG5AtKf33t/JdzCK60PORuRV3tG/yKV/I840ybupYb3Kwwjvm4XpctazYISl
6tjGKvJ9jTj9i5OHE+MtMeLtpNV307i/pEZ0KYzZ3vRT/dKIyC6z5q1kvT/N
iP85XZ/fgPU5ixG9bow/MKuA/o1o4XLI+RXrlVYjdoRe2B56gf6N6L7/e/Np
1m9LjXDMyN3UifXMciM2jPy1ydzr9G/CndvVjf5NaG9SOPa6S/8m7Jh1dfss
8j1MKHu6eEcR+TDB3ed4G6/f6d8EzfVVz5dcpn8TCn8M6n6LfKkJwY6DH7rd
oH8TZOecs34iP82E+rXG935OvsWEik37BvdhPTXbhASXIVeV5FtNKOlR9mH/
Hfo3ISDzzb1x/H9JqQlxxn/+WkR+uQk3+2cZC8h3mIESfXUBnf5niOvFrjNQ
f1W598RH9D8DO2Lfr9eV0f8MZLWqrrg/GvL/n5oZAA==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.6849698535745066},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 500.}, {0.6849698535745066, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.883114090832711*^9, 3.883114130745352*^9},
 CellLabel->
  "Out[381]=",ExpressionUUID->"edbe87c7-8c58-4b0b-b4de-9fc158e39834"]
}, Open  ]],

Cell["And thus concludes the exercise!", "Text",
 CellChangeTimes->{{3.883114140703319*^9, 
  3.883114150116377*^9}},ExpressionUUID->"8a4ec082-23ab-4036-b6ab-\
b52a4783e1bd"]
}, Closed]],

Cell[CellGroupData[{

Cell["Exercise 4.4", "Subsection",
 CellChangeTimes->{{3.883184441854003*^9, 
  3.883184444603794*^9}},ExpressionUUID->"75547057-7160-4294-9458-\
76a6d5619b62"],

Cell["\<\
Consider a spinner with a [0,1] scale on its circumference. Suppose that the \
spinner is slanted or magnetized or bent in some way such that it is biased, \
and its probability density function is \[ScriptP](\[ScriptX]) = \
6\[ScriptX](1-\[ScriptX]) over the interval \[ScriptX] \[Element] [0,1].\
\>", "Text",
 CellChangeTimes->{{3.883184459485258*^9, 3.883184840220702*^9}, 
   3.883185584535277*^9, 
   3.883185649305139*^9},ExpressionUUID->"d51369ca-96b1-4caa-a467-\
5dab9f8f4bfa"],

Cell[TextData[{
 "Adapt the program ",
 Cell[BoxData[
  RowBox[{"IntegralOfDensity", ".", "R"}]], "InlineCode",ExpressionUUID->
  "047e64cd-4acf-4b4b-bb88-f57db771bae2"],
 " to plot this density function and approximate its integral. Comment your \
code. Be careful to consider values of \[ScriptX] only in the interval [0,1]. \
",
 StyleBox["Hint: ",
  FontSlant->"Italic"],
 "You can omit the first couple of lines regarding ",
 Cell[BoxData[
 "meanval"], "InlineCode",ExpressionUUID->
  "cd9b4f1d-fcfd-4ad8-ad29-35584cdd36d7"],
 " and ",
 Cell[BoxData[
 "sdval"], "InlineCode",ExpressionUUID->
  "95e60265-0bad-4d3c-bff1-2265c56d7289"],
 ", because those parameter values pertain only to the normal distribution. \
Then set ",
 Cell[BoxData[
  RowBox[{"xlow", "=", "0"}]], "InlineCode",ExpressionUUID->
  "cc11540e-9442-4a54-a8c2-06ba484703d9"],
 " and ",
 Cell[BoxData[
  RowBox[{"xhigh", "=", "1"}]], "InlineCode",ExpressionUUID->
  "f96e64b9-1c40-447d-959e-e204b3393635"],
 ", and set ",
 Cell[BoxData[
 "dx"], "InlineCode",ExpressionUUID->"82650c7c-fd79-47f8-b07d-237559d68179"],
 " to some small value."
}], "ItemNumbered",
 CellChangeTimes->{{3.883184459485258*^9, 3.883184840220702*^9}, 
   3.883185584535277*^9, {3.883185663805275*^9, 
   3.883185671280311*^9}},ExpressionUUID->"15e65fbe-19a2-458c-a2a1-\
51102eed7e19"],

Cell["Derive the exact integral using calculus.", "ItemNumbered",
 CellChangeTimes->{{3.883184459485258*^9, 3.883184840220702*^9}, 
   3.883185584535277*^9, {3.883185663805275*^9, 
   3.883185673954626*^9}},ExpressionUUID->"3051653b-3474-4fcd-9099-\
490e93a1b799"],

Cell["Does this function satisfy equation 4.3?", "ItemNumbered",
 CellChangeTimes->{{3.883184459485258*^9, 3.883184840220702*^9}, 
   3.883185584535277*^9, {3.883185663805275*^9, 
   3.883185676146668*^9}},ExpressionUUID->"1d3ee48e-f758-478d-b022-\
d641b6b2aa4e"],

Cell["\<\
From inspecting the graph, what is the maximal values of \
\[ScriptP](\[ScriptX])?\
\>", "ItemNumbered",
 CellChangeTimes->{{3.883184459485258*^9, 3.883184840220702*^9}, 
   3.883185584535277*^9, {3.883185663805275*^9, 
   3.883185677558251*^9}},ExpressionUUID->"16db0386-5ad1-437b-893e-\
a999670aaa0c"],

Cell["Here is the R code from the file:", "Text",
 CellChangeTimes->{{3.8831857655862637`*^9, 
  3.883185774705653*^9}},ExpressionUUID->"382c0ef1-d24d-4ee7-85ca-\
af1c9b5aac96"],

Cell["\<\
source(\"DBDA2E-utilities.R\")
# Graph of normal probability density function, with comb of intervals.
meanval = 0.0               # Specify mean of distribution.
sdval = 0.2                 # Specify standard deviation of distribution.
xlow  = meanval - 3.5*sdval # Specify low end of x-axis.
xhigh = meanval + 3.5*sdval # Specify high end of x-axis.
dx = sdval/10               # Specify interval width on x-axis
# Specify comb of points along the x axis:
x = seq( from = xlow , to = xhigh , by = dx )
# Compute y values, i.e., probability density at each value of x:
y = ( 1/(sdval*sqrt(2*pi)) ) * exp( -.5 * ((x-meanval)/sdval)^2 )
# Plot the function. \"plot\" draws the intervals. \"lines\" draws the bell \
curve.
openGraph(width=7,height=5)
plot( x , y , type=\"h\" , lwd=1 , cex.axis=1.5, xlab=\"x\" , ylab=\"p(x)\", \
cex.lab=1.5, main=\"Normal Probability Density\" , cex.main=1.5 )
lines( x , y , lwd=3 ,  col=\"skyblue\" )
# Approximate the integral as the sum of width * height for each interval.
area = sum( dx * y )
# Display info in the graph.
text( meanval-sdval , .9*max(y) , bquote( paste(mu ,\" = \" ,.(meanval)) ), \
adj=c(1,.5) , cex=1.5 )
text( meanval-sdval , .75*max(y) , bquote( paste(sigma ,\" = \" ,.(sdval)) ), \
adj=c(1,.5) , cex=1.5 )
text( meanval+sdval , .9*max(y) , bquote( paste(Delta , \"x = \" ,.(dx)) ), \
adj=c(0,.5) , cex=1.5 )
text( meanval+sdval , .75*max(y) ,bquote( sum({},x,{}) *\" \"* Delta *\"x \
p(x) = \"* .(signif(area,3)) ) ,adj=c(0,.5) , cex=1.5 )
# Save the plot to an EPS file.
saveGraph( file = \"IntegralOfDensity\" , type=\"eps\" )\
\>", "ExternalLanguage",
 CellEvaluationLanguage->"R",
 CellChangeTimes->{
  3.883185088226735*^9, {3.883185331344801*^9, 
   3.8831854008958883`*^9}},ExpressionUUID->"a34606dc-bfa5-498b-b875-\
6b4beb802131"],

Cell[TextData[{
 "That\[CloseCurlyQuote]s ",
 StyleBox["a lot",
  FontSlant->"Italic"],
 " of code just to display graphs. Disregard those lines, and we are left \
with a few important lines:\n\n# Specify comb of points along the x axis:\nx \
= seq( from = xlow , to = xhigh , by = dx )\n\n# Compute y values, i.e., \
probability density at each value of x:\ny = ( 1/(sdval*sqrt(2*pi)) ) * exp( \
-.5 * ((x-meanval)/sdval)^2 )\n\n# Approximate the integral as the sum of \
width * height for each interval.\narea = sum( dx * y )"
}], "Text",
 CellChangeTimes->{{3.883186075617135*^9, 3.8831861213140287`*^9}, {
  3.883186179375392*^9, 3.8831862329566393`*^9}, {3.883188518717619*^9, 
  3.883188520472321*^9}},ExpressionUUID->"46b99432-8b52-4233-9b84-\
4260c9b8a778"],

Cell[TextData[{
 "Fairly straight forward. Initially I thought we are going to use ",
 Cell[BoxData[
 "NormalDistribution"], "InlineCode",ExpressionUUID->
  "a3764118-c4fe-4a56-8d9a-79ddf5fb1a18"],
 " function, but no. This is just calculating values of \
\[OpenCurlyDoubleQuote]probability density\[CloseCurlyDoubleQuote] in a range \
(0 to 1) with some interval and plots the values. Can we find some excuse to \
use ",
 Cell[BoxData[
 "NormalDistribution"], "InlineCode",ExpressionUUID->
  "9d9d82a4-9ae9-4ae2-9bd2-7450f951a5b7"],
 "?\n\nAnyway, here we go:"
}], "Text",
 CellChangeTimes->{{3.8831887216096783`*^9, 
  3.883188835674752*^9}},ExpressionUUID->"fc4cc438-02a4-406b-973c-\
7c69e34fb590"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Mu]", "=", "0.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]", "=", "0.2"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]", "=", "0.02"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[ScriptY]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"6", "x", 
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1", ",", "\[Delta]"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"\[ScriptY]", ",", 
     RowBox[{"Filling", "->", "Bottom"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", "\[ScriptY]", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.883187585408163*^9, 3.883187595936945*^9}, {
  3.8831876301659803`*^9, 3.883187633606574*^9}, {3.883187858791003*^9, 
  3.883187889455709*^9}, {3.883187934396735*^9, 3.8831879509784107`*^9}, {
  3.883187996699319*^9, 3.8831880423067017`*^9}, {3.883188091713745*^9, 
  3.8831881649700003`*^9}, {3.8831882306962137`*^9, 3.883188236329732*^9}, {
  3.883188293165338*^9, 3.883188304411882*^9}, {3.883188662314987*^9, 
  3.883188665979787*^9}, {3.883190171391608*^9, 3.8831901727963963`*^9}, {
  3.8831905092643747`*^9, 3.88319051488844*^9}, {3.883190759785709*^9, 
  3.883190762611252*^9}, {3.883200997639289*^9, 3.883201014096323*^9}},
 CellLabel->"",ExpressionUUID->"5dd4cd29-1a7a-414c-ba55-a8f30a2995c4"],

Cell[BoxData[
 GraphicsBox[{{{}, GraphicsComplexBox[CompressedData["
1:eJztld9L01EYxoc3ld7aVTQxKIzsquv1XARpV6GQVAyEQVlhaYRiC9GCFXQj
ZFAus0CjX7ibxDRikQkhOcvc2GbTtjbdpmtZua3Ldr7nfc84A/+DHRhfPjvn
vD+ecx5Ota2t8UyZyWS6l/+Jb/G4Vumqi9jvYm9HmXP7Ljckj+DOp576d90e
TJgd6w0TLvQELVdPPvPR/Bhau+xPao+E4BwQYxLHInYxQ+vd2Pzmv37laAyp
BvHPe1hqvc7V3XHaP42qr23N2+aSKPcPt1vKP+Kx58VnX1OK4s3gjREnjf3W
vqlMzSxe20QFGxR/Dt/DFf3Pb/zGSH63f/gLfDvO7Wnt+kP55nF/qf+W4/Rf
HDLGAmqMOJuU34v85MLb6CY+ZMSMD69OZSYXb2eoHj9cgebO4+YsGo2EAXQK
eYayVF8QFca6HGTbi7jU1O0at+Wo3hCGevdN3Xyaw2VRXvsSBk88ejkayFH9
y2jxxS8cyOYgTyFM33/UT1jN15OuD2i/7C+ChxRfZLP2/cBFyi/7jVIfOch2
ouig+mX/MYxSf1WiHPOK6l/qsaL0aTkrxqrST8aNY4D0FdEqXXF4SX+pV0Kd
T9bYmMA4nZ/UL0k6pHHYCLiGQTp/2e4aqul+GOU51tX9kfqmkKH75ZkVI4U6
0knq/RPn6X7uNApMw073l/MO0P02wll/4SDdf3kOGyj2h84jitkf+vyYYvaH
vt6tmP2h759WzP7Q480oZn/o8ecUsz/0fPOK2R96fq9i9odej18x+0OvL6iY
/aHXG1LM/tDrX1YsR7ionwKzP/T+Csz+0PuNKmZ/6P3HFLM/dD0KzP7Q9Ykr
Zn/oeiUUsz90/ZKK2R/M7A9m9gcz+4OZ/cHM/mBmfzCzP5jZH6YtRun9KL0f
pfdj6/fjP1Pc7MY=
     "], {{{}, {}, {}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
        LineBox[{52, 2}], LineBox[{53, 3}], LineBox[{54, 4}], 
        LineBox[{55, 5}], LineBox[{56, 6}], LineBox[{57, 7}], 
        LineBox[{58, 8}], LineBox[{59, 9}], LineBox[{60, 10}], 
        LineBox[{61, 11}], LineBox[{62, 12}], LineBox[{63, 13}], 
        LineBox[{64, 14}], LineBox[{65, 15}], LineBox[{66, 16}], 
        LineBox[{67, 17}], LineBox[{68, 18}], LineBox[{69, 19}], 
        LineBox[{70, 20}], LineBox[{71, 21}], LineBox[{72, 22}], 
        LineBox[{73, 23}], LineBox[{74, 24}], LineBox[{75, 25}], 
        LineBox[{76, 26}], LineBox[{77, 27}], LineBox[{78, 28}], 
        LineBox[{79, 29}], LineBox[{80, 30}], LineBox[{81, 31}], 
        LineBox[{82, 32}], LineBox[{83, 33}], LineBox[{84, 34}], 
        LineBox[{85, 35}], LineBox[{86, 36}], LineBox[{87, 37}], 
        LineBox[{88, 38}], LineBox[{89, 39}], LineBox[{90, 40}], 
        LineBox[{91, 41}], LineBox[{92, 42}], LineBox[{93, 43}], 
        LineBox[{94, 44}], LineBox[{95, 45}], LineBox[{96, 46}], 
        LineBox[{97, 47}], LineBox[{98, 48}], LineBox[{99, 49}], 
        LineBox[{100, 50}]}}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.011000000000000001`], AbsoluteThickness[1.6], 
       PointBox[{101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 
        113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 
        127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 
        141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 
        151}]}}], {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxdU0tIG1EUDW7amq2uxIiFiqKuXMezEKpdFQWlSkAIqFX8FVE0ItpCWnAj
aBdNtCqo+MPZtPhDFD8gRaNtzZBoY00aNX5iamtmxqV5711n4YXhMXPfPfec
c++kWhuKKuIMBkNO7GHnw2hPkPIDto941hznfJy0DPE+it6tzoKVDhfmTfbL
wnkJnfvmtlcTMuW/orbVNpaV54PTwWIBLwI2lqH7y4j+8rxten6McCH7sgpz
ltt5mhyi+g2k/Gwof7RzjnjPSKM5fhPDrqlduSRMeN+wyHEiyLD0rCnp25iz
MgbXhL+DI7+xb/LdP4zGqj0j3yE/ef20tvU/9fuBT4d9H+xlN8jhsYd0jhOl
/m7EkntLwSjWFZaR8aVUWTjoVoiPB5K3vOWlSUURb+hFC7NnUCV++zDyexqE
7APUl3RIs1aN+Pow2JW29n5cwxtGr/EQA8VD0zNejfj/RpUcqslUNYgp+Om8
JT1+PV9AvvZTvdAXwGfCZ90sPX9QR/2F3iDp0CDkBNFM/IX+Y8yQvhRGx3Si
6xd+nOj+VFWyONX9E7ghOMhfhpYgheAm/4VfZ/p8VF54hlman/DvnHyIIJcD
XmCA5i/kXiCV9oPTs1/q+yP8DUOh/XJtswgjn3wSfl+hmvYzkROMwEb7e9/X
QfvN4Sx/kU37L+Zwjfv/4w51WZRp
       "]]}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1.}, {0, 1.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8831881655206623`*^9, 3.883188305667776*^9, 
  3.8831886666212378`*^9, 3.883190173627359*^9, 3.8831905154693108`*^9, 
  3.883190763050518*^9},
 CellLabel->
  "Out[293]=",ExpressionUUID->"eaf36964-7799-4eaf-8901-7ae933abd41c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"area", "=", 
  RowBox[{"Total", "[", 
   RowBox[{"\[ScriptY]", "*", "\[Delta]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.883188617221469*^9, 3.883188687525371*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"ad8684c6-3d66-46d7-a594-03da61620a64"],

Cell[BoxData["0.9996`"], "Output",
 CellChangeTimes->{{3.883188631660054*^9, 3.883188690614799*^9}},
 CellLabel->
  "Out[102]=",ExpressionUUID->"5386ea85-9e09-4f66-b025-0681e13cc6cf"]
}, Open  ]],

Cell["\<\
I am curious how the plot looked liked with the original equation.\
\>", "Text",
 CellChangeTimes->{{3.8831890016708*^9, 3.8831890131019583`*^9}, {
  3.883189177778242*^9, 3.883189178151442*^9}, {3.883189726455008*^9, 
  3.8831897268845882`*^9}},ExpressionUUID->"76fc9c54-3bc7-49af-b788-\
3a55282a8ef1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Mu]", "=", "0.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]", "=", 
   FractionBox["\[Sigma]", "10"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[ScriptY]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"\[Sigma]", "*", 
          RowBox[{"\[Sqrt]", 
           RowBox[{"(", 
            RowBox[{"2", "\[Pi]"}], ")"}]}]}]], "*", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "0.5"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], ")"}], "2"]}], 
          ")"}]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"(", 
        RowBox[{"\[Mu]", "-", 
         RowBox[{"3.5", "*", "\[Sigma]"}]}], ")"}], ",", 
       RowBox[{"(", 
        RowBox[{"\[Mu]", "+", 
         RowBox[{"3.5", "*", "\[Sigma]"}]}], ")"}], ",", "\[Delta]"}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"\[ScriptY]", ",", 
     RowBox[{"Filling", "->", "Bottom"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"\[ScriptY]", ",", 
     RowBox[{"Filling", "->", "Axis"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.883189025971561*^9, 3.88318920694726*^9}, {
   3.883189246231558*^9, 3.8831892542213993`*^9}, {3.883189335567402*^9, 
   3.88318938585471*^9}, {3.8831894321651154`*^9, 3.8831894678971148`*^9}, {
   3.883189498116433*^9, 3.883189516112873*^9}, {3.8831895524748487`*^9, 
   3.883189568157319*^9}, {3.8831896540735683`*^9, 3.8831896658502417`*^9}, {
   3.883189737671686*^9, 3.883189739286765*^9}, 3.8831897902129593`*^9, {
   3.8831899088041067`*^9, 3.8831900656986313`*^9}, {3.8831901398180323`*^9, 
   3.8831901423230133`*^9}, {3.8831905287440033`*^9, 3.8831905362859077`*^9}},
 
 CellLabel->
  "In[284]:=",ExpressionUUID->"25c39d78-c776-4a43-bbc6-848d61209fc3"],

Cell[BoxData[
 GraphicsBox[{{{}, GraphicsComplexBox[CompressedData["
1:eJztlu9PlWUYx0+tF47M1mzVThtJGRFjvkjTF0FfkyjYeoM/KKcS0/mD7OTB
F4yoHLh0vsgwc2bJ3EmIMWaK21njmD1XIshcyASxoCnIwUM/DiotTzlXEc9z
Xd/Tjn9Ar7g3xvnsee7rue77vq7P7oy1W5auv9vn812c+nP/b9zgjjH57kZ3
tHS4AqcTWavr2mOybM2mvWW5b+OxHfHitvSYvFq+Ymt9Qy3eefDoyyPVVyWU
/fx2p3wXBhqCeWk/jMqthux90cgeLJjvjlGZs/xc3S+t+7Gn3Q0YlcNzAxX+
6kMYn4q2Iz4iDw30bqrKb0ThSLUbUT7ftcip/LIFjW64hisyu2fBvUNrj8Pn
jSsynjn8xpEtXyGS7iY0JGM9c1bntZxEhft68LI0rfx6tj+jHU9PZZ/IuiTv
hgpfzAqfQdQL/6Okh7+JFGR247NP3TEonXOLD0+81IulbjrFA3JPxTOvY7If
brSpkLItN9Z3IH8QXvrtF+Wty8FHax4ZsvX3y/h46eJiGYG33PkXJLNp55tp
kauIe+vrlYLE4wXf3/zJ1nNedvtrr72wOQ7vc2090unMK730wA1kefl2y8ay
8r76wG844OV3Vt6/PlxVt+p3zPDy6RL/fYkZgaIEqrzvd8i5tGUzozl/2n6e
kvDBm2OJ27csviM/B544GGy+bfEi8lpz85JXsv+y+WHJa130VE7l32j13j8q
rS1dH/Rt/wdB73mj5D+5Jr67cBJlHu+TFQsr9+4/NWnnEcqN5Z+tKfl1EiF9
juX2vEbnY4nN/1bj45jF1+dhPGffD2l+KLH89H0HY5b/hK4Px219Or8DXbb+
mbo/eNj2p173D7W2fzm6v1hn+3tS9x+O7X+Tng922vlc1/NDnp3fQj1fpNv5
btPzR8zO/4zWB1ZZfczS+kHA6qdE6wt/BLW+Dmn9oc3qz+oTrM9srV+wfrdq
fYP1fULrH6z/u7Q/MGr98YX2D+63/inS/sIn1l/XtP8wy/rvI+1PfGz9+az2
L/zWv4Pa35iw/n5P+x8fWv9nqB9QZH7oVH9gsfmjXP0Cx/xC3/hs0Ddk+oZM
35DpGzJ9Q6ZvyPQNmb4h0ze+lPEf0zdk+oZM35DpGzJ9Q6ZvyPQNmb5JXX9/
kukbMn2Tup7zSaZvyPQNmb4h0zdk+oZM36TGd+6IF7ljfjjJ9A2ZviHTN76U
EcpN/jLfkOkbMn2T+jycZPom9X0nyfRN6vyOJNM3ZPqGTN+Q6RsyfUOmb8j0
DZm+IdM3ZPqGTN+Q6RsyfUOmb8j0DZm+IdM3ZPqGTN+Q6RsyfUOmb8j0DZm+
IdM3ZPqGTN+Qp+830/eb6fvN9P3m/7rf/AtKgq2r
     "], {{{}, {}, {}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
        LineBox[{72, 1}], LineBox[{73, 2}], LineBox[{74, 3}], 
        LineBox[{75, 4}], LineBox[{76, 5}], LineBox[{77, 6}], 
        LineBox[{78, 7}], LineBox[{79, 8}], LineBox[{80, 9}], 
        LineBox[{81, 10}], LineBox[{82, 11}], LineBox[{83, 12}], 
        LineBox[{84, 13}], LineBox[{85, 14}], LineBox[{86, 15}], 
        LineBox[{87, 16}], LineBox[{88, 17}], LineBox[{89, 18}], 
        LineBox[{90, 19}], LineBox[{91, 20}], LineBox[{92, 21}], 
        LineBox[{93, 22}], LineBox[{94, 23}], LineBox[{95, 24}], 
        LineBox[{96, 25}], LineBox[{97, 26}], LineBox[{98, 27}], 
        LineBox[{99, 28}], LineBox[{100, 29}], LineBox[{101, 30}], 
        LineBox[{102, 31}], LineBox[{103, 32}], LineBox[{104, 33}], 
        LineBox[{105, 34}], LineBox[{106, 35}], LineBox[{107, 36}], 
        LineBox[{108, 37}], LineBox[{109, 38}], LineBox[{110, 39}], 
        LineBox[{111, 40}], LineBox[{112, 41}], LineBox[{113, 42}], 
        LineBox[{114, 43}], LineBox[{115, 44}], LineBox[{116, 45}], 
        LineBox[{117, 46}], LineBox[{118, 47}], LineBox[{119, 48}], 
        LineBox[{120, 49}], LineBox[{121, 50}], LineBox[{122, 51}], 
        LineBox[{123, 52}], LineBox[{124, 53}], LineBox[{125, 54}], 
        LineBox[{126, 55}], LineBox[{127, 56}], LineBox[{128, 57}], 
        LineBox[{129, 58}], LineBox[{130, 59}], LineBox[{131, 60}], 
        LineBox[{132, 61}], LineBox[{133, 62}], LineBox[{134, 63}], 
        LineBox[{135, 64}], LineBox[{136, 65}], LineBox[{137, 66}], 
        LineBox[{138, 67}], LineBox[{139, 68}], LineBox[{140, 69}], 
        LineBox[{141, 70}], LineBox[{142, 71}]}}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.011000000000000001`], AbsoluteThickness[1.6], 
       PointBox[{143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 
        155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 
        169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 
        183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 
        197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 
        211, 212, 213}]}}], {{}, {}}}, {{}, GraphicsComplexBox[CompressedData["
1:eJztVNlL1GEUnaIHMSuiqJjAssxMpIcsfUg7llkKvbhWZCZGqdXk6IOYlaik
+JBpFmYlMamJSIvCEE7L3DQXIpU0Kw1zGRtbxi1yKqQyf79751/oyQvD8ON+
3/nucs5xi08OPzZfo9EUzf6U/4TjSozQy4k2S+xACp7bPWMKG60UcTixOM7/
DNbk2sLqXa20PykqtawiG2eX3987lPGRDF47csxJ+eip0Ac4vxumXxVeVy2m
Imz1UWKY1ka2F36pLUFRowJooXJ3XYo24xZGZ9FybUO0oqczMT2oEiFDGQoi
3c73M6fdq0GlAlcxSMs6ti7sj6+DRo1BGvUYOHE3+SFMrkpB/TTSsTYmoOYJ
UpTj+g9UdfDxMq1bIzbNVm/37KNzhpDdnsYWWFT49+RqfGoK9mjDjetK9FKz
e1j55J5OhCvlhPXQgpQtRzDTDQVtFpIy/a1dpUG9UMtvfEOnP+hXZ63ql/67
aXQ0NjCMhqC26/OaPKryTjmbPsKm9tdJwfZ1wW+nPkk/r6hAmz2286QN6nP1
HdRs3hzbt3QCnmq9bZQQl9RVpvuGUrW+F3RhfCC98NB3OKn1tJJ2kd1JF2pH
uvp+E7U7R7hYvH/KPBvIeHNqxD79S/DN9Fm3/qa+elrwTHSgunrXPq/fct9I
AbV+G73T/qBWPX+famtaL3bl/IVezVdS0IbDtoKQGcSp31cpyjetuKRhRvZh
8LcGvciK/joDA+cRKfksvo9dcv8Z4+OB4HPeiO3yvoHrQ7TUx+fNGJH6J7k/
1El/fL8JrdK/C88HK2U+ZTw/ZMv8vHm+OCrzfcLzh1nmX8X7QZ7sZ5z3hwDZ
ny/vF66y30zeP6yy/xbmBw4JPxYzf6AT/kQzv/BDz/y6xfxDvfBP+AkHP72Y
v3DwN5X5DQe/HzH/4eD/PNYHhkUfd1g/WCL6CWV94Zroa4z1h8Wiv8usT1wR
fW5j/UIr+u1lfWNS9H2e9Y9Lon839geEij80s38gUPwjif0FZvEXh99oJBx5
x/ecH8350ZwfzfnR//Kjf6vAj14=
     "], {{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[{{1, 72, 73, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 
          60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 
          43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 
          26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 
          9, 8, 7, 6, 5, 4, 3, 2}}]]}, {}, {}}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         NCache[
          Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
        LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
         18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
         35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
         52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
         69, 70, 71}]}}}], {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.7000000000000001, 0.7000000000000003}, {
    0, 1.9947114020071635`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.883190029639192*^9, 3.883190066412418*^9}, 
   3.883190142863592*^9, 3.8831905369608603`*^9},
 CellLabel->
  "Out[288]=",ExpressionUUID->"dfdae4d6-192d-4fd1-949c-dcca54914ace"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", "1"], 
   RowBox[{"6", "x", 
    RowBox[{"(", 
     RowBox[{"1", "-", "x"}], ")"}], 
    RowBox[{"\[DifferentialD]", "x"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8831909702300997`*^9, 3.8831910356611433`*^9}, {
  3.883191074497313*^9, 3.883191090487831*^9}},
 CellLabel->
  "In[295]:=",ExpressionUUID->"be5cce75-1641-4c0d-94ca-15f5b278dd41"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.8831909965211973`*^9, 3.883191090948834*^9},
 CellLabel->
  "Out[295]=",ExpressionUUID->"3881dbb2-0100-4457-9dc9-3eb85bfeb51b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["integrate 6x(1-x) from 0 to 1", "WolframAlphaLong",
 CellChangeTimes->{{3.883191120262102*^9, 3.883191130243546*^9}},
 CellLabel->
  "In[296]:=",ExpressionUUID->"cf0392d9-bffc-46c7-b163-89f8e80a6422"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "integrate 6x(1-x) from 0 to 1", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}, 
    PodStates -> {
     "IndefiniteIntegral__Step-by-step solution", 
      "Input__Step-by-step solution"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Definite integrals", "scanner" -> "Integral", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "2", 
     "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Integrate[6 (1 - x) x, {x, 0, 1}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{
                 SubsuperscriptBox["\[Integral]", "0", "1"], 
                 RowBox[{
                   RowBox[{"6", " ", "x", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "x"}], ")"}]}], 
                   RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
              "\[LongEqual]", "1"}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> "Possible intermediate steps"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{"\"Compute the definite integral:\""}, 
                    "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    RowBox[{
                    SubsuperscriptBox["\[Integral]", "0", "1"], 
                    RowBox[{
                    RowBox[{"6", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "x"}], ")"}], " ", "x"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{None}}, "Rows" -> {{0.5}}}], "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{"\"Factor \"", "\"out \"", "\"constants:\""},
                     "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{"6", 
                    RowBox[{
                    SubsuperscriptBox["\[Integral]", "0", "1"], 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "x"}], ")"}], " ", "x"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}]}, "RowDefault"]}},
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"For \"", "\"the \"", "\"integrand \"", 
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "x"}], ")"}], " ", "x"}], "\",\"", 
                    "\" \""}, "RowDefault"], "\"substitute \"", 
                    TemplateBox[{
                    RowBox[{"u", "\[LongEqual]", 
                    RowBox[{"1", "-", "x"}]}], "\" \""}, "RowDefault"], 
                    "\"and \"", 
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"\[DifferentialD]", "u"}], "\[LongEqual]", 
                    "\"-\""}], "\"\[ThinSpace]\""}, "RowDefault"], 
                    TemplateBox[{
                    RowBox[{"\[DifferentialD]", "x"}], "\".\"", "\"\\nThis\"",
                     "\" \""}, "RowDefault"], "\"gives \"", "\"a \"", 
                    "\"new \"", "\"lower \"", "\"bound \"", 
                    TemplateBox[{
                    RowBox[{"u", "\[LongEqual]", 
                    RowBox[{"1", "-", "0"}], "\[LongEqual]", "1"}], "\" \""}, 
                    "RowDefault"], "\"and \"", "\"upper \"", "\"bound \"", 
                    TemplateBox[{
                    RowBox[{"u", "\[LongEqual]", 
                    RowBox[{"1", "-", "1"}], "\[LongEqual]", "0"}], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{"6", 
                    RowBox[{
                    SubsuperscriptBox["\[Integral]", "1", "0"], 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"u", "-", "1"}], ")"}], " ", "u"}], 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}]}, "RowDefault"]}},
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Expanding \"", "\"the \"", "\"integrand \"", 
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"u", "-", "1"}], ")"}], " ", "u"}], "\" \""}, 
                    "RowDefault"], "\"gives \"", 
                    TemplateBox[{
                    RowBox[{
                    SuperscriptBox["u", "2"], "-", "u"}], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{"6", 
                    RowBox[{
                    SubsuperscriptBox["\[Integral]", "1", "0"], 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["u", "2"], "-", "u"}], ")"}], 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}]}, "RowDefault"]}},
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{
                    "\"Switch \"", "\"the \"", "\"order \"", "\"of \"", 
                    "\"the \"", "\"integration \"", "\"bounds \"", "\"of \"", 
                    
                    TemplateBox[{
                    RowBox[{
                    SuperscriptBox["u", "2"], "-", "u"}], "\" \""}, 
                    "RowDefault"], "\"so \"", "\"that \"", "\"the \"", 
                    "\"upper \"", "\"bound \"", "\"is \"", "\"larger. \"", 
                    "\"Multiply \"", "\"the \"", "\"integrand \"", "\"by \"", 
                    
                    RowBox[{"-", "1"}]}, "RowDefault"], "\":\""}, 
                    "RowWithSeparators"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{
                    RowBox[{"-", "6"}], 
                    RowBox[{
                    SubsuperscriptBox["\[Integral]", "0", "1"], 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["u", "2"], "-", "u"}], ")"}], 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}]}, "RowDefault"]}},
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Integrate \"", "\"the \"", "\"sum \"", "\"term \"", 
                    "\"by \"", "\"term \"", "\"and \"", "\"factor \"", 
                    "\"out \"", "\"constants:\""}, "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "6"}], 
                    RowBox[{
                    SubsuperscriptBox["\[Integral]", "0", "1"], 
                    RowBox[{
                    SuperscriptBox["u", "2"], 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}], "+", 
                    RowBox[{"6", 
                    RowBox[{
                    SubsuperscriptBox["\[Integral]", "0", "1"], 
                    RowBox[{"u", 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}]}]}, 
                    "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Apply \"", "\"the \"", "\"fundamental \"", 
                    "\"theorem \"", "\"of \"", "\"calculus.\\nThe \"", 
                    "\"antiderivative \"", "\"of \"", 
                    TemplateBox[{
                    SuperscriptBox["u", "2"], "\" \""}, "RowDefault"], 
                    "\"is \"", 
                    TemplateBox[{
                    FractionBox[
                    SuperscriptBox["u", "3"], "3"], "\":\""}, "RowDefault"]}, 
                    "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{
                    TemplateBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    SuperscriptBox["u", "3"]}], ")"}], "0", "1"}, "", 
                    DisplayFunction :> (SubsuperscriptBox[
                    RowBox[{#, 
                    StyleBox[
                    "\[RightBracketingBar]", SpanMinSize -> 
                    2.]}], #2, #3]& )], "+", 
                    RowBox[{"6", 
                    RowBox[{
                    SubsuperscriptBox["\[Integral]", "0", "1"], 
                    RowBox[{"u", 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}]}]}, 
                    "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{
                    "\"Evaluate \"", "\"the \"", "\"antiderivative \"", 
                    "\"at \"", "\"the \"", "\"limits \"", "\"and \"", 
                    "\"subtract.\\n \"", 
                    RowBox[{
                    TemplateBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    SuperscriptBox["u", "3"]}], ")"}], "0", "1"}, "", 
                    DisplayFunction :> (SubsuperscriptBox[
                    RowBox[{#, 
                    StyleBox[
                    "\[RightBracketingBar]", SpanMinSize -> 
                    2.]}], #2, #3]& )], "\[LongEqual]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    SuperscriptBox["1", "3"]}], ")"}], "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    SuperscriptBox["0", "3"]}], ")"}]}], "\[LongEqual]", 
                    RowBox[{"-", "2"}]}]}, "RowDefault"], "\":\""}, 
                    "RowWithSeparators"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"6", 
                    RowBox[{
                    SubsuperscriptBox["\[Integral]", "0", "1"], 
                    RowBox[{"u", 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}]}]}, 
                    "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Apply \"", "\"the \"", "\"fundamental \"", 
                    "\"theorem \"", "\"of \"", "\"calculus.\\nThe \"", 
                    "\"antiderivative \"", "\"of \"", 
                    TemplateBox[{"u", "\" \""}, "RowDefault"], "\"is \"", 
                    TemplateBox[{
                    FractionBox[
                    SuperscriptBox["u", "2"], "2"], "\":\""}, "RowDefault"]}, 
                    "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    TemplateBox[{
                    RowBox[{"3", " ", 
                    SuperscriptBox["u", "2"]}], "0", "1"}, "", 
                    DisplayFunction :> (SubsuperscriptBox[
                    RowBox[{#, 
                    StyleBox[
                    "\[RightBracketingBar]", SpanMinSize -> 
                    2.]}], #2, #3]& )]}]}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{
                    "\"Evaluate \"", "\"the \"", "\"antiderivative \"", 
                    "\"at \"", "\"the \"", "\"limits \"", "\"and \"", 
                    "\"subtract.\\n \"", 
                    RowBox[{
                    TemplateBox[{
                    RowBox[{"3", " ", 
                    SuperscriptBox["u", "2"]}], "0", "1"}, "", 
                    DisplayFunction :> (SubsuperscriptBox[
                    RowBox[{#, 
                    StyleBox[
                    "\[RightBracketingBar]", SpanMinSize -> 
                    2.]}], #2, #3]& )], "\[LongEqual]", 
                    RowBox[{
                    RowBox[{"3", " ", 
                    SuperscriptBox["1", "2"]}], "-", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["0", "2"]}]}], "\[LongEqual]", "3"}]}, 
                    "RowDefault"], "\":\""}, "RowWithSeparators"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    FrameBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{"\"Answer:\""}, "RowDefault"], FontFamily -> 
                    "Roboto", FontSize -> 12, StripOnInput -> False], 
                    "\[SpanFromLeft]"}, {"\"\"", 
                    
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", "1"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {2.5, Automatic}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 0, 3}, "Rows" -> {1.5, 1, 2}}, 
                    AllowScriptLevelChange -> False], "Grid"], 
                    FrameStyle -> {
                    AbsoluteThickness[1], 
                    RGBColor[0.52, 0.76, 0.86]}, Background -> 
                    RGBColor[0.91, 0.98, 1], RoundingRadius -> 3, 
                    FrameMargins -> 12, StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{3}}}, FrameStyle -> 
              GrayLevel[0.7]], "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Hide steps", "input" -> "Input__Hide steps"}, {}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Visual representation of the integral", "scanner" -> 
     "Integral", "id" -> "VisualRepresentationOfTheIntegral", "position" -> 
     "200", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Plot[6 (1 - x) x, {x, 0, 1}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{{
               GraphicsComplexBox[CompressedData["
1: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
xf/49z8V4UPu
                "], {{{}, {
                   EdgeForm[], 
                   Directive[
                    Opacity[0.1], 
                    RGBColor[0, 0, 1]], 
                   GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJwt1FXUVkUAhtEPJATpRvIHpEtCulO6SxolJZSS7u6Qku7ukO5GBJSSDoMG
aRR0H+Bir2fO3L6zTljT9tXahQ+FQuGIH+5d770/59A4ek6j6kI9QXjnnjqT
Q7yiHh35np08ohhVaMUINvAnn5KdbGQlC5nJREYykJ50pOUT0pCaVISRkqJU
piXDWc8fpKAIlWjBMNbxO8kpTEWaM5S13CQZdfmWiezgIYWowFcMYQ03SEod
vmEC23lAQb5jGvt4Rnm+ZDCruU4SejCDg7ykNh0YzzbuU4CuTGUvTynHbI7w
L80YxCqu8TEL+DnY1l7d9VciOU/XA7ygFmf40P1cja7H9A3tien7lEbQcfqR
btV4Gpf8zrH1rEbReRpDf9L/6EIs379oRJ2i0XSPPuFzThPZ3Sw9zD805SQf
uB+oK7lKYuZzPBR6+1i7yQ/s5zk1mcNRXtOOsWzhLvnozGR285iyNGEAK7hC
ImrQljFs5g556cQkdvE3ZWhMf5ZzmYRU52tG8yO3yUNpGtGPZVwiAdVowyg2
cYvPKEVD+rKUi8SnKq0ZyUb+IjclaUAflnAh2ItclKA+vVnMb8QlTrBjsFWw
ebBh8BaCrYLNiRrsG7yTYCsiBXsG7yLYiOAfkpPifEEvFnGe/wE4XYJJ
                    "]]}]}, {}, {}}}], {}}, {{{{}, {}, 
                 TagBox[{
                   Directive[
                    Opacity[1.], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]], 
                   LineBox[CompressedData["
1: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
U+HZkrdjYgQY+//3If8HL8g9xA==
                    "]]}, 
                  Annotation[#, "Charting`Private`Tag$785224#1"]& ]}}, {}}}, {
             GridLines -> Dynamic[
                Map[{{#, 
                   GrayLevel[0.7]}}& , 
                 MousePosition[{"Graphics", Graphics}, None]]], 
              AxesOrigin -> {Automatic, 0}, PlotRange -> All, ImageSize -> 
              220., DisplayFunction -> Identity, 
              Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0.}, 
              FrameTicks -> {{Automatic, {{-0.5, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.5, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {1., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-1., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-0.9, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-0.8, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-0.7, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-0.6, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-0.4, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-0.3, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-0.2, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-0.1, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.1, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.2, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.3, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.4, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.6, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.7, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.8, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.9, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {1.1, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {1.2, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {1.3, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {1.4, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {1.5, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}}}, {Automatic, {{0., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.2, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.4, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.6, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.8, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {1., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-0.2, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-0.15, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-0.1, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-0.05, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.05, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.1, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.15, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.25, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.3, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.35, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.45, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.5, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.55, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.65, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.7, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.75, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.85, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.9, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.95, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {1.05, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {1.1, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {1.15, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {1.2, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, 
              PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True,
               ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], 
              Axes -> {True, True}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0.}, AxesStyle -> Directive[
                AbsoluteThickness[0.2]], BaseStyle -> Automatic, 
              DisplayFunction :> Identity, Epilog -> {
                LineBox[{{0, 0}, {0, 0}}], 
                LineBox[{{1, 0}, {1, 0}}]}, 
              Frame -> {{False, False}, {False, False}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                AbsoluteThickness[0.2]], 
              FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
              GridLines -> {None, None}, GridLinesStyle -> {
                GrayLevel[0.85], 
                GrayLevel[0.9]}, ImageSize -> 440., 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> PointSize[Medium], "PointSizeFunction" -> 
                "SmallPointSize", "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}, "AxesInFront" -> True}, 
              PlotRange -> {{-0.1, 1.1}, {-0.6599998236734732, 
               1.499999948820248}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{Automatic, Automatic}, {
                Automatic, Automatic}}, Prolog -> {
                Opacity[0], 
                TagBox[
                 RectangleBox[
                  Scaled[{0, 0}], 
                  Scaled[{1, 1}]], Annotation[#, "Plot", "Frame"]& ]}, 
              Ticks -> {Automatic, Automatic}}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Riemann sums", "scanner" -> "Integral", "id" -> 
     "RiemannSums", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "2"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    StyleBox[
                    "\"left sum\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    TagBox[
                    RowBox[{"1", "-", 
                    FractionBox["1", 
                    SuperscriptBox["n", "2"]]}], Identity]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", 
                   "\"assuming subintervals of equal length\"", "\[NoBreak]", 
                   "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                  GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateScan`RiemannSumScanner`Private`intervals$$ = 10, 
                 CalculateScan`RiemannSumScanner`Private`method$$ = 
                 CalculateScan`RiemannSumScanner`Private`LeftValue, 
                 CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[CalculateScan`RiemannSumScanner`Private`intervals$$],
                     10, "number of subintervals"}, 2, 100, 1}, {{
                    Hold[CalculateScan`RiemannSumScanner`Private`method$$], 
                    CalculateScan`RiemannSumScanner`Private`LeftValue, 
                    "summation method"}, {
                    CalculateScan`RiemannSumScanner`Private`LeftValue -> 
                    "left endpoint", 
                    CalculateScan`RiemannSumScanner`Private`MidpointValue -> 
                    "midpoint", 
                    CalculateScan`RiemannSumScanner`Private`RightValue -> 
                    "right endpoint"}}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$2783081$$ = 
                 False, CalculateScan`RiemannSumScanner`Private`intervals$\
2783086$$ = 0, CalculateScan`RiemannSumScanner`Private`method$2783087$$ = 
                 False}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateScan`RiemannSumScanner`Private`intervals$$ = 10, 
                    CalculateScan`RiemannSumScanner`Private`method$$ = 
                    CalculateScan`RiemannSumScanner`Private`LeftValue, 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False}, "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$2783081$\
$, False], 
                    Hold[
                    CalculateScan`RiemannSumScanner`Private`intervals$$, 
                    CalculateScan`RiemannSumScanner`Private`intervals$2783086$\
$, 0], 
                    Hold[
                    CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`method$2783087$$, 
                    False]}, 
                  "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    
                    With[{CalculateScan`RiemannSumScanner`Private`delta$ = (1 - 
                    0)/CalculateScan`RiemannSumScanner`Private`intervals$$, 
                    CalculateScan`RiemannSumScanner`Private`epsilon$ = 
                    RandomReal[{0, 0.001}]}, 
                    Labeled[
                    Plot[
                    6 (1 - $CellContext`x) $CellContext`x, {$CellContext`x, \
-0.09999999999999998, 1.1}, 
                    PlotRange -> {{-0.09999999999999998, 
                    1.1}, {-0.1499999999999999, 1.65}}, Prolog -> Table[
                    (Flatten[{
                    If[
                    TrueQ[Part[#, 2, 2] > 0], {
                    Opacity[0.1], Blue, 
                    EdgeForm[
                    RGBColor[{0.63, 0.64, 0.84}]]}, {
                    Opacity[0.1], Red, 
                    EdgeForm[
                    RGBColor[{0.9, 0.64, 0.64}]]}], 
                    Polygon[#]}]& )[
                    ({{#, 0}, {#, #3}, {#2, #3}, {#2, 0}}& )[
                    0 + CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$, 
                    0 + (CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$, 
                    (If[
                    Or[
                    Not[
                    NumericQ[#]], 
                    Not[
                    FreeQ[#, 
                    Alternatives[Complex, I]]]], 0, #]& )[
                    Quiet[
                    Which[
                    MatchQ[
                    CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`LeftValue], 
                    (If[
                    Not[
                    NumericQ[#]], 
                    N[
                    ReplaceAll[
                    6 (1 - $CellContext`x) $CellContext`x, $CellContext`x -> 
                    0 + CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$ + 
                    CalculateScan`RiemannSumScanner`Private`epsilon$]], #]& )[
                    
                    N[
                    ReplaceAll[
                    6 (1 - $CellContext`x) $CellContext`x, $CellContext`x -> 
                    0 + CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$]]], 
                    MatchQ[
                    CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`MidpointValue], 
                    (If[
                    Not[
                    NumericQ[#]], 
                    N[
                    ReplaceAll[
                    6 (1 - $CellContext`x) $CellContext`x, $CellContext`x -> 
                    0 + (CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$ + (
                    CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$)/2 + 
                    CalculateScan`RiemannSumScanner`Private`epsilon$]], #]& )[
                    
                    N[
                    ReplaceAll[
                    6 (1 - $CellContext`x) $CellContext`x, $CellContext`x -> 
                    0 + (CalculateScan`RiemannSumScanner`Private`i 
                    CalculateScan`RiemannSumScanner`Private`delta$ + (
                    CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$)/2]]], 
                    MatchQ[
                    CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`RightValue], 
                    (If[
                    Not[
                    NumericQ[#]], 
                    N[
                    ReplaceAll[
                    6 (1 - $CellContext`x) $CellContext`x, $CellContext`x -> 
                    0 + (CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$ - 
                    CalculateScan`RiemannSumScanner`Private`epsilon$]], #]& )[
                    
                    N[
                    ReplaceAll[
                    6 (1 - $CellContext`x) $CellContext`x, $CellContext`x -> 
                    0 + (CalculateScan`RiemannSumScanner`Private`i + 1) 
                    CalculateScan`RiemannSumScanner`Private`delta$]]], True, 
                    0]]]]], {
                    CalculateScan`RiemannSumScanner`Private`i, 0, 
                    CalculateScan`RiemannSumScanner`Private`intervals$$ - 1}],
                     PlotStyle -> AbsoluteThickness[1], ImageSize -> 1.5 200], 
                    (If[
                    NumericQ[#], 
                    Grid[{{
                    Row[{
                    Style["integral: ", 
                    GrayLevel[0.6]], 1}]}, {
                    Row[{
                    Style["Riemann sum: ", 
                    GrayLevel[0.6]], #}]}, {
                    Row[{
                    Style["error: ", 
                    GrayLevel[0.6]], 
                    Abs[# - 1]}]}}, Alignment -> ":"], ""]& )[
                    (Chop[
                    N[
                    TimeConstrained[
                    Simplify[#], 0.5, #]]]& )[
                    Quiet[CalculateScan`RiemannSumScanner`Private`delta$ Sum[
                    ReplaceAll[
                    6 (1 - $CellContext`x) $CellContext`x, {$CellContext`x -> 
                    0 + CalculateScan`RiemannSumScanner`Private`k 
                    CalculateScan`RiemannSumScanner`Private`delta$ + 
                    CalculateScan`RiemannSumScanner`Private`delta$ 
                    ReplaceAll[
                    CalculateScan`RiemannSumScanner`Private`method$$, {
                    CalculateScan`RiemannSumScanner`Private`LeftValue -> 0, 
                    CalculateScan`RiemannSumScanner`Private`MidpointValue -> 
                    Rational[1, 2], 
                    CalculateScan`RiemannSumScanner`Private`RightValue -> 
                    1}]}], {
                    CalculateScan`RiemannSumScanner`Private`k, 0, 
                    CalculateScan`RiemannSumScanner`Private`intervals$$ - 
                    1}]]]]]]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateScan`RiemannSumScanner`Private`intervals$$, 10, 
                    "number of subintervals"}, 2, 100, 1, ControlPlacement -> 
                    1}, {{CalculateScan`RiemannSumScanner`Private`method$$, 
                    CalculateScan`RiemannSumScanner`Private`LeftValue, 
                    "summation method"}, {
                    CalculateScan`RiemannSumScanner`Private`LeftValue -> 
                    "left endpoint", 
                    CalculateScan`RiemannSumScanner`Private`MidpointValue -> 
                    "midpoint", 
                    CalculateScan`RiemannSumScanner`Private`RightValue -> 
                    "right endpoint"}, ControlPlacement -> 2}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({None, 
                   ReleaseHold[
                    Uncompress[
                    "6:eJztVm1v0zAQbinv7/\
APkPiMRJkEfEACOhiTBpSkfK8XX1IL1w62sw3+PPjsJmnWrlJMB2hKP5zqS/\
P47rnnrvfoUEZpv9fr6cvWfJCcptfw9NCakZznshD03UmuQGsmRXoJn920JgazC5z8AOp9V615L9Wc\
GH9+he8TnhScGPhqGGeGgZ7uKZLPWKJrz1ixI/uTKZcJ4ewnPB4+\
fzHcGb70MBjLmBgDSuhnbSHzmSIa0h4CXbHmLSfimz8+KI+fCs5j+\
F6ASEDfs96JItTCSEE45hN868Vm6jYmZoigRNFzp8nJc9T2Am0UE9kE5jm+\
cTZZT9sCE5Vpz82dkptNCvLhX8cHMnYxeY9L2p0dgWFhXDD6Tsvqn3M3wPPrtvBKHq8nDvN7w5E3Yt\
gR6FU6n7Suk2ek6loX/YKr85ovWw3y7ClT/y8dMG1Wwxi2DQPmh7bG67W3Cr/TFl7m2PULcd+\
15rN3lIDrhkMluI+SFnwRRTPlgZdo+3R1bh0e41bFd4zOkApWOJGNs+wX1x/3K/\
B6U4ixdtMtSEfUMyCCHKyLOm53WcbMaEYUSSzw4rp+2WQTWYcScGf72jNBmR1gnpBNyxOa/\
XSp7sQksy9/VNxKLqeaDHnfFwYyUBtFfwProyy5gk5kYCQxXtDUazCHVVJjooJlPyhB4pwIhpDsl/\
24b/7hciWQqj2F6lKexYErzUl4Ev2ywAcgMjNr7tiBoyu4bTGbSB7XqotYmi5Pm+\
0x3W8y3bihOdBDSQgtSfhA7zaFblP4q5vCyh7crQndmtCtCd2a0K0J/++a4CLGf6XfOce4rg=="]]}\
; Typeset`initDone$$ = True), DynamicModuleValues :> {}, Deinitialization :> 
                None, UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}, 
                UndoTrackedVariables :> {
                 Typeset`show$$, Typeset`bookmarkMode$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More cases", "input" -> 
         "RiemannSums__More cases"}, {}]}]}], Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Indefinite integrals", "scanner" -> "Integral", "id" -> 
     "IndefiniteIntegral", "position" -> "100", "error" -> "false", 
     "numsubpods" -> "2"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Integrate[6 (1 - x) x, x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{"\[Integral]", 
                 RowBox[{
                   TagBox[
                    RowBox[{"6", " ", "x", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "x"}], ")"}]}], HoldForm], 
                   RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               StyleBox[
                RowBox[{
                  StyleBox[
                   RowBox[{
                    RowBox[{"-", "6"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    SuperscriptBox["x", "3"], "3"], "-", 
                    FractionBox[
                    SuperscriptBox["x", "2"], "2"]}], ")"}]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], "+", 
                  StyleBox[
                  "\"constant\"", {
                   Magnification -> 0.9 Inherited, FontFamily -> "Roboto", 
                    FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}], Identity]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> "Possible intermediate steps"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Take the integral:\""}, "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"6", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "x"}], ")"}], " ", "x"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{None}}, "Rows" -> {{0.5}}}], "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{"\"Factor \"", "\"out \"", "\"constants:\""},
                     "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{"6", 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "x"}], ")"}], " ", "x"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}]}, "RowDefault"]}},
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"For \"", "\"the \"", "\"integrand \"", 
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "x"}], ")"}], " ", "x"}], "\",\"", 
                    "\" \""}, "RowDefault"], "\"substitute \"", 
                    TemplateBox[{
                    RowBox[{"u", "\[LongEqual]", 
                    RowBox[{"1", "-", "x"}]}], "\" \""}, "RowDefault"], 
                    "\"and \"", 
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"\[DifferentialD]", "u"}], "\[LongEqual]", 
                    "\"-\""}], "\"\[ThinSpace]\""}, "RowDefault"], 
                    TemplateBox[{
                    RowBox[{"\[DifferentialD]", "x"}], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{"6", 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"u", "-", "1"}], ")"}], " ", "u"}], 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}]}, "RowDefault"]}},
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Expanding \"", "\"the \"", "\"integrand \"", 
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"u", "-", "1"}], ")"}], " ", "u"}], "\" \""}, 
                    "RowDefault"], "\"gives \"", 
                    TemplateBox[{
                    RowBox[{
                    SuperscriptBox["u", "2"], "-", "u"}], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{"6", 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["u", "2"], "-", "u"}], ")"}], 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}]}, "RowDefault"]}},
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Integrate \"", "\"the \"", "\"sum \"", "\"term \"", 
                    "\"by \"", "\"term \"", "\"and \"", "\"factor \"", 
                    "\"out \"", "\"constants:\""}, "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{
                    RowBox[{"6", 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    SuperscriptBox["u", "2"], 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}], "-", 
                    RowBox[{
                    RowBox[{"6"}], 
                    RowBox[{"\[Integral]", 
                    RowBox[{"u", 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}]}]}, 
                    "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"The \"", "\"integral \"", "\"of \"", 
                    TemplateBox[{
                    SuperscriptBox["u", "2"], "\" \""}, "RowDefault"], 
                    "\"is \"", 
                    TemplateBox[{
                    FractionBox[
                    SuperscriptBox["u", "3"], "3"], "\":\""}, "RowDefault"]}, 
                    "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    SuperscriptBox["u", "3"]}], "-", 
                    RowBox[{
                    RowBox[{"6"}], 
                    RowBox[{"\[Integral]", 
                    RowBox[{"u", 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}]}]}, 
                    "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"The \"", "\"integral \"", "\"of \"", 
                    TemplateBox[{"u", "\" \""}, "RowDefault"], "\"is \"", 
                    TemplateBox[{
                    FractionBox[
                    SuperscriptBox["u", "2"], "2"], "\":\""}, "RowDefault"]}, 
                    "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    RowBox[{"2", " ", 
                    SuperscriptBox["u", "3"]}], "-", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["u", "2"]}]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Roboto", 
                    FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Substitute \"", "\"back \"", "\"for \"", 
                    TemplateBox[{
                    RowBox[{"u", "\[LongEqual]", 
                    RowBox[{"1", "-", "x"}]}], "\":\""}, "RowDefault"]}, 
                    "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{
                    RowBox[{"2"}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "-", "1"}], ")"}], "3"]}]}], "-", 
                    RowBox[{"3", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "-", "1"}], ")"}], "2"]}]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Roboto", 
                    FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Factor \"", "\"the \"", "\"answer \"", "\"a \"", 
                    "\"different \"", "\"way:\""}, "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "-", "1"}], ")"}], "2"]}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "x"}], "+", "1"}], ")"}]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Roboto", 
                    FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Which \"", "\"is \"", "\"equivalent \"", "\"for \"", 
                    "\"restricted \"", 
                    TemplateBox[{"x", "\" \""}, "RowDefault"], "\"values \"", 
                    "\"to:\""}, "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    FrameBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{"\"Answer:\""}, "RowDefault"], FontFamily -> 
                    "Roboto", FontSize -> 12, StripOnInput -> False], 
                    "\[SpanFromLeft]"}, {"\"\"", 
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    RowBox[{"-", "6"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    SuperscriptBox["x", "3"], "3"], "-", 
                    FractionBox[
                    SuperscriptBox["x", "2"], "2"]}], ")"}]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Roboto", 
                    FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {2.5, Automatic}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 0, 3}, "Rows" -> {1.5, 1, 2}}, 
                    AllowScriptLevelChange -> False], "Grid"], 
                    FrameStyle -> {
                    AbsoluteThickness[1], 
                    RGBColor[0.52, 0.76, 0.86]}, Background -> 
                    RGBColor[0.91, 0.98, 1], RoundingRadius -> 3, 
                    FrameMargins -> 12, StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{3}}}, FrameStyle -> 
              GrayLevel[0.7]], "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Hide steps", "input" -> 
         "IndefiniteIntegral__Hide steps"}, {}]}]}], Typeset`aux1$$ = {
   True, False, {False, False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {
   True, False, {False, False}, True}, Typeset`aux4$$ = {
   True, False, {False, False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "4", "datatypes" -> "", "timedout" -> "", "timedoutpods" -> 
    "", "timing" -> "0.848", "parsetiming" -> "0.522", "parsetimedout" -> 
    "false", "recalculate" -> "", "id" -> 
    "MSP34131h862i8a9e2g10h9000019g7d4h883ac9225", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "10", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa34141h862i8a9e2g10h900001gg81fc1hg0840223142019838491228908", "version" -> 
    "2.6", "inputstring" -> "integrate 6x(1-x) from 0 to 1"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 5.5, "Date" -> {2023, 1, 20, 13, 42, 19.003783226013184`}, 
    "Line" -> 296, "SessionID" -> 26227517998383196253}, 
   Typeset`showpods$$ = {1, 2, 3, 4}, Typeset`failedpods$$ = {}, 
   Typeset`chosen$$ = {}, Typeset`open$$ = False, Typeset`newq$$ = 
   "integrate 6x(1-x) from 0 to 1"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{864., {1815., 1821.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$}],
        Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.883191139042418*^9},ExpressionUUID->"2d758c70-9071-4e91-afbf-\
1dff78f6589a"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", "\[ScriptY]", "]"}]], "Input",
 CellChangeTimes->{{3.883191303655558*^9, 3.883191309928076*^9}},
 CellLabel->
  "In[297]:=",ExpressionUUID->"f3876c49-93bc-4309-b842-346feeed8d47"],

Cell[BoxData["1.5`"], "Output",
 CellChangeTimes->{3.88319131052481*^9},
 CellLabel->
  "Out[297]=",ExpressionUUID->"d3b7df8e-15a1-4764-8161-d5a29307d506"]
}, Open  ]],

Cell["Thus concludes the exercise.", "Text",
 CellChangeTimes->{{3.883191318129177*^9, 
  3.88319132308496*^9}},ExpressionUUID->"e30edb36-fadd-4302-8c89-\
ed2556428635"],

Cell[TextData[{
 "However, there\[CloseCurlyQuote]s something more we can try. That is to see \
if we can find more ",
 StyleBox["Mathematica-like",
  FontSlant->"Italic"],
 " ways of doing this.\nThinking about it, we are given a ",
 StyleBox["probability distribution function",
  FontSlant->"Italic"],
 " 6\[ScriptX](1-\[ScriptX]). And all we want is to see how it will behave \
for different values of the variable \[ScriptX]. There is one potential \
function we can try."
}], "Text",
 CellChangeTimes->{{3.883200500797213*^9, 3.883200532889174*^9}, {
  3.88320063864575*^9, 
  3.88320072385746*^9}},ExpressionUUID->"57814630-0670-41bb-9bef-\
0a1851dab53d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[ScriptCapitalD]", "=", 
   RowBox[{"ProbabilityDistribution", "[", 
    RowBox[{
     RowBox[{"6", "x", 
      RowBox[{"(", 
       RowBox[{"1", "-", "x"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{"\[ScriptCapitalD]", ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"Filling", "->", "Bottom"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.883200536314176*^9, 3.883200626776223*^9}, {
  3.883201558646534*^9, 3.883201560531295*^9}},
 CellLabel->
  "In[330]:=",ExpressionUUID->"06f3112a-9f57-4b40-94fd-3348e1fe745a"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
NBIdFdYUk/oovUvvGrLgISpl7mpNMi+HMtv3bhPy4HP5p01EEoOxZef/rn8s
wMy+hIXaOukQru3/0KXAwUkLlShLMp+JMBw5WVcuRENe5Cwh9aHkY3rnxgsK
dfolX04Qe+6cl2MF52gY1zh9cv4z/z1Z4pagzsMT+eVDx8i8GpF5vv+JNOn3
kqanPhD5hu+Zf53TomHD+ujo8mfe/e5zwbiaxtihZqtKUh+vAxjnmloB5q0M
mFRwJg6sjjcDWUEUdNV//P2a8E0uctxBy4VG2+6tUXqE3/pi8sMTO7mokENm
NZkvIuadNAqVo7FDaObcQPSfnVG2+HAjyXfaFkUOwWPOrd8sl1OwVmR/dCL7
B94M1R40pnF4qK37CdEfrrfkhnWPANsU+loveYRAVumUevEpCmOFLetWEzkr
p6zi3lTC/7ffvAeJvpLNV53OF1DY3nKXlUawko2tq5s+jZGtlIcMwa4ZY58S
Yygyv3eumP0HX5WN85tDw93iZtpjgjX4MqI7eynE3uuuZQieJPo1+SYjQJhL
dt8BMy/UBY1ERYvReHdQf9ookfe3tv32f0chqvCl4m2C/XasORqkSPLP/c7+
SPDW8yciHVsoqOyb86WH4FRB7MQ7UjQW3Y1a++3Peypdu8S9gvQLfw9WEcEj
ZpmHzBkyz+zMWD5GcM6RpIWLRgWQ3JTzzIWzD/99HxH5/99/78P/8P8AgWY4
+A==
    "], {{{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1FXUVkUAhtHvp7u7QRrpRjqVbkRSGpGW7lQ6pbs7BKVTpUsBAekGaURB
yX3gYq9n5ty+s07aZh1rdggXCoXCSBD2ofHDPpzzOMfTsxpNl+gJwjn31Tkc
4H++oCvfs4snlKI6bRnFj9wmN7nISQ6y8zHZyEoWMpOJjGQgPR+RjrSkoSTV
aMNINnKL1JSgKq0ZwQZukoriVKEV3/EDN0hJfbowmZ08phiVacm3rOc6Kfic
zkxiB48oSk9m8Av/UokWDGcd10hOH2azn/+oRycmsp2HfEIPpvMz/1CReRzi
Fc0ZxlqukozFHA+2tVdvPUUk51m6jxfU5Q+i+L5AY+oRfUNHYrv/rhF0gkbX
bfqAIsR1P6NRdaHG0qP6lu7EcT+pEXWaxtC9+ozPOE1k3+bqQV7SjN8I7/tQ
XcMVkrKIY6HQ+4faS2byK8+pw3wO85oOjGcr9ylMN6ayh7/5lC8Zwmouk4Ta
tGccW7hHIb5hCrt5SgWaMphVXCIxtfiasWzmLwpSniYMYiUXSURN2jGGTdyl
AOVozEBWcIGE1OArRvMTd8hPWRoxgOWcJwH5KEND+rOMP4lPvGDHYKtg72DD
4B0EWwV7Ey3YN3gjwVZECvYM3kSwEcH/Iy+laUA/lnKOdyKVgjI=
         "]]]}, {}, {}}, {{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwl1GWQVXUAh+FlwaWUbhRYukG6u7tBREolBHbp7la6u7tTQJAuQaVR6VA6
lBQlnzN8eO57/ufOnJk7vzM3vGVknYgoISEhCXwEPccy+vE5ZchLKFGJxgeE
EZ0YxCQWsfmQj4hDXOIRP3g+CTnPcvrThLLkIxEXWMEAvqAc+bnNFkbzDbVJ
zEVWMpCmlKcAd9jKGNpRhyRcYhWDaEYFCnKXbYylPXVJymVWM5jmVOQxe5hK
Vwpxjx8YRwfqkYwrrGEILajEE/YyjW4U5j7bGU8Er/mZBdTnXw4yi14EQx2T
xSTnKmsZGmzku5PakpccYV6wlftntTJP2Rds5d70YE89HWyl3fUtvwYbOi8K
9tXfgx21iD5gR7C384TgndBTwd4aqW/4JXgPnBdqDP1NG/CCQ8wmzP0z2jv4
Sa6P6xJScI11DONLXnGU+VThGfuZQQ+K8pAfmUhHGvIfh5lDH1JynfUM5yuq
8pwDzKQnxfibnUyiE434mD/ZwAi+phrF+YddTKYzn/EJf7GRkbSiOiVIxQ02
8S2tqUFJUnOTzXxHG2pSijSEk5Z0pCcDGclEZrKQlWxkJwc5yUVuPuUW3zOK
ttSiNI/YzRS60Jj/+Ym59CXUXid0KbFc/xHy/j8kj74DP0KCBQ==
         "]]},
       Annotation[#, "Charting`Private`Tag$162145#1"]& ]}}], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}, "AxesInFront" -> True},
  PlotRange->{{0, 1}, {0., 1.4999999644585054`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8832006274831533`*^9, 3.883201560934116*^9},
 CellLabel->
  "Out[331]=",ExpressionUUID->"7bd8726e-7c9e-4c43-8a04-1f7068b6b7da"]
}, Open  ]],

Cell["Ah! Look what we got here! Perfect.", "Text",
 CellChangeTimes->{{3.883200726239065*^9, 3.883200732136752*^9}, {
  3.8832017385719757`*^9, 
  3.8832017415197487`*^9}},ExpressionUUID->"2ce2bc67-2467-480e-a422-\
ace4d3dfff35"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", 
  RowBox[{"PDF", "[", 
   RowBox[{"\[ScriptCapitalD]", ",", "x"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.883201323890225*^9, 3.883201333602663*^9}},
 CellLabel->
  "In[329]:=",ExpressionUUID->"6f0fbc8f-2ce4-4e7e-a5f4-c8ed43ca88c7"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{"6", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "x"}], ")"}], " ", "x"}], 
        RowBox[{"0", "<", "x", "<", "1"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{3.883201333839864*^9},
 CellLabel->
  "Out[329]=",ExpressionUUID->"382cd517-4ae4-4e5d-92ba-8b1ce3b07eee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[ScriptCapitalD]", "=", 
   RowBox[{"ProbabilityDistribution", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       RowBox[{"\[Sigma]", "*", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{"2", "\[Pi]"}], ")"}]}]}]], "*", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.5"}], "*", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], ")"}], "2"]}], ")"}]]}],
      ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", ".7"}], ",", ".7"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{"\[ScriptCapitalD]", ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"Filling", "->", "Bottom"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.883201577669853*^9, 3.883201671178259*^9}},
 CellLabel->
  "In[343]:=",ExpressionUUID->"c530eb44-4778-4f8a-b55c-c04471d8c387"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
Y7N/MfyL/13v/37/L/4vwj2BFQ==
    "], {{{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl03WQVnUUBuBdRJAQEJEQRJYGFQuklM5l11GURpQlpDuUXEKlGxZpUJCU
VEJA2kZCJW3FGUHBIuznDH88+3vPe++3c+f7zk1K6920V6aEhIREXvanP6c4
TQfeCq51c+5LvH7jo6yI03iIHHIrNtLDvIwfqGSeTHl5LDv4j1TdclLlg2SX
W7KB7ualnKOieRLl5DFs519SdK+SIh8gm9yC9XQzL+F7HjRPpKw8mm38QxPd
KzSR93OT3JzX6WpezHc8YJ5AGXkUW/mbZN0ykuUuLOJb7teNp7Sczpv8RWPd
UhrLz7KQb7hPN45S8kje4E8a6ZbQSO7MAr7mXt1LlJRHsIVrNNQtpqHcifl8
RQXdi5SQh7OZqzTQLaKB3JF5fMk9uhcoLg9jE1eor1tIfblD7AlfcLduLEly
Me6kKHdQjzTm8jl3uW8MReShbORy3KdbQF25PRmcpbxuNIXl98glt2ULQ8wb
+IO65vnUkfeRVW7GOp4x542Tbcwxn6GcPIrb5YLOzuzmXXMP5wFupg2beV7f
y3mIfHxIGjti51z7OPaGvfxufj+eh3nUNh919on/T34O05Gd8RnXj8Tes58s
fMCTrOVp13s6D3JLzGxlduyec0+8q3JZZzqF5ALOTuziHXNOZ2s28Zz5Vmd7
tsfOm3+jduL197+WvIcb5SdYQzvzLE5RxjySgvJg1vErtXRzqSk/xUxOUlo3
ggLyINbyCzV1GdSQ2zKDE5TSDY/vSb6NfPG8PEIbpvMZJd0zjLzyw7RmGp9S
Qj80vi+5Oq2YyicUj/0hjzyQNVyiRuwH1eSWTOE4SfH7k1sewGouxvPEb0BV
uQWTORbvQXzH5JL7s4qf4xl1s6giN2dS7EW8M7rBsW9yP1byUzy3biaV5WZM
jD2J90s3iJxyX17jAtV0M3hIfpvMclNWxy6ZJ8SexrtpHkgOuQ8rOE9V3XQq
ybu5QX6cVbEH5vEcpoh5ANnl3iznR6roplFR3kUm+TFWxnOYx/ERhc3/A10+
xK8=
         "]]]}, {}, {}}, {{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{1, 370, 282, 204, 135, 81, 51, 2, 3, 4, 5, 6, 7, 8, 467}], 
        LineBox[CompressedData["
1:eJwt02WQl1UUB+BFULq7WTpNQLq7BpcOEZaQElCURgmlGxGUBkEJpQyQRlBB
GhUFsWPGJBWU8Dkzfnj2nvN7/7Pz3nvPm5g8OGlQioSEhIX+DCU/x/RTSOJ1
fWvuYre+InPUVfhFvYbBpONpWQGOq6fShnX6R0jJHn0l5qqr8qt6LUNIzzOy
gpxQT6Mt6/VJpGKvvjLz1NX4Tf0aT5KBYbJCnFRPpx0PM19Wnd9jPzxFRobL
CnNKPYP2VOFFWQ3+iPdnKJkYISvCafVMOlCVBbKa/BnvG+dAZkbKEjmjnkVH
qvGSrBYX1Rti32RhlKwon6hn04nqZGW0vBifxvnTmRpkY4y8OJ/F2dKFmmQn
BznJxVi/KcHZOEO6Uuv/u6/NJfXGOEdy86ysJJ/HGfIotVkkq8Nl9RtxjuTh
OVkpvogzpFvsT9+Gu9mnr8PL6rpcUb/JDnUPsjNCv9XamQx8qN9t7U1u8urH
WUtzTr3P2pcF6netj5GVQzwRfezJ2paPuYf3GRBzwn7Pd1l7xdySi48YEnMR
7+n5K9Z6HOGqfr+1X8wpm/TvWZM5Sg4+ID6qkZ5ts3YhIwcZGP9fvsfahzzk
04+3luF8zAfb1d3JFmucs7UdqTmgr8didX2uqTfH/PCWviuZOKzPzwR1Wb6M
u6YH9Vkia8Bf6i0xYxRgoqwcF+KuSaYBBSlEYYqQyPN+V56v4l7pSUOWyhry
d9xnzChFeUFWga/jXOlFI5bJGnE9zixmlWJMkt3LN7FfetOY5bLG3Ig9x6xS
nMmy+/g29kcfmrBC1oR/1G/HrFKCKbL7+S7emcdpykpZU/5VvxMzR0mmyh7g
+3hn+tKMVbJm3Iw5jPukFNNkD/JDvDP9Yub17UkTs6hvzmp1c27F3cedUZrp
sof4MfZAfzbpO5A2ZkrfglfVLbgd31PcIWWYIavIT7EnBsSs6DuSLr4TfUvW
qFtyJ+Y57pWyzJRV4ufYIwNjVvSdSB+zrm/FWnUrEmI+6c9O7U5rT/4DexDC
9g==
         "]], 
        LineBox[{461, 277, 455, 367, 133, 437, 349, 271, 202, 43, 398, 310, 
         232, 163, 109, 79, 44, 45, 46, 47, 48, 49, 399, 311, 233, 164, 110, 
         80, 423, 335, 257, 188, 134, 438, 350, 272, 203, 447, 359, 281, 457, 
         369, 466, 50}]},
       Annotation[#, "Charting`Private`Tag$165338#1"]& ], 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], 
       LineBox[{469, 471, 468}], LineBox[{470, 472, 9}]}}}], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}, "AxesInFront" -> True},
  PlotRange->{{-1, 1}, {0., 1.9947108112153809`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8832016214715033`*^9, 3.8832016719485493`*^9}},
 CellLabel->
  "Out[344]=",ExpressionUUID->"8b995453-3d91-4649-bf6b-2d33d907087f"]
}, Open  ]],

Cell["To get area under the curve we do CDF[a] - CDF[b]", "Text",
 CellChangeTimes->{{3.883202150187818*^9, 
  3.8832021903160543`*^9}},ExpressionUUID->"d33e257e-6966-4291-9181-\
4f920d83dcda"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[ScriptCapitalD]", "=", 
   RowBox[{"ProbabilityDistribution", "[", 
    RowBox[{
     RowBox[{"6", "x", 
      RowBox[{"(", 
       RowBox[{"1", "-", "x"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CDF", "[", "\[ScriptCapitalD]", "]"}], "[", "1", "]"}], "-", 
  RowBox[{
   RowBox[{"CDF", "[", "\[ScriptCapitalD]", "]"}], "[", "0", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.883202193861068*^9, 3.883202257455879*^9}, {
  3.883202294253953*^9, 3.883202294444528*^9}, {3.883202339311096*^9, 
  3.883202355637643*^9}},
 CellLabel->
  "In[354]:=",ExpressionUUID->"79bfb23b-594d-4604-b8f7-e75579848f4f"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.8832022438499727`*^9, 3.883202258061104*^9}, 
   3.8832022950459642`*^9, 3.883202356512196*^9},
 CellLabel->
  "Out[355]=",ExpressionUUID->"4cc2dacf-1854-4ab6-9278-fd49112c7bcf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[ScriptCapitalD]", "=", 
   RowBox[{"ProbabilityDistribution", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       RowBox[{"\[Sigma]", "*", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{"2", "\[Pi]"}], ")"}]}]}]], "*", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.5"}], "*", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], ")"}], "2"]}], ")"}]]}],
      ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", ".7"}], ",", ".7"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CDF", "[", "\[ScriptCapitalD]", "]"}], "[", ".7", "]"}], "-", 
  RowBox[{
   RowBox[{"CDF", "[", "\[ScriptCapitalD]", "]"}], "[", 
   RowBox[{"-", ".7"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.883202193861068*^9, 3.883202257455879*^9}, {
  3.883202294253953*^9, 3.883202294444528*^9}, {3.883202339311096*^9, 
  3.883202392400043*^9}},
 CellLabel->
  "In[358]:=",ExpressionUUID->"b350a5d6-d066-47db-b90e-fc81665b4fa0"],

Cell[BoxData["0.999534741841929`"], "Output",
 CellChangeTimes->{{3.883202380004231*^9, 3.88320239293542*^9}},
 CellLabel->
  "Out[359]=",ExpressionUUID->"a57fe23e-4c77-4a1f-b67f-c822c9fbd3fc"]
}, Open  ]],

Cell[TextData[{
 "As you can observe, this approach is ",
 StyleBox["much",
  FontSlant->"Italic"],
 " better. Though it may not be as easy to understand what\[CloseCurlyQuote]s \
really going on under the hood, it is cleaner once you already have \
understood what\[CloseCurlyQuote]s going on. For example, if we were to start \
directly with ",
 Cell[BoxData[
 "ProbabilityDistribution"], "InlineCode",ExpressionUUID->
  "cee8e6b5-0e9e-41a4-bf5b-ddc78714c8a2"],
 ", we would not know how 6\[ScriptX](1-\[ScriptX]) is executed and plotted."
}], "Text",
 CellChangeTimes->{{3.883202413243294*^9, 
  3.883202531111273*^9}},ExpressionUUID->"79fa5c78-2ac9-42b2-901f-\
fd228a166333"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1.25 Inherited,
FrontEndVersion->"13.2 for Mac OS X x86 (64-bit) (November 18, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"dc89a98c-4ab8-4f09-8eba-c07b80968f20"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 162, 3, 123, "Title",ExpressionUUID->"17803023-511f-4f14-85c5-853293f617ff"],
Cell[CellGroupData[{
Cell[767, 29, 288, 6, 37, "Input",ExpressionUUID->"2deaf6b5-79f4-48bb-b864-cd2515fb51e6"],
Cell[1058, 37, 409, 7, 42, "Output",ExpressionUUID->"ca262a28-8db6-486c-b55a-e2d270004bc7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1504, 49, 353, 7, 37, "Input",ExpressionUUID->"f469d9e6-1fc3-415b-b48b-eb825d67935b"],
Cell[1860, 58, 192, 2, 42, "Output",ExpressionUUID->"25a08af8-80e5-425c-9052-5bdd9ec19389"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2089, 65, 361, 9, 37, "Input",ExpressionUUID->"8946f746-32c5-4c45-af91-1be6973a6935"],
Cell[2453, 76, 175, 2, 42, "Output",ExpressionUUID->"4073468f-6d93-4991-a7e4-377133713209"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2665, 83, 641, 18, 64, "Input",ExpressionUUID->"11172112-ac22-43bc-8828-88062bd73927"],
Cell[3309, 103, 29472, 590, 294, "Output",ExpressionUUID->"488a8376-e7c7-426d-9865-ea0426b48204"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32818, 698, 530, 11, 37, "Input",ExpressionUUID->"69121bf1-49ba-4d67-89fd-d6e0930823cd"],
Cell[33351, 711, 611, 11, 42, "Output",ExpressionUUID->"107f20be-45ad-4c0a-8cda-a5e649fab417"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33999, 727, 310, 5, 37, "Input",ExpressionUUID->"2519e18a-b867-4c6f-8256-ed4cace82ebe"],
Cell[34312, 734, 3548, 95, 312, "Output",ExpressionUUID->"8e020557-4c48-4f10-ba20-26f75a1d37b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37897, 834, 476, 12, 37, "Input",ExpressionUUID->"391af643-ca79-45ea-b87d-2f002d0894c8"],
Cell[38376, 848, 427, 10, 35, "Message",ExpressionUUID->"d442df1d-09e2-4a80-9394-a87cc1f5b6bd"],
Cell[38806, 860, 588, 15, 42, "Output",ExpressionUUID->"24574b26-48f6-4f89-b657-7d86d2b4312f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39431, 880, 496, 12, 37, "Input",ExpressionUUID->"e013e3d1-ce6e-4b4e-8953-a5358a4f0a78"],
Cell[39930, 894, 15183, 285, 290, "Output",ExpressionUUID->"a36ed319-e447-4bdd-9425-8f415ec13981"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55150, 1184, 580, 13, 37, "Input",ExpressionUUID->"ba84b9a4-a6f9-42ad-9ba9-cf674d3bbdb6"],
Cell[55733, 1199, 73549, 1241, 283, "Output",ExpressionUUID->"4f5e8aa4-4e14-40f8-8412-73ec4e7ba309"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129319, 2445, 380, 8, 37, "Input",ExpressionUUID->"a7d07d90-93e7-4319-b9d3-9d77d0713b90"],
Cell[129702, 2455, 47956, 754, 291, "Output",ExpressionUUID->"8135b205-7f25-44ee-ac12-e3d7611df9ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177695, 3214, 490, 11, 37, "Input",ExpressionUUID->"685007a7-7d8e-40c0-a00c-5c33e8bab500"],
Cell[178188, 3227, 4659, 111, 312, "Output",ExpressionUUID->"edc07f96-e4a6-4694-bb2e-d4e6d8a3c169"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182884, 3343, 538, 14, 37, "Input",ExpressionUUID->"2268dd6f-62c0-4ddb-9bb0-4f2b5718bb66"],
Cell[183425, 3359, 4544, 112, 307, "Output",ExpressionUUID->"29ae5440-0a37-4f64-89b7-305c4d85f783"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188006, 3476, 531, 13, 37, "Input",ExpressionUUID->"c1316f66-d8a6-4e05-bf72-7a48e77915bb"],
Cell[188540, 3491, 9003, 168, 298, "Output",ExpressionUUID->"f5a82025-74a3-435a-9eb7-037672c6028f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197580, 3664, 401, 11, 37, "Input",ExpressionUUID->"310c2580-b21e-4580-86c8-27a50cc13b70"],
Cell[197984, 3677, 197, 4, 59, "Output",ExpressionUUID->"b91b406e-4bcb-4114-91e8-f08250ce7d99"]
}, Open  ]],
Cell[CellGroupData[{
Cell[198218, 3686, 356, 9, 56, "Input",ExpressionUUID->"7d6ac7e5-f187-4265-b600-4642306f5f9e"],
Cell[198577, 3697, 173, 4, 59, "Output",ExpressionUUID->"caa8ba87-7dec-40bc-a468-4c1eb48ae156"]
}, Open  ]],
Cell[CellGroupData[{
Cell[198787, 3706, 752, 14, 116, "Input",ExpressionUUID->"b20744b0-45e4-4ce9-8fb1-2019386c9253"],
Cell[199542, 3722, 50532, 970, 625, "Output",ExpressionUUID->"e08e308f-02c2-4c32-8170-a2fb3789acfc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[250111, 4697, 211, 4, 37, "Input",ExpressionUUID->"114d5428-f55b-4b53-b56a-57f9ba7bd070"],
Cell[250325, 4703, 982, 26, 107, "Output",ExpressionUUID->"d453e581-1070-4f48-8978-3108551b4c8b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[251344, 4734, 207, 3, 37, "Input",ExpressionUUID->"420c1ae9-1038-472e-893e-55b97d7fb9bc"],
Cell[251554, 4739, 197, 3, 42, "Output",ExpressionUUID->"f65f99a0-30e2-410f-83a7-26f950808ee2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[251788, 4747, 207, 3, 37, "Input",ExpressionUUID->"1c12a8a9-14de-4b20-af07-a3e0d6370bad"],
Cell[251998, 4752, 4401, 101, 225, "Output",ExpressionUUID->"45cc43fe-8a10-4591-baf6-46d7ac1addee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[256436, 4858, 296, 5, 37, "Input",ExpressionUUID->"17258066-1981-421b-b790-cbc32d1366d8"],
Cell[256735, 4865, 3050, 86, 302, "Output",ExpressionUUID->"ac5c1a77-67df-4edf-896d-ed5529bcd1e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[259822, 4956, 305, 6, 37, "Input",ExpressionUUID->"8475e472-3711-44c1-aebd-abc6cda626b1"],
Cell[260130, 4964, 28596, 513, 183, "Output",ExpressionUUID->"274667a6-5fce-4ea4-8a9b-deb0c8fa7c4c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[288763, 5482, 302, 6, 37, "Input",ExpressionUUID->"4f75e5e9-c13a-4df6-8627-054bece1861e"],
Cell[289068, 5490, 28551, 512, 183, "Output",ExpressionUUID->"18f29462-786c-4776-92b6-e588b5b4af6d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[317656, 6007, 283, 6, 37, "Input",ExpressionUUID->"3cce3a43-8936-4c34-a64c-22a9ca2fd977"],
Cell[317942, 6015, 151, 2, 42, "Output",ExpressionUUID->"24aaac2d-2c36-4855-836a-457597cb1e09"]
}, Open  ]],
Cell[CellGroupData[{
Cell[318130, 6022, 355, 6, 64, "Input",ExpressionUUID->"1da7de6f-d59e-4bdf-ae1b-90b9e9fc4a41"],
Cell[318488, 6030, 60826, 1179, 625, "Output",ExpressionUUID->"f01a2196-aa9e-4ae7-8eda-4e391b269729"],
Cell[379317, 7211, 60849, 1179, 625, "Output",ExpressionUUID->"d84f94b1-a1bd-4a50-9385-6b16494c083b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[440203, 8395, 351, 7, 37, "Input",ExpressionUUID->"5059f696-313d-464d-b9ef-6cea759974e9"],
Cell[440557, 8404, 28778, 515, 183, "Output",ExpressionUUID->"c5e42bdc-4fae-4701-820e-50edf7b54db1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[469372, 8924, 298, 6, 37, "Input",ExpressionUUID->"5d232234-2bd5-4313-a5c4-f90681556967"],
Cell[469673, 8932, 28746, 515, 183, "Output",ExpressionUUID->"1322c4ba-c85f-45d5-af6b-c11d6d2ab37c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[498456, 9452, 178, 3, 37, "Input",ExpressionUUID->"77b49794-88a6-4f16-b966-3659a25037cd"],
Cell[498637, 9457, 50310, 966, 625, "Output",ExpressionUUID->"4e3513d9-a0a1-4c7b-98c6-fec7cfa02ca4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[548984, 10428, 262, 7, 37, "Input",ExpressionUUID->"c6456637-b73e-433a-8628-0fd6d2f21c0b"],
Cell[549249, 10437, 201411, 4087, 787, "Output",ExpressionUUID->"b272054d-8350-4f53-9530-c2408927f394"]
}, Open  ]],
Cell[CellGroupData[{
Cell[750697, 14529, 254, 5, 37, "Input",ExpressionUUID->"3f5557b8-0b67-4c70-bc7d-70436a6e3ca2"],
Cell[750954, 14536, 12762, 383, 300, "Output",ExpressionUUID->"a55523f5-7509-4490-8159-bd90a42677a9"]
}, Closed]],
Cell[CellGroupData[{
Cell[763753, 14924, 340, 8, 31, "Input",ExpressionUUID->"b32ec813-3f53-4d6c-b10e-7f9508095a4e"],
Cell[764096, 14934, 33562, 619, 148, "Output",ExpressionUUID->"54858073-2442-48bf-ad5a-232c35506c55"]
}, Closed]],
Cell[797673, 15556, 242, 6, 38, "Text",ExpressionUUID->"83ddd6f4-4232-494b-bcd8-6438b039834a"],
Cell[CellGroupData[{
Cell[797940, 15566, 249, 5, 37, "Input",ExpressionUUID->"3750f650-5abc-407d-90bb-d7c224898cf7"],
Cell[798192, 15573, 3075, 88, 115, "Output",ExpressionUUID->"27086ebd-2b8c-4f41-ae91-edf8680bba22"]
}, Open  ]],
Cell[CellGroupData[{
Cell[801304, 15666, 249, 5, 37, "Input",ExpressionUUID->"6d362c0d-738a-4eb5-b315-a530a38bf776"],
Cell[801556, 15673, 3579, 95, 115, "Output",ExpressionUUID->"c058f8f7-13d0-4bbf-8c0d-efec4af2acd2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[805172, 15773, 373, 8, 37, "Input",ExpressionUUID->"f47843c6-c78e-40e1-a14e-c418a6f603d0"],
Cell[805548, 15783, 91027, 1772, 251, "Output",ExpressionUUID->"db22f069-48b7-4a19-b77c-4c3c55c4884a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[896612, 17560, 430, 10, 64, "Input",ExpressionUUID->"7de6a6cc-5710-4911-b660-c43ef2714fbd"],
Cell[897045, 17572, 232, 4, 42, "Output",ExpressionUUID->"551a8bae-c9a0-4bf3-b290-0aa6e5c21b51"],
Cell[897280, 17578, 234, 4, 42, "Output",ExpressionUUID->"2e3e6f98-2d51-4386-bd1b-8d99f51325b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[897551, 17587, 244, 5, 37, "Input",ExpressionUUID->"8c56a2bd-acae-4d8a-9558-6662279cedfd"],
Cell[897798, 17594, 156, 3, 42, "Output",ExpressionUUID->"f0eca392-30b1-491c-9e53-21c84d329699"]
}, Open  ]],
Cell[CellGroupData[{
Cell[897991, 17602, 246, 5, 37, "Input",ExpressionUUID->"fe11a88f-fd4c-4e3e-8164-1b3099ea0a40"],
Cell[898240, 17609, 197, 4, 59, "Output",ExpressionUUID->"46b88a97-e450-4cf0-b655-53b20f6b7407"]
}, Open  ]],
Cell[CellGroupData[{
Cell[898474, 17618, 247, 5, 37, "Input",ExpressionUUID->"040581c8-5942-48c3-8902-aa112d2f19a8"],
Cell[898724, 17625, 28528, 512, 183, "Output",ExpressionUUID->"233696b6-d068-43d4-9d96-d6ad0dc51ec1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[927289, 18142, 244, 5, 37, "Input",ExpressionUUID->"0fcab2fa-a1cf-41ba-9fe4-0e6fbce6c8c6"],
Cell[927536, 18149, 28543, 513, 183, "Output",ExpressionUUID->"5789a89f-af27-4ca2-a181-b2a9673eb1d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[956116, 18667, 246, 5, 37, "Input",ExpressionUUID->"50c1f982-0571-4aeb-b453-009b41207737"],
Cell[956365, 18674, 20452, 357, 115, "Output",ExpressionUUID->"8b020003-831f-48ab-a45f-258b0d94d42e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[976854, 19036, 259, 5, 37, "Input",ExpressionUUID->"6742cfee-e420-4f69-95f9-19e783a29200"],
Cell[977116, 19043, 188, 5, 70, "Output",ExpressionUUID->"220b2f31-5055-4f5e-bf1f-d71c72df0db3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[977341, 19053, 462, 11, 64, "Input",ExpressionUUID->"a5bcd8da-b837-47d3-baff-2a6f80532985"],
Cell[977806, 19066, 28575, 513, 183, "Output",ExpressionUUID->"73fcc8fd-46b6-44de-afcc-73580c508cc0"],
Cell[1006384, 19581, 28578, 513, 183, "Output",ExpressionUUID->"ee5e21d3-b40a-42ec-9282-4813d6d84e51"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1034999, 20099, 413, 10, 37, "Input",ExpressionUUID->"45c6aa36-4897-451c-9618-17b5c691b51b"],
Cell[1035415, 20111, 19719, 442, 473, "Output",ExpressionUUID->"9c7f753d-cd71-48c3-aebc-054c2dd77fc9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1055171, 20558, 413, 10, 37, "Input",ExpressionUUID->"88e02522-1e49-47d0-ad84-1a2d30a5d157"],
Cell[1055587, 20570, 19680, 442, 473, "Output",ExpressionUUID->"9d90678b-184b-4aff-a16b-193a7189c8d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1075304, 21017, 288, 7, 37, "Input",ExpressionUUID->"bf5aa6b4-3293-4d09-a65b-6c7725779d77"],
Cell[1075595, 21026, 5021, 114, 277, "Output",ExpressionUUID->"f5fdb321-ba1c-4388-970f-9631416b6922"]
}, Open  ]],
Cell[1080631, 21143, 659, 14, 102, "Text",ExpressionUUID->"34423cc9-3ee2-4c2d-98c7-cbaff6178d3d"]
}, Closed]],
Cell[CellGroupData[{
Cell[1081327, 21162, 210, 4, 89, "Title",ExpressionUUID->"23412bb8-f152-4576-8a92-2dcae899e717"],
Cell[CellGroupData[{
Cell[1081562, 21170, 169, 3, 84, "Section",ExpressionUUID->"ef48375c-94df-4212-a4fd-f8b970e0ecca"],
Cell[1081734, 21175, 371, 8, 73, "Text",ExpressionUUID->"bf3d8cf2-c32c-4a33-9f99-51a4719290cd"],
Cell[1082108, 21185, 189, 3, 44, "Text",ExpressionUUID->"87a4d028-5a11-4676-a188-f6ca72f84ef5"],
Cell[CellGroupData[{
Cell[1082322, 21192, 460, 11, 116, "Input",ExpressionUUID->"ba7de5b8-342d-4347-b89f-484c4d5e7b8a"],
Cell[1082785, 21205, 50290, 966, 625, "Output",ExpressionUUID->"250652c9-23c4-4c1b-a6e4-141038e2e76b"]
}, Open  ]],
Cell[1133090, 22174, 755, 14, 217, "Text",ExpressionUUID->"f1f59f75-605a-4e5b-8cbf-5275ba257eb7"],
Cell[CellGroupData[{
Cell[1133870, 22192, 386, 9, 37, "Input",ExpressionUUID->"fe9f9ed8-5f6f-406f-81c9-b4b31d2a881a"],
Cell[1134259, 22203, 145802, 2896, 653, "Output",ExpressionUUID->"b91fde21-4ebe-49ad-9839-1911691fa4f5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1280098, 25104, 259, 5, 37, "Input",ExpressionUUID->"734cd26c-99b6-4f44-b2f2-1d07fee25e66"],
Cell[1280360, 25111, 90246, 2030, 6505, "Output",ExpressionUUID->"1633e1e2-525a-4f62-a820-337017f70d8c"]
}, Closed]],
Cell[1370621, 27144, 255, 6, 38, "Text",ExpressionUUID->"40ef2e7b-ec75-4d50-b32c-3d2d9063b7c0"],
Cell[CellGroupData[{
Cell[1370901, 27154, 776, 19, 64, "Input",ExpressionUUID->"2c23edca-d0e8-4eea-b310-ec057142f74b"],
Cell[1371680, 27175, 31551, 579, 149, "Output",ExpressionUUID->"ebd8da5d-e578-4db1-914d-269ca0832e64"]
}, Open  ]],
Cell[1403246, 27757, 594, 12, 188, "Text",ExpressionUUID->"e52dfc2b-c9eb-4172-8565-95866aea3068"]
}, Closed]],
Cell[CellGroupData[{
Cell[1403877, 27774, 173, 3, 65, "Section",ExpressionUUID->"9c566c21-d953-4c50-a263-d404fc46ed3c"],
Cell[1404053, 27779, 887, 16, 303, "Text",ExpressionUUID->"7e2c27a7-8814-4b08-b9a5-739ab3cad22e"],
Cell[CellGroupData[{
Cell[1404965, 27799, 158, 3, 67, "Subsection",ExpressionUUID->"bcade709-37db-409d-8c0f-e0f68ee213ed"],
Cell[1405126, 27804, 214, 4, 40, "ItemNumbered",ExpressionUUID->"52d77049-f281-48ec-86d7-920b9a6d78f7"],
Cell[1405343, 27810, 244, 4, 40, "ItemNumbered",ExpressionUUID->"4b764452-2a58-4f64-9a1a-829ef22bd74a"],
Cell[1405590, 27816, 270, 6, 40, "ItemNumbered",ExpressionUUID->"e7164eff-aaf5-43b8-8bff-0bc46225653d"]
}, Closed]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1405921, 27829, 157, 3, 89, "Title",ExpressionUUID->"f7ca9920-6d70-4822-9eee-b8ca061b6cd7"],
Cell[CellGroupData[{
Cell[1406103, 27836, 165, 3, 84, "Section",ExpressionUUID->"34b876c2-d0d0-4514-ad27-5f00342e9ba9"],
Cell[CellGroupData[{
Cell[1406293, 27843, 184, 3, 67, "Subsection",ExpressionUUID->"0dbb7967-dfbb-472c-8c15-07f35d061b72"],
Cell[1406480, 27848, 690, 13, 188, "Text",ExpressionUUID->"87847d36-00a5-4bb4-b893-6e20f7bf4317"],
Cell[1407173, 27863, 253, 7, 44, "Text",ExpressionUUID->"9e027cee-4b99-446d-9abb-4dedd012ef41"],
Cell[CellGroupData[{
Cell[1407451, 27874, 454, 10, 116, "Input",ExpressionUUID->"bc17617f-bff8-4dae-814e-6360f1e6b04e"],
Cell[1407908, 27886, 50307, 965, 625, "Output",ExpressionUUID->"505f44a6-1ddb-43bd-9c7e-57e81d502d98"]
}, Open  ]],
Cell[1458230, 28854, 914, 25, 129, "Text",ExpressionUUID->"a6f165f2-7e74-48da-9427-d5fa933ebe5d"],
Cell[1459147, 28881, 495, 11, 73, "Text",ExpressionUUID->"1a7f40a1-eef2-4e3f-825b-e8e061ee1bf3"],
Cell[1459645, 28894, 245, 8, 44, "Text",ExpressionUUID->"02244a86-26dc-4e94-8185-b31c7666b25d"],
Cell[CellGroupData[{
Cell[1459915, 28906, 1222, 25, 64, "Input",ExpressionUUID->"80526f23-1cc5-427a-93ac-83640ae10c18"],
Cell[1461140, 28933, 61236, 1194, 625, "Output",ExpressionUUID->"ba825d0b-321f-4b94-b403-558ded217d3f"]
}, Open  ]],
Cell[1522391, 30130, 233, 4, 44, "Text",ExpressionUUID->"e753f2a2-a82c-41af-a3bc-4f78d59b5931"],
Cell[CellGroupData[{
Cell[1522649, 30138, 502, 9, 37, "Input",ExpressionUUID->"e7f55f50-1f84-4cb5-80ed-388c9db3728d"],
Cell[1523154, 30149, 28642, 513, 183, "Output",ExpressionUUID->"744d3f91-1ae6-4cbb-9fdf-34b6f8f1baeb"]
}, Closed]],
Cell[1551811, 30665, 292, 8, 38, "Text",ExpressionUUID->"1f260011-8a63-4fe9-8731-e015384b3a1f"],
Cell[CellGroupData[{
Cell[1552128, 30677, 512, 12, 37, "Input",ExpressionUUID->"94daf48a-e60c-4c59-af81-91f917d4bbe5"],
Cell[1552643, 30691, 32341, 588, 217, "Output",ExpressionUUID->"1d4faf71-1fe6-491a-b8c5-3977481d66f6"]
}, Open  ]],
Cell[1584999, 31282, 175, 3, 44, "Text",ExpressionUUID->"4d3e3a0c-a065-44e6-bf8b-3e9fc0292e80"],
Cell[CellGroupData[{
Cell[1585199, 31289, 669, 16, 64, "Input",ExpressionUUID->"42c2463c-0c3e-4f79-9957-09c670a15aff"],
Cell[1585871, 31307, 28599, 513, 183, "Output",ExpressionUUID->"c3608a3b-de4e-46ce-83ea-e28aa6d0976f"],
Cell[1614473, 31822, 32339, 588, 217, "Output",ExpressionUUID->"a87ed0d3-4c33-47c4-8aa7-3567f4053717"]
}, Closed]],
Cell[1646827, 32413, 276, 8, 38, "Text",ExpressionUUID->"33dd606c-4e78-4972-9eb7-287a3bbbd76c"],
Cell[CellGroupData[{
Cell[1647128, 32425, 858, 21, 90, "Input",ExpressionUUID->"ed6e4d09-1bc0-42f9-8653-239bc215d262"],
Cell[1647989, 32448, 28125, 507, 217, "Output",ExpressionUUID->"e974caa1-d83c-4826-9d2c-c12ef3c9d2e4"]
}, Closed]],
Cell[1676129, 32958, 218, 5, 38, "Text",ExpressionUUID->"5527eb96-c9e6-408f-a8eb-ad8db8a4eaa5"],
Cell[CellGroupData[{
Cell[1676372, 32967, 714, 19, 90, "Input",ExpressionUUID->"0da2d4c0-a56b-4c0e-9f32-621c48f716f1"],
Cell[1677089, 32988, 27976, 505, 217, "Output",ExpressionUUID->"ffd0b7f2-28f5-4ebc-a72b-e5b738cff618"]
}, Closed]],
Cell[1705080, 33496, 265, 8, 38, "Text",ExpressionUUID->"5cce6576-a938-4617-92d9-23917c7f29a2"],
Cell[CellGroupData[{
Cell[1705370, 33508, 714, 19, 90, "Input",ExpressionUUID->"25788d51-37ef-453b-89f3-17dc5ca1b874"],
Cell[1706087, 33529, 27956, 505, 217, "Output",ExpressionUUID->"75e18220-5f08-4be7-a1d8-f45890a69930"]
}, Closed]],
Cell[1734058, 34037, 486, 13, 182, "Text",ExpressionUUID->"4abcc6c3-e39d-4ffa-8813-cd6a987c926d"],
Cell[1734547, 34052, 191, 3, 40, "ItemNumbered",ExpressionUUID->"d06c0df4-7dba-4f9a-84a4-1d48babfe686"],
Cell[1734741, 34057, 183, 3, 40, "ItemNumbered",ExpressionUUID->"9e476f2f-3916-401d-859b-ea673364217b"],
Cell[1734927, 34062, 180, 3, 40, "ItemNumbered",ExpressionUUID->"1f8854ad-1b78-426a-8166-2a8a5b45297a"],
Cell[1735110, 34067, 841, 16, 188, "Text",ExpressionUUID->"77ceff58-95e6-48f8-aeb6-dcd7c97dc307"],
Cell[1735954, 34085, 1023, 20, 131, "Text",ExpressionUUID->"d908f31d-8e1b-49b3-8743-0447a31c2320"],
Cell[1736980, 34107, 441, 8, 73, "Text",ExpressionUUID->"8ee6bd78-a2e6-4209-bba6-066660248d35"]
}, Closed]],
Cell[CellGroupData[{
Cell[1737458, 34120, 159, 3, 46, "Subsection",ExpressionUUID->"1f61a4bd-9ecf-4e49-b42a-f01954bcebb4"],
Cell[1737620, 34125, 331, 7, 73, "Text",ExpressionUUID->"f42faffc-f26a-4023-b541-1d00b486aa92"],
Cell[1737954, 34134, 304, 6, 73, "Text",ExpressionUUID->"a53d5940-752a-4e10-9f1d-6eb46ba3bf03"],
Cell[1738261, 34142, 1140, 27, 217, "Text",ExpressionUUID->"f1b1e2de-305a-4056-903a-04f3c7da8a6a"],
Cell[1739404, 34171, 566, 12, 37, "Input",ExpressionUUID->"692da5ae-e1c3-4e75-8586-6d560d6b3508"],
Cell[1739973, 34185, 312, 9, 37, "Input",ExpressionUUID->"507b60d1-fa8a-415f-b6fb-40e2a2ee650b"],
Cell[CellGroupData[{
Cell[1740310, 34198, 442, 11, 37, "Input",ExpressionUUID->"48bf49c1-5459-437d-bee1-f313bc2bc1a7"],
Cell[1740755, 34211, 2440, 67, 298, "Output",ExpressionUUID->"d4b8b187-7094-41f8-a44e-dc71394f2a92"]
}, Open  ]],
Cell[1743210, 34281, 502, 13, 37, "Input",ExpressionUUID->"7e1ba02f-34c9-4eba-9763-b370a5477cd5"],
Cell[CellGroupData[{
Cell[1743737, 34298, 289, 7, 58, "Input",ExpressionUUID->"e37574bb-009e-49d9-9407-92e70cc9b49f"],
Cell[1744029, 34307, 184, 3, 42, "Output",ExpressionUUID->"2778728b-2bc4-4ae7-8c90-8b5d0500a7df"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1744250, 34315, 289, 7, 58, "Input",ExpressionUUID->"1113fdb0-5095-4a3c-8b26-d2d272a72eb0"],
Cell[1744542, 34324, 157, 3, 42, "Output",ExpressionUUID->"e030b881-c2cb-4b1f-a8d0-05e91df7bb02"]
}, Open  ]],
Cell[1744714, 34330, 217, 5, 44, "Text",ExpressionUUID->"a865f4fd-1e14-4b21-8be5-69f58e765a81"],
Cell[1744934, 34337, 459, 12, 37, "Input",ExpressionUUID->"6fe8dd29-9ec4-47a2-9079-3f1fb3fc93b2"],
Cell[CellGroupData[{
Cell[1745418, 34353, 256, 6, 61, "Input",ExpressionUUID->"48e5c2a1-de0e-4d5b-8452-f9102a7c96df"],
Cell[1745677, 34361, 324833, 5364, 300, 319901, 5282, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"1b886047-d4ad-4c40-b96f-0f1b06640ea3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2070547, 39730, 364, 9, 37, "Input",ExpressionUUID->"5357871a-6bca-4e70-a28b-5dc1e21b6bc5"],
Cell[2070914, 39741, 3947, 104, 303, "Output",ExpressionUUID->"6363b007-9226-4169-ae80-646e24eeb8f0"]
}, Open  ]],
Cell[2074876, 39848, 492, 9, 102, "Text",ExpressionUUID->"00d512ee-7603-4b9f-b843-e996867d3da7"],
Cell[2075371, 39859, 307, 7, 73, "Text",ExpressionUUID->"8e7ec426-3252-41a5-9003-11381873460c"],
Cell[CellGroupData[{
Cell[2075703, 39870, 821, 24, 64, "Input",ExpressionUUID->"3f9144f7-38dc-4bf5-a9c1-5280a7e4f73f"],
Cell[2076527, 39896, 954, 29, 69, "Output",ExpressionUUID->"adc8994b-9f21-4efb-8a29-4052c5acc9f5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2077518, 39930, 344, 8, 37, "Input",ExpressionUUID->"de85fe1a-4b23-49e8-99a1-1378bc6e5202"],
Cell[2077865, 39940, 311, 7, 42, "Output",ExpressionUUID->"e46c7870-721a-48e9-a3c8-bd393271f102"]
}, Open  ]],
Cell[2078191, 39950, 793, 25, 81, "Text",ExpressionUUID->"55ec0710-e270-451d-a4f2-259bd2564de0"],
Cell[2078987, 39977, 929, 25, 121, "Input",ExpressionUUID->"99801138-e3e7-4be3-92cf-d76fd5b05389"],
Cell[CellGroupData[{
Cell[2079941, 40006, 267, 5, 37, "Input",ExpressionUUID->"91a4f187-1637-49d3-af26-d42c19588c73"],
Cell[2080211, 40013, 9035, 188, 305, "Output",ExpressionUUID->"a704020b-c0ef-427d-a437-8c66db858964"]
}, Open  ]],
Cell[2089261, 40204, 310, 7, 73, "Text",ExpressionUUID->"000cad90-7b48-4659-a980-ccb4a7b814ef"],
Cell[CellGroupData[{
Cell[2089596, 40215, 715, 18, 61, "Input",ExpressionUUID->"935279f7-956e-4e30-8f22-c5e8e5a942e3"],
Cell[2090314, 40235, 2638, 80, 201, "Output",ExpressionUUID->"f97573f3-73fd-456d-b5c2-b14ea458e876"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2092989, 40320, 531, 13, 37, "Input",ExpressionUUID->"253dfdb3-7e4b-4ae2-8a14-e861504c2247"],
Cell[2093523, 40335, 842, 26, 42, "Output",ExpressionUUID->"f4fae8ca-7e14-436e-8241-85ccff1cd9ab"]
}, Open  ]],
Cell[2094380, 40364, 875, 20, 59, "Input",ExpressionUUID->"d8c45558-419e-4831-8061-bd8e29557f39"],
Cell[CellGroupData[{
Cell[2095280, 40388, 214, 4, 37, "Input",ExpressionUUID->"45050b1c-c8ac-4428-8ab6-481c76d66877"],
Cell[2095497, 40394, 9013, 187, 305, "Output",ExpressionUUID->"6fe9f7b3-2ada-4e4c-981a-aba7b0b0287e"]
}, Open  ]],
Cell[2104525, 40584, 800, 16, 217, "Text",ExpressionUUID->"5052354a-c71d-47b9-8b3e-88514d7db537"],
Cell[CellGroupData[{
Cell[2105350, 40604, 295, 7, 37, "Input",ExpressionUUID->"5a3d6054-10dd-475f-a171-a77366c0e171"],
Cell[2105648, 40613, 285, 7, 42, "Output",ExpressionUUID->"06e8e58e-72c0-4cc3-ad34-2206fccad2a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2105970, 40625, 654, 18, 140, "Input",ExpressionUUID->"e9286853-7cd9-432f-be7a-618e112040cb"],
Cell[2106627, 40645, 160, 3, 42, "Output",ExpressionUUID->"5a95d7b6-58cd-4795-89e9-5575155d15f6"],
Cell[2106790, 40650, 158, 3, 42, "Output",ExpressionUUID->"3124389b-71a3-46eb-8673-5231275a6e75"]
}, Open  ]],
Cell[2106963, 40656, 238, 4, 44, "Text",ExpressionUUID->"d35bade6-3e38-47e1-953a-5901f09e6197"],
Cell[CellGroupData[{
Cell[2107226, 40664, 658, 18, 96, "Input",ExpressionUUID->"c3480547-3dc7-40de-992c-d5f171df6c93"],
Cell[2107887, 40684, 9019, 186, 293, "Output",ExpressionUUID->"edbe87c7-8c58-4b0b-b4de-9fc158e39834"]
}, Open  ]],
Cell[2116921, 40873, 174, 3, 44, "Text",ExpressionUUID->"8a4ec082-23ab-4036-b6ab-b52a4783e1bd"]
}, Closed]],
Cell[CellGroupData[{
Cell[2117132, 40881, 160, 3, 46, "Subsection",ExpressionUUID->"75547057-7160-4294-9458-76a6d5619b62"],
Cell[2117295, 40886, 496, 9, 131, "Text",ExpressionUUID->"d51369ca-96b1-4caa-a467-5dab9f8f4bfa"],
Cell[2117794, 40897, 1330, 35, 172, "ItemNumbered",ExpressionUUID->"15e65fbe-19a2-458c-a2a1-51102eed7e19"],
Cell[2119127, 40934, 264, 4, 40, "ItemNumbered",ExpressionUUID->"3051653b-3474-4fcd-9099-490e93a1b799"],
Cell[2119394, 40940, 263, 4, 40, "ItemNumbered",ExpressionUUID->"1d3ee48e-f758-478d-b022-d641b6b2aa4e"],
Cell[2119660, 40946, 313, 7, 40, "ItemNumbered",ExpressionUUID->"16db0386-5ad1-437b-893e-a999670aaa0c"],
Cell[2119976, 40955, 177, 3, 44, "Text",ExpressionUUID->"382c0ef1-d24d-4ee7-85ca-af1c9b5aac96"],
Cell[2120156, 40960, 1809, 36, 870, "ExternalLanguage",ExpressionUUID->"a34606dc-bfa5-498b-b875-6b4beb802131"],
Cell[2121968, 40998, 766, 14, 332, "Text",ExpressionUUID->"46b99432-8b52-4233-9b84-4260c9b8a778"],
Cell[2122737, 41014, 701, 16, 188, "Text",ExpressionUUID->"fc4cc438-02a4-406b-973c-7c69e34fb590"],
Cell[CellGroupData[{
Cell[2123463, 41034, 1615, 36, 194, "Input",ExpressionUUID->"5dd4cd29-1a7a-414c-ba55-a8f30a2995c4"],
Cell[2125081, 41072, 6819, 150, 306, "Output",ExpressionUUID->"eaf36964-7799-4eaf-8901-7ae933abd41c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2131937, 41227, 273, 6, 37, "Input",ExpressionUUID->"ad8684c6-3d66-46d7-a594-03da61620a64"],
Cell[2132213, 41235, 183, 3, 42, "Output",ExpressionUUID->"5386ea85-9e09-4f66-b025-0681e13cc6cf"]
}, Open  ]],
Cell[2132411, 41241, 313, 6, 44, "Text",ExpressionUUID->"76fc9c54-3bc7-49af-b788-3a55282a8ef1"],
Cell[CellGroupData[{
Cell[2132749, 41251, 2216, 56, 252, "Input",ExpressionUUID->"25c39d78-c776-4a43-bbc6-848d61209fc3"],
Cell[2134968, 41309, 9093, 182, 313, "Output",ExpressionUUID->"dfdae4d6-192d-4fd1-949c-dcca54914ace"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2144098, 41496, 422, 11, 56, "Input",ExpressionUUID->"be5cce75-1641-4c0d-94ca-15f5b278dd41"],
Cell[2144523, 41509, 177, 3, 42, "Output",ExpressionUUID->"3881dbb2-0100-4457-9dc9-3eb85bfeb51b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2144737, 41517, 206, 3, 51, "WolframAlphaLong",ExpressionUUID->"cf0392d9-bffc-46c7-b163-89f8e80a6422"],
Cell[2144946, 41522, 96342, 1923, 3648, "Print",ExpressionUUID->"2d758c70-9071-4e91-afbf-1dff78f6589a"]
}, Closed]],
Cell[CellGroupData[{
Cell[2241325, 43450, 214, 4, 31, "Input",ExpressionUUID->"f3876c49-93bc-4309-b842-346feeed8d47"],
Cell[2241542, 43456, 155, 3, 42, "Output",ExpressionUUID->"d3b7df8e-15a1-4764-8161-d5a29307d506"]
}, Open  ]],
Cell[2241712, 43462, 169, 3, 44, "Text",ExpressionUUID->"e30edb36-fadd-4302-8c89-ed2556428635"],
Cell[2241884, 43467, 662, 15, 159, "Text",ExpressionUUID->"57814630-0670-41bb-9bef-0a1851dab53d"],
Cell[CellGroupData[{
Cell[2242571, 43486, 764, 21, 64, "Input",ExpressionUUID->"06f3112a-9f57-4b40-94fd-3348e1fe745a"],
Cell[2243338, 43509, 8958, 167, 298, "Output",ExpressionUUID->"7bd8726e-7c9e-4c43-8a04-1f7068b6b7da"]
}, Open  ]],
Cell[2252311, 43679, 230, 4, 44, "Text",ExpressionUUID->"2ce2bc67-2467-480e-a422-ace4d3dfff35"],
Cell[CellGroupData[{
Cell[2252566, 43687, 275, 6, 37, "Input",ExpressionUUID->"6f0fbc8f-2ce4-4e7e-a5f4-c8ed43ca88c7"],
Cell[2252844, 43695, 1428, 43, 63, "Output",ExpressionUUID->"382cd517-4ae4-4e5d-92ba-8b1ce3b07eee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2254309, 43743, 1124, 34, 127, "Input",ExpressionUUID->"c530eb44-4778-4f8a-b55c-c04471d8c387"],
Cell[2255436, 43779, 13811, 248, 303, "Output",ExpressionUUID->"8b995453-3d91-4649-bf6b-2d33d907087f"]
}, Open  ]],
Cell[2269262, 44030, 193, 3, 44, "Text",ExpressionUUID->"d33e257e-6966-4291-9181-4f920d83dcda"],
Cell[CellGroupData[{
Cell[2269480, 44037, 759, 21, 64, "Input",ExpressionUUID->"79bfb23b-594d-4604-b8f7-e75579848f4f"],
Cell[2270242, 44060, 229, 4, 42, "Output",ExpressionUUID->"4cc2dacf-1854-4ab6-9278-fd49112c7bcf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2270508, 44069, 1164, 34, 127, "Input",ExpressionUUID->"b350a5d6-d066-47db-b90e-fc81665b4fa0"],
Cell[2271675, 44105, 193, 3, 42, "Output",ExpressionUUID->"a57fe23e-4c77-4a1f-b67f-c822c9fbd3fc"]
}, Open  ]],
Cell[2271883, 44111, 679, 15, 159, "Text",ExpressionUUID->"79fa5c78-2ac9-42b2-901f-fd228a166333"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

